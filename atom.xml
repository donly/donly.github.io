<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MAG's Note</title><link href="https://magicalboy.com/" rel="alternate"></link><link href="https://magicalboy.com//atom.xml" rel="self"></link><id>https://magicalboy.com/</id><updated>2018-01-25T15:00:00+08:00</updated><entry><title>iOS 11.3 Developer beta</title><link href="https://magicalboy.com/ios-11-3-beta-update.html" rel="alternate"></link><published>2018-01-25T15:00:00+08:00</published><updated>2018-01-25T15:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2018-01-25:/ios-11-3-beta-update.html</id><summary type="html">&lt;p&gt;这是 iOS 11.3 的第一个 &lt;code&gt;beta&lt;/code&gt; 版本，更新后版本号为：&lt;code&gt;11.3 (15E5167f)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配套的 Xcode 9.3 beta 版本号为 &lt;code&gt;9Q98q&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;主要更新亮点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Message on iCloud&lt;/li&gt;
&lt;li&gt;iBooks 改名为 Books&lt;/li&gt;
&lt;li&gt;AirPlay 2&lt;/li&gt;
&lt;li&gt;Business Chat&lt;/li&gt;
&lt;li&gt;ARKit 1.5&lt;/li&gt;
&lt;li&gt;Health App 增加 Health Records&lt;/li&gt;
&lt;li&gt;iPhone X 新增4个 “动话表情”&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;这是 iOS 11.3 的第一个 &lt;code&gt;beta&lt;/code&gt; 版本，更新后版本号为：&lt;code&gt;11.3 (15E5167f)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配套的 Xcode 9.3 beta 版本号为 &lt;code&gt;9Q98q&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;主要更新亮点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Message on iCloud&lt;/li&gt;
&lt;li&gt;iBooks 改名为 Books&lt;/li&gt;
&lt;li&gt;AirPlay 2&lt;/li&gt;
&lt;li&gt;Business Chat&lt;/li&gt;
&lt;li&gt;ARKit 1.5&lt;/li&gt;
&lt;li&gt;Health App 增加 Health Records&lt;/li&gt;
&lt;li&gt;iPhone X 新增4个 “动话表情”&lt;/li&gt;
&lt;/ul&gt;
</content><category term="apple"></category></entry><entry><title>macOS Hight Sierra Security Update</title><link href="https://magicalboy.com/macos-hight-sierra-security-update.html" rel="alternate"></link><published>2017-11-30T10:30:00+08:00</published><updated>2017-11-30T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-30:/macos-hight-sierra-security-update.html</id><summary type="html">&lt;p&gt;Apple 最新版本的系统 macOS Hight Sierra 被暴出 &lt;strong&gt;严重安全漏洞&lt;/strong&gt;，即使是小学生也能轻易以管理员身份登录陌生人的Mac。具体描述为：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
macOS Sierra 以及之前的旧版本并没有这个 bug，但所有的 macOS High Sierra 都会受这一漏洞影响，在打开 Mac 到登陆界面或者进入系统偏好设置里修改用户群组管理、安全隐私等选项时，用户名输入 “root” 密码填空，然后多试几次 Return 按钮就能顺利登陆。
&lt;/pre&gt;
刚好有同学过来借宿，不知道我的&lt;del&gt;小秘密以及相关&lt;/del&gt;隐私暴光了没。&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;亡羊补牢，打上 &lt;code&gt;2017-001&lt;/code&gt; 安全补丁。&lt;/p&gt;
&lt;p&gt;建议将自动更新打开，关闭访客户账户等提高安全性。&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;Apple 最新版本的系统 macOS Hight Sierra 被暴出 &lt;strong&gt;严重安全漏洞&lt;/strong&gt;，即使是小学生也能轻易以管理员身份登录陌生人的Mac。具体描述为：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
macOS Sierra 以及之前的旧版本并没有这个 bug，但所有的 macOS High Sierra 都会受这一漏洞影响，在打开 Mac 到登陆界面或者进入系统偏好设置里修改用户群组管理、安全隐私等选项时，用户名输入 “root” 密码填空，然后多试几次 Return 按钮就能顺利登陆。
&lt;/pre&gt;
刚好有同学过来借宿，不知道我的&lt;del&gt;小秘密以及相关&lt;/del&gt;隐私暴光了没。&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;亡羊补牢，打上 &lt;code&gt;2017-001&lt;/code&gt; 安全补丁。&lt;/p&gt;
&lt;p&gt;建议将自动更新打开，关闭访客户账户等提高安全性。&lt;/p&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>iOS 11.2 Developer beta</title><link href="https://magicalboy.com/ios-11-2-beta-update.html" rel="alternate"></link><published>2017-11-28T10:30:00+08:00</published><updated>2017-11-30T11:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-28:/ios-11-2-beta-update.html</id><summary type="html">&lt;p&gt;iOS 11.2 更新至 &lt;code&gt;beta 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11.2 (15C5111a)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 新增了自动更新订阅功能，新增类 &lt;code&gt;SKProductDiscount&lt;/code&gt; 和 &lt;code&gt;SKProductSubscriptionPeriod&lt;/code&gt;，以及 &lt;cite&gt;SKProduct&lt;/cite&gt; 类属性 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936878-introductoryprice"&gt;introductoryPrice&lt;/a&gt; 和 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936884-subscriptionperiod"&gt;subscriptionPeriod&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 Beta 相关的 Bugs 修复和已知问题列表&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_17_2017/iOS_11.2_beta_4_Release_Notes.pdf"&gt;iOS 11.2 beta 4 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_28_2017/iOS_11.2_beta_5_Release_Notes.pdf"&gt;iOS 11.2 beta 5 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;iOS 11.2 更新至 &lt;code&gt;beta 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11.2 (15C5111a)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 新增了自动更新订阅功能，新增类 &lt;code&gt;SKProductDiscount&lt;/code&gt; 和 &lt;code&gt;SKProductSubscriptionPeriod&lt;/code&gt;，以及 &lt;cite&gt;SKProduct&lt;/cite&gt; 类属性 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936878-introductoryprice"&gt;introductoryPrice&lt;/a&gt; 和 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936884-subscriptionperiod"&gt;subscriptionPeriod&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 Beta 相关的 Bugs 修复和已知问题列表&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_17_2017/iOS_11.2_beta_4_Release_Notes.pdf"&gt;iOS 11.2 beta 4 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_28_2017/iOS_11.2_beta_5_Release_Notes.pdf"&gt;iOS 11.2 beta 5 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="apple"></category></entry><entry><title>Docker on Raspberry Pi 3</title><link href="https://magicalboy.com/docker-on-raspberry-pi-3.html" rel="alternate"></link><published>2017-11-24T14:25:00+08:00</published><updated>2017-11-24T14:25:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-24:/docker-on-raspberry-pi-3.html</id><summary type="html">&lt;img alt="Docker icon via wikipedia" class="align-right" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Docker_%28container_engine%29_logo.svg/250px-Docker_%28container_engine%29_logo.svg.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;本文环境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 3, Raspbian stretch&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/helje5/dockSwiftOnARM"&gt;dockSwiftOnARM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docker version 17.11.0-ce, build 1caf76c&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="docker"&gt;
&lt;h2&gt;什么是 Docker?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;请阅读官方文档：&lt;a class="reference external" href="https://docs.docker.com/engine/docker-overview/"&gt;Understanding Docker&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;另推荐入门教程：&lt;a class="reference external" href="https://yeasy.gitbooks.io/docker_practice"&gt;Docker —— 从入门到实践&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装 Docker&lt;/h2&gt;
&lt;p&gt;安装与结果部分日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -sSL https://get.docker.com &lt;span class="p"&gt;|&lt;/span&gt; sh

Client:
 Version:      &lt;span class="m"&gt;17&lt;/span&gt;.11.0-ce
 API version:  &lt;span class="m"&gt;1&lt;/span&gt;.34
 Go version:   go1.8.3
 Git commit:   1caf76c
 Built …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="Docker icon via wikipedia" class="align-right" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Docker_%28container_engine%29_logo.svg/250px-Docker_%28container_engine%29_logo.svg.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;本文环境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Raspberry Pi 3, Raspbian stretch&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/helje5/dockSwiftOnARM"&gt;dockSwiftOnARM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Docker version 17.11.0-ce, build 1caf76c&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="docker"&gt;
&lt;h2&gt;什么是 Docker?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;请阅读官方文档：&lt;a class="reference external" href="https://docs.docker.com/engine/docker-overview/"&gt;Understanding Docker&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;另推荐入门教程：&lt;a class="reference external" href="https://yeasy.gitbooks.io/docker_practice"&gt;Docker —— 从入门到实践&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装 Docker&lt;/h2&gt;
&lt;p&gt;安装与结果部分日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl -sSL https://get.docker.com &lt;span class="p"&gt;|&lt;/span&gt; sh

Client:
 Version:      &lt;span class="m"&gt;17&lt;/span&gt;.11.0-ce
 API version:  &lt;span class="m"&gt;1&lt;/span&gt;.34
 Go version:   go1.8.3
 Git commit:   1caf76c
 Built:        Mon Nov &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;19&lt;/span&gt;:01:07 &lt;span class="m"&gt;2017&lt;/span&gt;
 OS/Arch:      linux/arm

Server:
 Version:      &lt;span class="m"&gt;17&lt;/span&gt;.11.0-ce
 API version:  &lt;span class="m"&gt;1&lt;/span&gt;.34 &lt;span class="o"&gt;(&lt;/span&gt;minimum version &lt;span class="m"&gt;1&lt;/span&gt;.12&lt;span class="o"&gt;)&lt;/span&gt;
 Go version:   go1.8.3
 Git commit:   1caf76c
 Built:        Mon Nov &lt;span class="m"&gt;20&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;:54:12 &lt;span class="m"&gt;2017&lt;/span&gt;
 OS/Arch:      linux/arm
 Experimental: &lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;配置 Docker&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;开机自动启动&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install &lt;span class="nb"&gt;enable&lt;/span&gt; docker
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;手动启动可以使用以下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo systemctl start docker
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="docker-client"&gt;
&lt;h3&gt;启动 Docker Client&lt;/h3&gt;
&lt;p&gt;Client 只能在 &lt;cite&gt;root&lt;/cite&gt; 用户或在 &lt;cite&gt;docker&lt;/cite&gt; 组用户使用，将 &lt;cite&gt;pi&lt;/cite&gt; 用户添加到 &lt;cite&gt;docker&lt;/cite&gt; 组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo usermod -aG docker &lt;span class="nv"&gt;$USER&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果使用 &lt;cite&gt;ssh&lt;/cite&gt; 登录，需要重新连接以生效。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;使用 Docker&lt;/h2&gt;
&lt;p&gt;运行你的第一个 ARM 镜像（image）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker run -ti arm32v6/alpine:3.5 /bin/sh
Unable to find image &lt;span class="s1"&gt;&amp;#39;arm32v6/alpine:3.5&amp;#39;&lt;/span&gt; locally
&lt;span class="m"&gt;3&lt;/span&gt;.5: Pulling from arm32v6/alpine
355842f7aa77: Pull &lt;span class="nb"&gt;complete&lt;/span&gt;
559bc1020041: Pull &lt;span class="nb"&gt;complete&lt;/span&gt;
Digest: sha256:5fcf00d09906e2ab2df5f421d066d992b44dc7690702b0abea7fd0dc0e130f72
Status: Downloaded newer image &lt;span class="k"&gt;for&lt;/span&gt; arm32v6/alpine:3.5
/ &lt;span class="c1"&gt;# ls&lt;/span&gt;
ls     lsmod  lsof   lspci  lsusb
/ &lt;span class="c1"&gt;# cat /etc/os-release&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Alpine Linux&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;alpine
&lt;span class="nv"&gt;VERSION_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.5.2
&lt;span class="nv"&gt;PRETTY_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Alpine Linux v3.5&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;HOME_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://alpinelinux.org&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;BUG_REPORT_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://bugs.alpinelinux.org&amp;quot;&lt;/span&gt;
/ &lt;span class="c1"&gt;# echo &amp;quot;Hi, this is a tiny Linux distribution!&amp;quot; | base64&lt;/span&gt;
SGksIHRoaXMgaXMgYSB0aW55IExpbnV4IGRpc3RyaWJ1dGlvbiEK
/ &lt;span class="c1"&gt;# echo &amp;quot;SGksIHRoaXMgaXMgYSB0aW55IExpbnV4IGRpc3RyaWJ1dGlvbiEK&amp;quot; | base64 -d&lt;/span&gt;
Hi, this is a tiny Linux distribution!
/ &lt;span class="c1"&gt;# exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;本文参考&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.alexellis.io/getting-started-with-docker-on-raspberry-pi/"&gt;Get Started with Docker 1.12 on Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://yeasy.gitbooks.io/docker_practice/install/raspberry-pi.html"&gt;树莓派卡片电脑安装 Docker CE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Docker"></category></entry><entry><title>Android Wear</title><link href="https://magicalboy.com/android_wear.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/android_wear.html</id><summary type="html">&lt;img alt="Android wear for watch" src="images/Android-Wear.jpg" /&gt;
&lt;p&gt;可穿戴智能设备终于要火起来了，大多数拥有者认为自己是科技潮人。可穿戴智能设备充满了潜在市场，目前主要有智能手表，眼镜和可穿戴健身设备。可穿戴设备以后可以发展到鞋子，手套甚至笔等。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Android Wear&lt;/h2&gt;
&lt;p&gt;2014年3月19日，Google 发布了可穿戴设备 SDK 的开发者预览版（&lt;a class="reference external" href="https://developer.android.com/wear/index.html"&gt;https://developer.android.com/wear/index.html&lt;/a&gt;），率先打开可穿戴智能设备平台这个大门。所以，我们可以通过更新 SDK 获取 Android Wear 模拟器来尝个新鲜。&lt;/p&gt;
&lt;p&gt;Android Wear 开发平台搭建步骤：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Sign Up for the Developer Preview：&lt;a class="reference external" href="https://developer.android.com/wear/preview/signup.html"&gt;https://developer.android.com/wear/preview/signup.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="Sign Up for the Developer Preview" src="images/sign_up_google_developer_preview.png" /&gt;
&lt;p&gt;在等待申请请求通过同时，配置项目环境，请留意您申请的 Gmail …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;img alt="Android wear for watch" src="images/Android-Wear.jpg" /&gt;
&lt;p&gt;可穿戴智能设备终于要火起来了，大多数拥有者认为自己是科技潮人。可穿戴智能设备充满了潜在市场，目前主要有智能手表，眼镜和可穿戴健身设备。可穿戴设备以后可以发展到鞋子，手套甚至笔等。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Android Wear&lt;/h2&gt;
&lt;p&gt;2014年3月19日，Google 发布了可穿戴设备 SDK 的开发者预览版（&lt;a class="reference external" href="https://developer.android.com/wear/index.html"&gt;https://developer.android.com/wear/index.html&lt;/a&gt;），率先打开可穿戴智能设备平台这个大门。所以，我们可以通过更新 SDK 获取 Android Wear 模拟器来尝个新鲜。&lt;/p&gt;
&lt;p&gt;Android Wear 开发平台搭建步骤：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Sign Up for the Developer Preview：&lt;a class="reference external" href="https://developer.android.com/wear/preview/signup.html"&gt;https://developer.android.com/wear/preview/signup.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="Sign Up for the Developer Preview" src="images/sign_up_google_developer_preview.png" /&gt;
&lt;p&gt;在等待申请请求通过同时，配置项目环境，请留意您申请的 Gmail 邮箱。&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;打开 Android SDK Manager 更新 Android SDK Tools 至最新版本（22.6.1)。安装更新后便可以见到 Android 4.4 下有 Android Wear ARM EABI v7a System Image，选择并安装它。&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="Android Wear ARM EABI v7a System Image" src="images/android_wear_image.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;收到注册确认邮件，可选成为 Google Play 商店提供的 Android Wear Preview app 测试者。下载附件 Preview Support library and samples（AndroidWearPreview.zip）。&lt;/li&gt;
&lt;li&gt;升级 ADT（当前最新 &lt;a class="reference external" href="http://dl.google.com/android/ADT-22.6.1.zip"&gt;22.6.1&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;打开 Eclipse 为 Wear 创建新的 Android Virtual Device (AVD)。&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="android_wear_avd" src="images/android_wear_avd.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;运行刚刚创建的 Wear AVD，显示的是时间和未连接的手机图标，表示 wear 未与 Android 设备匹配上。&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="未匹配的 Android Wear" src="images/android_wear_no_pair.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Android Wear 提示信息" src="images/android_wear_round.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Android Wear 的特色是通知方式和界面都很 Cool。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考资料：&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.android.com/wear/preview/start.html"&gt;Get Started with the Developer Preview | Android Developers&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Wear"></category><category term="Android"></category></entry><entry><title>Bluetooth</title><link href="https://magicalboy.com/bluetooth.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/bluetooth.html</id><summary type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS&lt;/h2&gt;
&lt;p&gt;Bluetooth access on the ios is very limited. As a matter of fact you can only access it through the GameKit.&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS&lt;/h2&gt;
&lt;p&gt;Bluetooth access on the ios is very limited. As a matter of fact you can only access it through the GameKit.&lt;/p&gt;
&lt;/div&gt;
</content><category term="bluetooth"></category></entry><entry><title>Brew</title><link href="https://magicalboy.com/brew.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/brew.html</id><summary type="html">&lt;div class="section" id="homebrew"&gt;
&lt;h2&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;OS X 或缺的软件包管理器，使用 Ruby 语言实现。官网：&lt;a class="reference external" href="http://brew.sh/index_zh-cn.html"&gt;http://brew.sh/index_zh-cn.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装日志&lt;/h2&gt;
&lt;p&gt;在 OS X 10.9.2，Xcode 5.1 下安装 Brew 0.9.5 的日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/mxcl/homebrew/go/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; This script will install:
/usr/local/bin/brew
/usr …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="homebrew"&gt;
&lt;h2&gt;Homebrew&lt;/h2&gt;
&lt;p&gt;OS X 或缺的软件包管理器，使用 Ruby 语言实现。官网：&lt;a class="reference external" href="http://brew.sh/index_zh-cn.html"&gt;http://brew.sh/index_zh-cn.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装日志&lt;/h2&gt;
&lt;p&gt;在 OS X 10.9.2，Xcode 5.1 下安装 Brew 0.9.5 的日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/mxcl/homebrew/go/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; This script will install:
/usr/local/bin/brew
/usr/local/Library/...
/usr/local/share/man/man1/brew.1
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; The following directories will be made group writable:
/usr/local/.
/usr/local/include
/usr/local/lib
/usr/local/share
/usr/local/share/locale
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; The following directories will have their group &lt;span class="nb"&gt;set&lt;/span&gt; to admin:
/usr/local/.
/usr/local/include
/usr/local/lib
/usr/local/share
/usr/local/share/locale

Press RETURN to &lt;span class="k"&gt;continue&lt;/span&gt; or any other key to &lt;span class="nv"&gt;abort&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; /usr/bin/sudo /bin/chmod g+rwx /usr/local/. /usr/local/include /usr/local/lib /usr/local/share /usr/local/share/locale
Password:
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; /usr/bin/sudo /usr/bin/chgrp admin /usr/local/. /usr/local/include /usr/local/lib /usr/local/share /usr/local/share/locale
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; /usr/bin/sudo /bin/mkdir /Library/Caches/Homebrew
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; /usr/bin/sudo /bin/chmod g+rwx /Library/Caches/Homebrew
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing the Command Line Tools &lt;span class="o"&gt;(&lt;/span&gt;expect a GUI popup&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; /usr/bin/sudo /usr/bin/xcode-select --install
xcode-select: note: install requested &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nb"&gt;command&lt;/span&gt; line developer tools
Press any key when the installation has completed.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading and installing Homebrew...
remote: Counting objects: &lt;span class="m"&gt;156977&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;44923&lt;/span&gt;/44923&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total &lt;span class="m"&gt;156977&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;110948&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;156977&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;110948&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
Receiving objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;156977&lt;/span&gt;/156977&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;29&lt;/span&gt;.38 MiB &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;368&lt;/span&gt;.00 KiB/s, &lt;span class="k"&gt;done&lt;/span&gt;.
Resolving deltas: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;110948&lt;/span&gt;/110948&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
From https://github.com/Homebrew/homebrew
 * &lt;span class="o"&gt;[&lt;/span&gt;new branch&lt;span class="o"&gt;]&lt;/span&gt;      master     -&amp;gt; origin/master
HEAD is now at 6a3b2d2 brew-unpack: remove obsoleted bottle &lt;span class="nv"&gt;workaround&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installation successful!
You should run &lt;span class="sb"&gt;`&lt;/span&gt;brew doctor&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; *before* you install anything.
Now type: brew &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>Cocoa Auto Layout</title><link href="https://magicalboy.com/cocoa-auto-layout.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/cocoa-auto-layout.html</id><summary type="html">&lt;p&gt;Auto Layout 是 iOS 6.0 和 Xcode 4.5 的新特性。&lt;/p&gt;
&lt;p&gt;使用 Cocoa Auto Layout 系统为用户界面元素定义布局约束，其中约束（Constraints）表示用户界面控件之间的关系，比如 “这些视图从头至尾排列”。&lt;/p&gt;
&lt;p&gt;Cocoa Auto Layout 让用户来定义界面元素的布局规则。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;视图之间的约束表示&lt;/h2&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;Auto Layout 是 iOS 6.0 和 Xcode 4.5 的新特性。&lt;/p&gt;
&lt;p&gt;使用 Cocoa Auto Layout 系统为用户界面元素定义布局约束，其中约束（Constraints）表示用户界面控件之间的关系，比如 “这些视图从头至尾排列”。&lt;/p&gt;
&lt;p&gt;Cocoa Auto Layout 让用户来定义界面元素的布局规则。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;视图之间的约束表示&lt;/h2&gt;
&lt;/div&gt;
</content><category term="cocoa"></category><category term="iOS"></category><category term="auto layout"></category></entry><entry><title>C++ 学习笔记</title><link href="https://magicalboy.com/cpp.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/cpp.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id13"&gt;概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id14"&gt;语法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id15"&gt;注释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id16"&gt;编译预处理指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#namespace" id="id17"&gt;命名空间 Namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#main" id="id18"&gt;main 函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id19"&gt;语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id20"&gt;标识符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id21"&gt;数据类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id22"&gt;系统指定的数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id23"&gt;变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id24"&gt;常量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id25"&gt;表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;概述&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;C++是20世纪80年代中期（发行于1983）由AT&amp;amp;T贝尔实验室的 Bjarne Stroustrup 开发的。&lt;/p&gt;
&lt;p&gt;属于面向对象语言，它包含 C 语言全部属性。&lt;/p&gt;
&lt;p&gt;使用很广泛，不得不学。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;语法&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;注释&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 这是单行注释&lt;/span&gt;
&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 这是&lt;/span&gt;
&lt;span class="cm"&gt; * 多行的注释&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;编译预处理指令&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;编译器对 source code 编译之前做的事。用 &amp;quot;#&amp;quot; 开头的命令行来表示。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;filename&amp;gt; // 尖括号表示包含的是 C++ 标准库的头文件&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;book …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id13"&gt;概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id14"&gt;语法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id15"&gt;注释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id16"&gt;编译预处理指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#namespace" id="id17"&gt;命名空间 Namespace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#main" id="id18"&gt;main 函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id19"&gt;语句&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id20"&gt;标识符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id21"&gt;数据类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id22"&gt;系统指定的数据类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id23"&gt;变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id24"&gt;常量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id25"&gt;表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id13"&gt;概述&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;C++是20世纪80年代中期（发行于1983）由AT&amp;amp;T贝尔实验室的 Bjarne Stroustrup 开发的。&lt;/p&gt;
&lt;p&gt;属于面向对象语言，它包含 C 语言全部属性。&lt;/p&gt;
&lt;p&gt;使用很广泛，不得不学。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;语法&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;注释&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 这是单行注释&lt;/span&gt;
&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * 这是&lt;/span&gt;
&lt;span class="cm"&gt; * 多行的注释&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;编译预处理指令&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;编译器对 source code 编译之前做的事。用 &amp;quot;#&amp;quot; 开头的命令行来表示。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;filename&amp;gt; // 尖括号表示包含的是 C++ 标准库的头文件&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;book.h&amp;quot;   // 包含的是用户自己的头文件&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="namespace"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id17"&gt;命名空间 Namespace&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;是 C++ 编译系统为各种命名对象（即标识符）所指定的有效范围。std (Standard 的缩写) 表示 C++ 标准库的所有命名对象，使用分号结束。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="main"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id18"&gt;main 函数&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;// 程序执行入口&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;int 返回值给 OS。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;语句&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;函数体内包括两类语句：
- 声明语句：告诉编译系统本函数使用哪些数据。
- 可执行语句：导致某些动作发生，在翻译成机器语言指令后执行。包括赋值语句，return语句等。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;miles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;            &lt;span class="c1"&gt;// 声明语句&lt;/span&gt;
&lt;span class="n"&gt;cin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;miles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;           &lt;span class="c1"&gt;// 输入语句&lt;/span&gt;
&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;miles&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// 输出语句&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;标识符&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;标识符用来给程序中的各种数据元素和对象命名的。&lt;/p&gt;
&lt;p&gt;保留字，即关键字属于 C++ 的特殊标识符。比如：const, float, include, int, namespace, retrun 等。程序员自定义的标识符，如上例中的 miles。&lt;/p&gt;
&lt;p&gt;标识符语法规则：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;必须以字母或下划线开头。&lt;/li&gt;
&lt;li&gt;标识符中只能包含字母，数字或下划线。（上一条说了不能使用数字开头）&lt;/li&gt;
&lt;li&gt;不能使用 C++ 保留字。&lt;/li&gt;
&lt;li&gt;大小定敏感。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命名规则：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;最好取有意义的名称，见名知义。&lt;/li&gt;
&lt;li&gt;建议使用 “匈牙利符号” 的命名规则，即非首单词的第一个字母大写。比如：dollarsPerHour.&lt;/li&gt;
&lt;li&gt;不管使用什么命名规则，一定要保持命名规则的一致性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;数据类型&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;系统指定的数据类型&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;整型 int&lt;/li&gt;
&lt;li&gt;实型 float&lt;/li&gt;
&lt;li&gt;布尔类型 bool (George Boole）&lt;/li&gt;
&lt;li&gt;字符型 char (1 byte)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id23"&gt;变量&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;常量&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;表达式&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="C++"></category></entry><entry><title>Epub 电子书</title><link href="https://magicalboy.com/epub.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/epub.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;ePub 中文乱码处理&lt;/h2&gt;
&lt;p&gt;修改字体集：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zw&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sony&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ebook&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sony&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ebook&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;tt0011m_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///../../&lt;/span&gt;&lt;span class="nt"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;mmcblk0p1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;DK_System&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;font&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;ePub 中文乱码处理&lt;/h2&gt;
&lt;p&gt;修改字体集：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;font-face&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;font-family&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zw&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="nt"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sony&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ebook&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;Data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sony&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ebook&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;FONT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;tt0011m_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///../../&lt;/span&gt;&lt;span class="nt"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;mmcblk0p1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;DK_System&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;font&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;abook&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;media&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sdcard&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;sdcard&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;res&lt;/span&gt;&lt;span class="o"&gt;:///&lt;/span&gt;&lt;span class="nt"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;DroidSansFallback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;fonts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;zw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ttf&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上代码支持SONY、DR800SG、NOOK、翰林V3+等各机型。&lt;/p&gt;
&lt;p&gt;更具体操作，请参考：&lt;a class="reference external" href="http://www.by-smart.com/forum.php?mod=viewthread&amp;amp;tid=2000"&gt;http://www.by-smart.com/forum.php?mod=viewthread&amp;amp;tid=2000&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="epub"></category><category term="ebook"></category></entry><entry><title>在 OS X 上给 Android 刷机</title><link href="https://magicalboy.com/flash-android-on-mac.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/flash-android-on-mac.html</id><summary type="html">&lt;p&gt;Google 在其 I/O 大会上发布了最新的 Android M Preview，看得非常激动，尤其是原生的权限管理那块，于是拿起手上的 Nexus 6 动作体验一番。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;下载&lt;/h2&gt;
&lt;p&gt;可以在 &lt;a class="reference external" href="https://developer.android.com/index.html"&gt;Android 开发者&lt;/a&gt; 下载，如果看不到入口，请检查语言并选择英语。或者直接进入 &lt;a class="reference external" href="https://developer.android.com/preview/download.html"&gt;下载页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果下载遇到问题，可以考虑从国内网盘找，下载完成后验证一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;解压之后，配置好 PATH，并按照 &lt;a class="reference external" href="https://developers.google.com/android/nexus/images#instructions"&gt;官网的安装方法&lt;/a&gt;，执行 flash-all 时出现了如下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; ./flash-all.sh
ERROR: could not get pipe properties
target reported max download size of &lt;span class="m"&gt;536870912 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Google 在其 I/O 大会上发布了最新的 Android M Preview，看得非常激动，尤其是原生的权限管理那块，于是拿起手上的 Nexus 6 动作体验一番。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;下载&lt;/h2&gt;
&lt;p&gt;可以在 &lt;a class="reference external" href="https://developer.android.com/index.html"&gt;Android 开发者&lt;/a&gt; 下载，如果看不到入口，请检查语言并选择英语。或者直接进入 &lt;a class="reference external" href="https://developer.android.com/preview/download.html"&gt;下载页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果下载遇到问题，可以考虑从国内网盘找，下载完成后验证一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;解压之后，配置好 PATH，并按照 &lt;a class="reference external" href="https://developers.google.com/android/nexus/images#instructions"&gt;官网的安装方法&lt;/a&gt;，执行 flash-all 时出现了如下错误：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; ./flash-all.sh
ERROR: could not get pipe properties
target reported max download size of &lt;span class="m"&gt;536870912&lt;/span&gt; bytes
sending &lt;span class="s1"&gt;&amp;#39;bootloader&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3807&lt;/span&gt; KB&lt;span class="o"&gt;)&lt;/span&gt;...

...

target reported max download size of &lt;span class="m"&gt;536870912&lt;/span&gt; bytes
archive does not contain &lt;span class="s1"&gt;&amp;#39;boot.sig&amp;#39;&lt;/span&gt;
archive does not contain &lt;span class="s1"&gt;&amp;#39;recovery.sig&amp;#39;&lt;/span&gt;
fastboot&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;17343&lt;/span&gt;,0xa08e91d4&lt;span class="o"&gt;)&lt;/span&gt; malloc: *** mach_vm_map&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1981542400&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; failed &lt;span class="o"&gt;(&lt;/span&gt;error &lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
*** error: can&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t allocate region
*** &lt;span class="nb"&gt;set&lt;/span&gt; a breakpoint in malloc_error_break to debug
failed to allocate &lt;span class="m"&gt;1979559444&lt;/span&gt; bytes
error: update package missing system.img
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;根据日志猜测，出现这个问题可能是因为镜像文件太大的原因，于是将 flash-all.sh 脚本里面最后一条 fastboot -w update image-shamu-MPZ44Q.zip 手动安装：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fastboot flash bootloader bootloader-shamu-moto-apq8084-71.11.img
fastboot reboot-bootloader
fastboot flash radio radio-shamu-D4.01-9625-05.16+FSG-9625-02.94.img
fastboot reboot-bootloader
fastboot flash system system.img
fastboot flash userdata userdata.img
fastboot flash boot boot.img
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新启动大约 1 分钟，可以看到新的引导流程，眼前一新：&lt;/p&gt;
&lt;img alt="Android M Preview" src="images/AndroidMP.png" /&gt;
&lt;p&gt;再附一张应用的权限管理：&lt;/p&gt;
&lt;img alt="国内很多APP无法启动" src="images/android_wecat_per.png" /&gt;
&lt;p&gt;EOF&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>WHR-G300N V2 刷机</title><link href="https://magicalboy.com/flash-openwrt-from-tftp.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/flash-openwrt-from-tftp.html</id><summary type="html">&lt;div class="section" id="openwrt"&gt;
&lt;h2&gt;OpenWrt 介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://zh.wikipedia.org/zh-cn/OpenWrt"&gt;OpenWrt&lt;/a&gt;  是用于嵌入式设备的一个 Linux 发行版本。&lt;/blockquote&gt;
&lt;p&gt;所有最新的固件下载地址：&lt;a class="reference external" href="https://downloads.openwrt.org/chaos_calmer/15.05/"&gt;https://downloads.openwrt.org/chaos_calmer/15.05/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;类似的还有 DD-WRT，比较偏向实用，Web 配置比较强大，但较难定制。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;WHR-G300N V2&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;产品名称： BUFFALO 巴法络 WHR-G300N V2，硬件配置同 Buffalo WHR-G301N。&lt;/li&gt;
&lt;li&gt;购买链接：&lt;a class="reference external" href="http://www.amazon.cn/BUFFALO"&gt;http://www.amazon.cn/BUFFALO&lt;/a&gt;-巴法络-WHR-G300N-V2-WHR-G300N-CH-高速无线路由器/dp/B005PKUNUC&lt;/li&gt;
&lt;li&gt;官网地址：&lt;a class="reference external" href="http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router"&gt;http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenWrt Wiki …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="openwrt"&gt;
&lt;h2&gt;OpenWrt 介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://zh.wikipedia.org/zh-cn/OpenWrt"&gt;OpenWrt&lt;/a&gt;  是用于嵌入式设备的一个 Linux 发行版本。&lt;/blockquote&gt;
&lt;p&gt;所有最新的固件下载地址：&lt;a class="reference external" href="https://downloads.openwrt.org/chaos_calmer/15.05/"&gt;https://downloads.openwrt.org/chaos_calmer/15.05/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;类似的还有 DD-WRT，比较偏向实用，Web 配置比较强大，但较难定制。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;WHR-G300N V2&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;产品名称： BUFFALO 巴法络 WHR-G300N V2，硬件配置同 Buffalo WHR-G301N。&lt;/li&gt;
&lt;li&gt;购买链接：&lt;a class="reference external" href="http://www.amazon.cn/BUFFALO"&gt;http://www.amazon.cn/BUFFALO&lt;/a&gt;-巴法络-WHR-G300N-V2-WHR-G300N-CH-高速无线路由器/dp/B005PKUNUC&lt;/li&gt;
&lt;li&gt;官网地址：&lt;a class="reference external" href="http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router"&gt;http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenWrt Wiki：&lt;a class="reference external" href="http://wiki.openwrt.org/toh/buffalo/whr-g300nv2"&gt;http://wiki.openwrt.org/toh/buffalo/whr-g300nv2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;刷机教程参考：&lt;a class="reference external" href="http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2"&gt;http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tftp"&gt;
&lt;h2&gt;砖头复活记：tftp 刷机教程&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;刷机环境：OS X El Capitan&lt;/li&gt;
&lt;li&gt;tftp 固件：&lt;a class="reference external" href="https://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/openwrt-15.05-ar71xx-generic-whr-g301n-squashfs-tftp.bin"&gt;https://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/openwrt-15.05-ar71xx-generic-whr-g301n-squashfs-tftp.bin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1. 用网线连接路由器，打开电源，用 ifconfig 查看网络接口，比如 en0；
修改本机 IP：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ifconfig en0 &lt;span class="m"&gt;192&lt;/span&gt;.168.11.2
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;配置网络，将 192.168.11.1 跟路由器的 MAC 地址关联起来：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo arp -s &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1 xx:xx:xx:xx:xx:xx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MAC 地址见背后标签上的 SSID。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;这个时候可以断开路由器电源了，接着 cd 到固件所在目录，执行 tftp：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Set verbose mode on &lt;span class="o"&gt;(&lt;/span&gt;so we know what&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s going on&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; verbose
Verbose mode on.
Binary mode on &lt;span class="o"&gt;(&lt;/span&gt;because we are uploading a binary file&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; binary
mode &lt;span class="nb"&gt;set&lt;/span&gt; to octet
Trace on &lt;span class="o"&gt;(&lt;/span&gt;so we get feedback on our commands&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; trace
Packet tracing on.
Rexmt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;to retry the upload on failure every &lt;span class="m"&gt;1&lt;/span&gt; second&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; rexmt &lt;span class="m"&gt;1&lt;/span&gt;
And timeout to &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;repeatedly retry the upload &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt; seconds before giving up&lt;span class="o"&gt;)&lt;/span&gt;
tftp&amp;gt; timeout &lt;span class="m"&gt;60&lt;/span&gt;
tftp&amp;gt; connect &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1
尽管路由器是关的
tftp&amp;gt; status
查看当前的配置状态
tftp&amp;gt; put tftp.bin
tftp.bin 就是下载回来的 openwrt-tftp版本的固件，已经被重命名。
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;将路由器的电源接上，同时重复执行以上的 put 指令，直到有以下反应：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tftp&amp;gt; put tftp.bin
putting tftp.bin to &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1:tftp.bin &lt;span class="o"&gt;[&lt;/span&gt;octet&lt;span class="o"&gt;]&lt;/span&gt;
sent WRQ &amp;lt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tftp.bin, &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;octet&amp;gt;
sent WRQ &amp;lt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tftp.bin, &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;octet&amp;gt;
received ACK &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&amp;gt;
sent DATA &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;512&lt;/span&gt; bytes&amp;gt;
...
sent DATA &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6529&lt;/span&gt;, &lt;span class="m"&gt;36&lt;/span&gt; bytes&amp;gt;
received ACK &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6529&lt;/span&gt;&amp;gt;
Sent &lt;span class="m"&gt;3342372&lt;/span&gt; bytes in &lt;span class="m"&gt;2&lt;/span&gt;.7 seconds &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9903324&lt;/span&gt; bits/sec&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时上传完毕，可以输入 quit 退出。&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;路由器红色的灯会有不同的反应，几分钟后会自动重启。此致，成功复活！&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category></entry><entry><title>Fragment</title><link href="https://magicalboy.com/fragment.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/fragment.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id3"&gt;Fragment 定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fragment-demo" id="id4"&gt;Fragment Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Fragment 定义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;为了让界面可以在平板上更好地展示，Android在3.0版本引入了Fragment(碎片)功能，它非常类似于Activity，可以像Activity一样包含布局。Fragment通常是嵌套在Activity中使用的。&lt;/p&gt;
&lt;img alt="Fragments" src="images/fragments.png" /&gt;
&lt;p&gt;可以看出，使用Fragment可以让我们更加充分地利用平板的屏幕空间。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fragment-demo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Fragment Demo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.csdn.net/guolin_blog/article/details/8881711"&gt;http://blog.csdn.net/guolin_blog/article/details/8881711&lt;/a&gt;
&lt;a class="reference external" href="https://developer.android.com/guide/components/fragments.html"&gt;https://developer.android.com/guide/components/fragments.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id3"&gt;Fragment 定义&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fragment-demo" id="id4"&gt;Fragment Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Fragment 定义&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;为了让界面可以在平板上更好地展示，Android在3.0版本引入了Fragment(碎片)功能，它非常类似于Activity，可以像Activity一样包含布局。Fragment通常是嵌套在Activity中使用的。&lt;/p&gt;
&lt;img alt="Fragments" src="images/fragments.png" /&gt;
&lt;p&gt;可以看出，使用Fragment可以让我们更加充分地利用平板的屏幕空间。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fragment-demo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Fragment Demo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.csdn.net/guolin_blog/article/details/8881711"&gt;http://blog.csdn.net/guolin_blog/article/details/8881711&lt;/a&gt;
&lt;a class="reference external" href="https://developer.android.com/guide/components/fragments.html"&gt;https://developer.android.com/guide/components/fragments.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>Geeks vs Nerds</title><link href="https://magicalboy.com/geeks-vs-nerds.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/geeks-vs-nerds.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://www.mastersinit.org/geeks-vs-nerds/"&gt;&lt;img alt="Geeks vs Nerds" src="http://www.mastersinit.org/geeks-vs-nerds/geek-nerd.jpg" /&gt;&lt;/a&gt;
</summary><content type="html">&lt;a class="reference external image-reference" href="http://www.mastersinit.org/geeks-vs-nerds/"&gt;&lt;img alt="Geeks vs Nerds" src="http://www.mastersinit.org/geeks-vs-nerds/geek-nerd.jpg" /&gt;&lt;/a&gt;
</content><category term="geek"></category><category term="nerd"></category></entry><entry><title>Gentoo 2015</title><link href="https://magicalboy.com/gentoo.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gentoo.html</id><summary type="html">&lt;div class="section" id="gentoo"&gt;
&lt;h2&gt;为什么选择 Gentoo&lt;/h2&gt;
&lt;p&gt;完全免费的 Linux 发行版本，面向开发人员和 Web 职业人员。特别是有 Portage 包管理系统，用 Python 编写。无最新发行版本，每周滚动更新这点和 Arch Linux 相同。&lt;/p&gt;
&lt;p&gt;同时得到某叔的极力推荐，这些都是最终选择 Gentoo 的原因。&lt;/p&gt;
&lt;p&gt;另外附 Gentoo 排名情况：  &lt;a class="reference external" href="http://distrowatch.com/table.php?distribution=gentoo"&gt;DistroWatch&lt;/a&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装过程&lt;/h2&gt;
&lt;p&gt;整个安装过程主要参考 &lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Handbook:AMD64"&gt;Handbook 手册&lt;/a&gt;，利用业余时间两个晚上搞定。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# uname -a&lt;/span&gt;
Linux don &lt;span class="m"&gt;4&lt;/span&gt;.0.5-gentoo &lt;span class="c1"&gt;#1 SMP Fri Aug 28 21:54:34 2015 x86_64 Intel …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="gentoo"&gt;
&lt;h2&gt;为什么选择 Gentoo&lt;/h2&gt;
&lt;p&gt;完全免费的 Linux 发行版本，面向开发人员和 Web 职业人员。特别是有 Portage 包管理系统，用 Python 编写。无最新发行版本，每周滚动更新这点和 Arch Linux 相同。&lt;/p&gt;
&lt;p&gt;同时得到某叔的极力推荐，这些都是最终选择 Gentoo 的原因。&lt;/p&gt;
&lt;p&gt;另外附 Gentoo 排名情况：  &lt;a class="reference external" href="http://distrowatch.com/table.php?distribution=gentoo"&gt;DistroWatch&lt;/a&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装过程&lt;/h2&gt;
&lt;p&gt;整个安装过程主要参考 &lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Handbook:AMD64"&gt;Handbook 手册&lt;/a&gt;，利用业余时间两个晚上搞定。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# uname -a&lt;/span&gt;
Linux don &lt;span class="m"&gt;4&lt;/span&gt;.0.5-gentoo &lt;span class="c1"&gt;#1 SMP Fri Aug 28 21:54:34 2015 x86_64 Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz GenuineIntel GNU/Linux&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;桌面选择&lt;/h2&gt;
&lt;p&gt;首先纠结的是选择。既然如此，回到出发点思考，为什么要安装桌面环境。一是个人 Linux 基础问题。再加上多年不用，没有能力在 Shell 环境搞定 WIFI 和 蓝牙等的驱动。&lt;/p&gt;
&lt;p&gt;基于大学时代玩过 Ubuntu 和 Fedora，对 GNOME 和 KDE 有所了解，所以主要还是从这两个中选择，虽然 Ubuntu 已经不用 GNOME 改用 Unity，但 GNOME 3 看起来还是比较现代化，就它吧！&lt;/p&gt;
&lt;p&gt;不过在安装 GNOME 之前，我们先了解一下X11，即 X Window 系统。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="x11"&gt;
&lt;h2&gt;X11&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/X_Window_System"&gt;X 窗口系统&lt;/a&gt; 还是很 NB 的，出生比我早。GNOME 和 KDE 都是基于 X11 系统为基础实现的。&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/XQuartz"&gt;XQuartz&lt;/a&gt; 是苹果公司的 OS X 的实现，Apple X11。&lt;/p&gt;
&lt;p&gt;Gentoo Linux 上的 X11 实现是 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/X.Org_Server"&gt;XOrg&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)"&gt;Wayland&lt;/a&gt; 是一个比较新的显示服务器与客户端通信方式的协议，而 GNOME 从 3.10 开始支持 Wayland。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="init-system"&gt;
&lt;h2&gt;Init System&lt;/h2&gt;
&lt;p&gt;在 Gentoo，可以用以下命令查看当前系统运行的 Init 系统是什么：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ps u -p 1&lt;/span&gt;
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;.0  &lt;span class="m"&gt;0&lt;/span&gt;.0   &lt;span class="m"&gt;4164&lt;/span&gt;  &lt;span class="m"&gt;1420&lt;/span&gt; ?        Ss   Sep08   &lt;span class="m"&gt;0&lt;/span&gt;:01 init &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果是显示的是 init，那么 init 系统是 OpenRC，如果显示 systemd，则是 init system 是 systemd (via from &lt;a class="reference external" href="http://unix.stackexchange.com/a/114619"&gt;Detect init system using the shell&lt;/a&gt;)。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gnome-3"&gt;
&lt;h2&gt;GNOME 3&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.gnome.org/gnome-3/"&gt;GNOME 3&lt;/a&gt; 的目标是简单易用，与 Python 的 Zen 核心思想很接近。&lt;/p&gt;
&lt;img alt="GNOME 3 overview" src="https://www.gnome.org/wp-content/uploads/2015/03/activities-overview-3.16-940x529.png" /&gt;
&lt;p&gt;准备安装的时候，在网上找到这个`贴子 &amp;lt;&lt;a class="reference external" href="https://forums.gentoo.org/viewtopic-p-7696198.html"&gt;https://forums.gentoo.org/viewtopic-p-7696198.html&lt;/a&gt;&amp;gt;`_：&lt;/p&gt;
&lt;blockquote&gt;
systemd is now a mandatory dependency of Gnome3. Normally, if you want to use Gnome3,  systemd must be installed.&lt;/blockquote&gt;
&lt;p&gt;有没有桌面环境可以不更换现在的 Init System 呢，继续查找资料，然后在 &lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Recommended_applications#Desktop_environment"&gt;Desktop environment&lt;/a&gt; 发现了 &lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Xfce"&gt;Xfce&lt;/a&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;Xfce&lt;/h2&gt;
&lt;p&gt;Xfce 是个轻量级的类 Unix 桌面环境，It aims to be fast and low on system resources。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="x-window"&gt;
&lt;h2&gt;安装 X Window&lt;/h2&gt;
&lt;p&gt;主要参考：&lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Xorg/Guide"&gt;https://wiki.gentoo.org/wiki/Xorg/Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;查看显卡信息，可以得到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# emerge --ask sys-apps/pciutils&lt;/span&gt;
&lt;span class="c1"&gt;# lspci | grep VGA&lt;/span&gt;
&lt;span class="c1"&gt;# lspci | grep VGA&lt;/span&gt;
&lt;span class="m"&gt;01&lt;/span&gt;:00.0 VGA compatible controller: Advanced Micro Devices, Inc. &lt;span class="o"&gt;[&lt;/span&gt;AMD/ATI&lt;span class="o"&gt;]&lt;/span&gt; Oland &lt;span class="o"&gt;[&lt;/span&gt;Radeon HD &lt;span class="m"&gt;8570&lt;/span&gt; / R7 &lt;span class="m"&gt;240&lt;/span&gt; OEM&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# emerge --sync&lt;/span&gt;
&lt;span class="c1"&gt;# emerge --ask x11-drivers/radeon-ucode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;配置 Linux 内核，输入以下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# cd /usr/src/linux&lt;/span&gt;
&lt;span class="c1"&gt;# make menuconfig&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改 make.config 配置， /etc/portage/make.conf：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# (For mouse, keyboard, and Synaptics touchpad support)&lt;/span&gt;
&lt;span class="nv"&gt;INPUT_DEVICES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;evdev synaptics&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# (For AMD/ATI cards)&lt;/span&gt;
&lt;span class="nv"&gt;VIDEO_CARDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;radeon&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后执行：emerge --ask --verbose x11-base/xorg-drivers&lt;/p&gt;
&lt;p&gt;安装 Xorg：emerge --ask x11-base/xorg-server
安装完成后，更新环境：env-update &amp;amp;&amp;amp; source /etc/profile
然后重启系统。
登入，启动 startx，成功了：&lt;/p&gt;
&lt;img alt="" src="images/Gentoo_Xfce_Desktop.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="portage-sync"&gt;
&lt;h2&gt;Portage/Sync 配置&lt;/h2&gt;
&lt;p&gt;在日常更新维护的时候遇到这样的警告：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! SYNC setting found in make.conf.
This setting is Deprecated and no longer used.  Please ensure your &lt;span class="s1"&gt;&amp;#39;sync-type&amp;#39;&lt;/span&gt; and &lt;span class="s1"&gt;&amp;#39;sync-uri&amp;#39;&lt;/span&gt; are &lt;span class="nb"&gt;set&lt;/span&gt; correctly in /etc/portage/repos.conf/gentoo.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决方法主要参考 &lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Project:Portage/Sync"&gt;Portage/Sync&lt;/a&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /etc/portage/repos.conf
cp /usr/share/portage/config/repos.conf /etc/portage/repos.conf/gentoo.conf
mirrorselect -i -r -o &amp;gt;&amp;gt; /etc/portage/repos.conf/gentoo.conf &lt;span class="c1"&gt;# 选择一个国内镜像&lt;/span&gt;
vi /etc/portage/make.conf &lt;span class="c1"&gt;# 将 SYNC 设置删除&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Gentoo 本地化配置</title><link href="https://magicalboy.com/gentoo-locale.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gentoo-locale.html</id><summary type="html">&lt;p&gt;未配置之前会有类似这样的提示：&lt;em&gt;man: can't set the locale; make sure $LC_&lt;/em&gt; and $LANG are correct*。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;查看当前本地化配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# locale -a&lt;/span&gt;
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_CTYPE to default locale: No such file or directory
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_MESSAGES to default locale: No such file or directory
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_COLLATE to default locale: No such file …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;未配置之前会有类似这样的提示：&lt;em&gt;man: can't set the locale; make sure $LC_&lt;/em&gt; and $LANG are correct*。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;查看当前本地化配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# locale -a&lt;/span&gt;
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_CTYPE to default locale: No such file or directory
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_MESSAGES to default locale: No such file or directory
locale: Cannot &lt;span class="nb"&gt;set&lt;/span&gt; LC_COLLATE to default locale: No such file or directory
C
POSIX
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;修改 &lt;em&gt;/etc/locale.gen&lt;/em&gt;，去掉 &lt;em&gt;#en_US.UTF-8 UTF-8&lt;/em&gt; 前面的 &lt;em&gt;#&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;执行 &lt;em&gt;locale-gen&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;查看当前系统可用的本地化设置：&lt;em&gt;eselect locale list&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;设置本地化：&lt;em&gt;eselect locale set 3&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;执行更新：&lt;em&gt;env-update &amp;amp;&amp;amp; source /etc/profile&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;最后的环境：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# eselect locale list&lt;/span&gt;
Available targets &lt;span class="k"&gt;for&lt;/span&gt; the LANG variable:
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;   C
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;   en_US.utf8 *
  &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;   POSIX
  &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;   &lt;span class="o"&gt;(&lt;/span&gt;free form&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考连接：&lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Localization/Guide"&gt;https://wiki.gentoo.org/wiki/Localization/Guide&lt;/a&gt;&lt;/p&gt;
</content><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Gentoo 分区</title><link href="https://magicalboy.com/gentoo-partition.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gentoo-partition.html</id><summary type="html">&lt;p&gt;由于系统是现成的，即直接 flash 安装，里面的分区表已经分好。为了充分利用卡上的剩余空间，于是新建一个分区来挂载使用。&lt;/p&gt;
&lt;p&gt;使用环境：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;系统：Gentoo 3.4.103&lt;/li&gt;
&lt;li&gt;存储盘：高速 MicroSDXC-TF 存储卡 64G-Class10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一步：查看与新建分区&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;分区前系统盘分区：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# df -h&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       &lt;span class="m"&gt;3&lt;/span&gt;.4G  &lt;span class="m"&gt;1&lt;/span&gt;.7G  &lt;span class="m"&gt;1&lt;/span&gt;.6G  &lt;span class="m"&gt;52&lt;/span&gt;% /
devtmpfs        438M     &lt;span class="m"&gt;0&lt;/span&gt;  438M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
tmpfs            88M  244K   88M   &lt;span class="m"&gt;1 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;由于系统是现成的，即直接 flash 安装，里面的分区表已经分好。为了充分利用卡上的剩余空间，于是新建一个分区来挂载使用。&lt;/p&gt;
&lt;p&gt;使用环境：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;系统：Gentoo 3.4.103&lt;/li&gt;
&lt;li&gt;存储盘：高速 MicroSDXC-TF 存储卡 64G-Class10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一步：查看与新建分区&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;分区前系统盘分区：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# df -h&lt;/span&gt;
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       &lt;span class="m"&gt;3&lt;/span&gt;.4G  &lt;span class="m"&gt;1&lt;/span&gt;.7G  &lt;span class="m"&gt;1&lt;/span&gt;.6G  &lt;span class="m"&gt;52&lt;/span&gt;% /
devtmpfs        438M     &lt;span class="m"&gt;0&lt;/span&gt;  438M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
tmpfs            88M  244K   88M   &lt;span class="m"&gt;1&lt;/span&gt;% /run
shm             438M     &lt;span class="m"&gt;0&lt;/span&gt;  438M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev/shm
cgroup_root      10M     &lt;span class="m"&gt;0&lt;/span&gt;   10M   &lt;span class="m"&gt;0&lt;/span&gt;% /sys/fs/cgroup
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;当前盘信息：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# fdisk -l&lt;/span&gt;

Disk /dev/mmcblk0: &lt;span class="m"&gt;59&lt;/span&gt;.5 GiB, &lt;span class="m"&gt;63879249920&lt;/span&gt; bytes, &lt;span class="m"&gt;124764160&lt;/span&gt; sectors
Units: sectors of &lt;span class="m"&gt;1&lt;/span&gt; * &lt;span class="nv"&gt;512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;512&lt;/span&gt; bytes
Sector size &lt;span class="o"&gt;(&lt;/span&gt;logical/physical&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
I/O size &lt;span class="o"&gt;(&lt;/span&gt;minimum/optimal&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;512&lt;/span&gt; bytes / &lt;span class="m"&gt;512&lt;/span&gt; bytes
Disklabel type: dos
Disk identifier: 0x7dea4524

Device         Boot     Start       End   Blocks  Id System
/dev/mmcblk0p1           &lt;span class="m"&gt;2048&lt;/span&gt;     &lt;span class="m"&gt;43007&lt;/span&gt;    &lt;span class="m"&gt;20480&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
/dev/mmcblk0p2          &lt;span class="m"&gt;43008&lt;/span&gt;   &lt;span class="m"&gt;7167999&lt;/span&gt;  &lt;span class="m"&gt;3562496&lt;/span&gt;  &lt;span class="m"&gt;83&lt;/span&gt; Linux
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;使用 &lt;em&gt;cfdisk /dev/mmcblk0&lt;/em&gt; 将未使用的空间 &lt;em&gt;New&lt;/em&gt; 一个分区出来&lt;/li&gt;
&lt;li&gt;分区成功后 &lt;em&gt;Write&lt;/em&gt; 保存，然后 &lt;em&gt;Quit&lt;/em&gt; 退出。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：cfdisk 最多只能分 4 个主分区，fdisk 支持硬盘最大尺寸为 2TB，更详情说明请参考 man 手册。&lt;/p&gt;
&lt;p&gt;第二步：格式化分区&lt;/p&gt;
&lt;p&gt;对新建分区 mmcblk0p3 进行格式化：&lt;em&gt;mkfs.ext4 /dev/mmcblk0p3&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;第三步：加载分区&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;创建分区挂接目录：&lt;em&gt;mkdir /user&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;编辑 &lt;em&gt;/etc/fstab&lt;/em&gt;，将分区信息写进去。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/dev/mmcblk0p3          /user           ext4            defaults        &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;加载新建的分区：&lt;em&gt;mount -a&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;最终系统分区：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root       &lt;span class="m"&gt;3&lt;/span&gt;.4G  &lt;span class="m"&gt;1&lt;/span&gt;.7G  &lt;span class="m"&gt;1&lt;/span&gt;.6G  &lt;span class="m"&gt;52&lt;/span&gt;% /
devtmpfs        438M     &lt;span class="m"&gt;0&lt;/span&gt;  438M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev
tmpfs            88M  244K   88M   &lt;span class="m"&gt;1&lt;/span&gt;% /run
shm             438M     &lt;span class="m"&gt;0&lt;/span&gt;  438M   &lt;span class="m"&gt;0&lt;/span&gt;% /dev/shm
cgroup_root      10M     &lt;span class="m"&gt;0&lt;/span&gt;   10M   &lt;span class="m"&gt;0&lt;/span&gt;% /sys/fs/cgroup
/dev/mmcblk0p3   56G  180M   53G   &lt;span class="m"&gt;1&lt;/span&gt;% /user
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Gentoo Portage</title><link href="https://magicalboy.com/gentoo-portage.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gentoo-portage.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;修改更新源地址&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;2.2.16&lt;/em&gt; 版本之前的配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;SYNC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rsync://rsync.cn.gentoo.org/gentoo-portage/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;新版本若没有配置会提示：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! SYNC setting found in make.conf.
    This setting is Deprecated and no longer used.  Please ensure your &lt;span class="s1"&gt;&amp;#39;sync-type&amp;#39;&lt;/span&gt; and &lt;span class="s1"&gt;&amp;#39;sync-uri&amp;#39;&lt;/span&gt; are &lt;span class="nb"&gt;set&lt;/span&gt; correctly in /etc/portage/repos.conf/gentoo.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;新版本配置，编辑 &lt;em&gt;/etc/portage/make.conf&lt;/em&gt; 删除原来的 …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;修改更新源地址&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;2.2.16&lt;/em&gt; 版本之前的配置：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;SYNC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rsync://rsync.cn.gentoo.org/gentoo-portage/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;新版本若没有配置会提示：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;!!! SYNC setting found in make.conf.
    This setting is Deprecated and no longer used.  Please ensure your &lt;span class="s1"&gt;&amp;#39;sync-type&amp;#39;&lt;/span&gt; and &lt;span class="s1"&gt;&amp;#39;sync-uri&amp;#39;&lt;/span&gt; are &lt;span class="nb"&gt;set&lt;/span&gt; correctly in /etc/portage/repos.conf/gentoo.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;新版本配置，编辑 &lt;em&gt;/etc/portage/make.conf&lt;/em&gt; 删除原来的 &lt;em&gt;SYNC=&amp;quot;....&amp;quot;&lt;/em&gt; 这行，然后执行以下命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /etc/portage/repos.conf
cp /usr/share/portage/config/repos.conf /etc/portage/repos.conf/gentoo.conf
vi /etc/portage/repos.conf/gentoo.conf
&lt;span class="c1"&gt;# 增加上面的镜像地址&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="https://wiki.gentoo.org/wiki/Project:Portage/Sync"&gt;https://wiki.gentoo.org/wiki/Project:Portage/Sync&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="portdir"&gt;
&lt;h2&gt;修改 PORTDIR&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;修改 &lt;em&gt;/etc/portage/make.conf&lt;/em&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;PORTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/user/portage&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;创建新位置目录：&lt;em&gt;mkdir /user/portage&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;修改用户和用户组属性：&lt;em&gt;chown portage:portage /user/portage&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;迁移数据：&lt;em&gt;mv -p /usr/portage/* /user/portage/&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;更新：&lt;em&gt;emerge --sync&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：如果 &lt;em&gt;make.conf&lt;/em&gt; 丢失，查看 &lt;em&gt;eselect profile list&lt;/em&gt;，并选择 &lt;em&gt;[28]  default/linux/arm/13.0/armv7a&lt;/em&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;eselect profile &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="m"&gt;28&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="portage"&gt;
&lt;h2&gt;更新 Portage&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;查看当前版本：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# emerge -V&lt;/span&gt;
Portage &lt;span class="m"&gt;2&lt;/span&gt;.2.8-r2 &lt;span class="o"&gt;(&lt;/span&gt;default/linux/arm/13.0/armv7a, gcc-4.8.3, glibc-2.19-r1, &lt;span class="m"&gt;3&lt;/span&gt;.4.103 armv7l&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;更新版本使用：&lt;em&gt;emerge --oneshot portage&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;更新后版本：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# emerge -V&lt;/span&gt;
Portage &lt;span class="m"&gt;2&lt;/span&gt;.2.20.1 &lt;span class="o"&gt;(&lt;/span&gt;python &lt;span class="m"&gt;2&lt;/span&gt;.7.7-final-0, default/linux/arm/13.0/armv7a, gcc-4.8.3, glibc-2.19-r1, &lt;span class="m"&gt;3&lt;/span&gt;.4.103 armv7l&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Samba 配置</title><link href="https://magicalboy.com/gentoo-samba.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gentoo-samba.html</id><summary type="html">&lt;p&gt;Samba 是 1992 年，一个叫 Andrew Tridgell 用 C/C++ 和 Python 写的跨平台软件。&lt;/p&gt;
&lt;p&gt;其名字来于 Server Message Block，其中 SMB/CIFS 是由微软开发的一种应用层网络传输协议。&lt;/p&gt;
&lt;p&gt;Samba 就是许多服务和协议的实现，是 Windows 和类 Unix 系统之间的桥梁。&lt;/p&gt;
&lt;p&gt;Samba 现在最新版本是 4.x，但在我的树莓派上面 &lt;em&gt;emerge --ask net-fs/samba&lt;/em&gt; 出来的还是 3.6.2。&lt;/p&gt;
&lt;p&gt;官网上的 &lt;a class="reference external" href="https://packages.gentoo.org/packages/net-fs/samba"&gt;net-fs/samba&lt;/a&gt; package 4.x 以上的版本不支持 arm 或被 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Samba 是 1992 年，一个叫 Andrew Tridgell 用 C/C++ 和 Python 写的跨平台软件。&lt;/p&gt;
&lt;p&gt;其名字来于 Server Message Block，其中 SMB/CIFS 是由微软开发的一种应用层网络传输协议。&lt;/p&gt;
&lt;p&gt;Samba 就是许多服务和协议的实现，是 Windows 和类 Unix 系统之间的桥梁。&lt;/p&gt;
&lt;p&gt;Samba 现在最新版本是 4.x，但在我的树莓派上面 &lt;em&gt;emerge --ask net-fs/samba&lt;/em&gt; 出来的还是 3.6.2。&lt;/p&gt;
&lt;p&gt;官网上的 &lt;a class="reference external" href="https://packages.gentoo.org/packages/net-fs/samba"&gt;net-fs/samba&lt;/a&gt; package 4.x 以上的版本不支持 arm 或被 mask。&lt;/p&gt;
&lt;p&gt;开始安装 ；)&lt;/p&gt;
&lt;p&gt;emerge --ask net-fs/sambar&lt;/p&gt;
&lt;p&gt;# qlop -Hgvt samba
samba-3.6.25: Tue Oct 27 23:56:50 2015: 43 minutes, 41 seconds
samba: 1 times&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Gentoo"></category></entry><entry><title>Git使用</title><link href="https://magicalboy.com/git.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/git.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://openshift.redhat.com/community/kb/kb-e1035-git-push-throws-error-rpc-failed-result22-http-code-411"&gt;error: RPC failed; result=22, HTTP code = 411&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://openshift.redhat.com/community/kb/kb-e1035-git-push-throws-error-rpc-failed-result22-http-code-411"&gt;error: RPC failed; result=22, HTTP code = 411&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>GTD学习</title><link href="https://magicalboy.com/gtd.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/gtd.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;GTD 流程图&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Getting Things Done - Workflow diagram" src="images/gtd1.jpg" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;GTD 流程图&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Getting Things Done - Workflow diagram" src="images/gtd1.jpg" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="GTD"></category></entry><entry><title>iOS 设计模式: Model View Controller</title><link href="https://magicalboy.com/ios-design-patterns-model-view-controller.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-design-patterns-model-view-controller.html</id><summary type="html">&lt;p&gt;MVC 设计模式的主要目的是可重用性，能够在不同的视图中使用重用同一个模型。&lt;/p&gt;
&lt;img alt="Model View Controller (MVC) Design Pattern" src="static/images/mvc.jpg" /&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;模型 Model&lt;/h2&gt;
&lt;p&gt;模型包含了数据。例如，一个 Book 对象包含有关书的信息：标题和作者。此外，Book 对象能够被其它对象关联，建立一对一或一对多的关系。例如 Category 对象可包含多个 Book 对象。模型中的数据可以来源于本地数据库或文件，也可以从网络请求回来。&lt;/p&gt;
&lt;p&gt;模型不应该直接和视图打交道，应该在需要的时候访问通过控制器来访问。&lt;/p&gt;
&lt;p&gt;在 iOS 中，模型通常是 NSObject 或 NSManagedObject的子类。任何模型对象包括一些实例变量和对应的 getter/setter 方法。大多数面向对象编程语言都有提供封装的机制。在 iOS 中使用 &amp;#64;property 封装，和可选的 &amp;#64;synthesize 自动生成 getter/setter 方法。以 Book 模型为例 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;MVC 设计模式的主要目的是可重用性，能够在不同的视图中使用重用同一个模型。&lt;/p&gt;
&lt;img alt="Model View Controller (MVC) Design Pattern" src="static/images/mvc.jpg" /&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;模型 Model&lt;/h2&gt;
&lt;p&gt;模型包含了数据。例如，一个 Book 对象包含有关书的信息：标题和作者。此外，Book 对象能够被其它对象关联，建立一对一或一对多的关系。例如 Category 对象可包含多个 Book 对象。模型中的数据可以来源于本地数据库或文件，也可以从网络请求回来。&lt;/p&gt;
&lt;p&gt;模型不应该直接和视图打交道，应该在需要的时候访问通过控制器来访问。&lt;/p&gt;
&lt;p&gt;在 iOS 中，模型通常是 NSObject 或 NSManagedObject的子类。任何模型对象包括一些实例变量和对应的 getter/setter 方法。大多数面向对象编程语言都有提供封装的机制。在 iOS 中使用 &amp;#64;property 封装，和可选的 &amp;#64;synthesize 自动生成 getter/setter 方法。以 Book 模型为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt; : &lt;span class="bp"&gt;NSObject&lt;/span&gt;

&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// 会自动生成 _title 实例变量&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// 会自动生成 _author 实例变量&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;视图 View&lt;/h2&gt;
&lt;p&gt;视图显示模型的一些信息。例如，视图能够显示书本列表。尽管视图不会直接从模型中获取信息，而是使用控制器来协调什么时候该显示什么。&lt;/p&gt;
&lt;p&gt;在 iOS 中，大多数视图继承自 UIView，UIView 能够捕捉触摸事件和绘图显示。UIKit 框架包括各种绘制系统标准界面元素的类，如表格，按钮，输入框，滑动条等。以下是一个书的列表：&lt;/p&gt;
&lt;img alt="a list of books" src="static/images/book_list_table.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="controller"&gt;
&lt;h2&gt;控制器 Controller&lt;/h2&gt;
&lt;p&gt;控制器能够访问模型的数据，然后将它们显示到视图。同一个控制器可以作为几个视图和模型之间的中间体。控制器监控着视图上的用户交互，并将产生的变化与模型通信。反过来，也可将由控制器观察到模型中的更改，呈现到视图上。&lt;/p&gt;
&lt;p&gt;控制器是多数应用所依赖的。在 iOS 中，控制器作为 UIViewController 的子类管理着视图。它也负责 委托（delegate） 消息和 目标－动作（target-action）消息的响应。以下是 UITableViewController （ UIViewController 的子类）如何管理 UITableView 的图解：&lt;/p&gt;
&lt;img alt="UITableViewController manages a UITableView" src="static/images/tableviewcontroller_using_mvc.jpg" /&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://blog.teamtreehouse.com/ios-design-patterns-model-view-controller-part-3"&gt;iOS Design Patterns: Model View Controller&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="design pattern"></category></entry><entry><title>iOS Frameworks</title><link href="https://magicalboy.com/ios-frameworks.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-frameworks.html</id><summary type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 的架构是分层的&lt;/h2&gt;
&lt;img alt="Layers of iOS" class="align-left" src="http://developer.apple.com/library/ios/documentation/miscellaneous/conceptual/iphoneostechoverview/Art/SystemLayers_2x.png" style="width: 366px; height: 202px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frameworks"&gt;
&lt;h2&gt;Frameworks&lt;/h2&gt;
&lt;p&gt;iOS 提供了一套框架，将 iOS 应用程序的技术，服务和功能结合了起来。&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 的架构是分层的&lt;/h2&gt;
&lt;img alt="Layers of iOS" class="align-left" src="http://developer.apple.com/library/ios/documentation/miscellaneous/conceptual/iphoneostechoverview/Art/SystemLayers_2x.png" style="width: 366px; height: 202px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frameworks"&gt;
&lt;h2&gt;Frameworks&lt;/h2&gt;
&lt;p&gt;iOS 提供了一套框架，将 iOS 应用程序的技术，服务和功能结合了起来。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category></entry><entry><title>iOS 国际化/本地化</title><link href="https://magicalboy.com/ios-i18n.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-i18n.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;获取首选语言&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 获取首选语言&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;preferredLanguages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;preferredLanguages&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// 另一种方式&lt;/span&gt;
&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;AppleLanguages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;languages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果是一样的，都是数组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;zh-Hans&amp;quot;&lt;/span&gt;,
en,
fr,
de,
ja,
...
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组中第一个就是当前选择的语言，名称符合 ISO 639-1 代码表。同时需要注意区域和语言是独立不同的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;两者有什么不同，请看这：&lt;a class="reference external" href="http://stackoverflow.com/questions/7872356/what-is-the-difference-between-nslocale-preferredlanguages-and-nsuserdefault"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;苹果开发者官网专题：&lt;a class="reference external" href="http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPInternational/Articles/ChoosingLocalizations.html"&gt;Internationalization Programming Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;获取当前地区&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;currentLocale&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;localeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="nl"&gt;displayNameForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NSLocaleIdentifier&lt;/span&gt;
                                         &lt;span class="nl"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="n"&gt;localeIdentifier …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;获取首选语言&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 获取首选语言&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;preferredLanguages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;preferredLanguages&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// 另一种方式&lt;/span&gt;
&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;AppleLanguages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;languages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果是一样的，都是数组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;zh-Hans&amp;quot;&lt;/span&gt;,
en,
fr,
de,
ja,
...
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组中第一个就是当前选择的语言，名称符合 ISO 639-1 代码表。同时需要注意区域和语言是独立不同的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;两者有什么不同，请看这：&lt;a class="reference external" href="http://stackoverflow.com/questions/7872356/what-is-the-difference-between-nslocale-preferredlanguages-and-nsuserdefault"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;苹果开发者官网专题：&lt;a class="reference external" href="http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPInternational/Articles/ChoosingLocalizations.html"&gt;Internationalization Programming Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;获取当前地区&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;currentLocale&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;localeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="nl"&gt;displayNameForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NSLocaleIdentifier&lt;/span&gt;
                                         &lt;span class="nl"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="n"&gt;localeIdentifier&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;localeName:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;localeName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="i18n"></category></entry><entry><title>iOS 支持矩阵</title><link href="https://magicalboy.com/ios-support-matrix.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-support-matrix.html</id><summary type="html">&lt;img alt="iOS Support Matrix" src="images/ios_support_matrix.png" /&gt;
</summary><content type="html">&lt;img alt="iOS Support Matrix" src="images/ios_support_matrix.png" /&gt;
</content><category term="iOS"></category><category term="support"></category></entry><entry><title>iOS 多线程学习</title><link href="https://magicalboy.com/ios-thread.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-thread.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id9"&gt;基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsthread" id="id10"&gt;NSThread&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id11"&gt;创建和启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id12"&gt;线程同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id13"&gt;线程交互&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsoperation" id="id14"&gt;NSOperation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id15"&gt;并发执行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id16"&gt;非并发执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gcd" id="id17"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;线程概念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#run-loops" id="id19"&gt;Run Loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;基础知识&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;并发和并行。从技术角度来看，并发是程序的属性，而并行运作是机器的属性。并行和并发是两种分开的概念。作为程序员，你不能保证你的代码会在能并行执行你的代码的机器上运行。然而，你可以设计你的代码，让它使用并发操作。&lt;/p&gt;
&lt;p&gt;主要术语：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;任务&lt;/strong&gt;：一项需要完成的，简单，单一的任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程&lt;/strong&gt;：一种由操作系统提供的机制，允许多条指令在一个单独的程序中同时执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程&lt;/strong&gt;：一段可执行的代码，它可以由几个线程组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程，线程和任务之间的关系：&lt;/p&gt;
&lt;img alt="进程，线程和任务" src="images/Process_Thread_Task.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在iPhone和Mac中，线程功能是由POSIX Threads API（或者pthreads）提供的，它是操作系统的一部分。这是相当底层的东西，你会发现很容易犯错；也许线程最坏的地方就是那些极难被发现的错误吧！&lt;/p&gt;
&lt;p&gt;Foundation 框架包含了一个叫做NSThread的类 …&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id9"&gt;基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsthread" id="id10"&gt;NSThread&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id11"&gt;创建和启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id12"&gt;线程同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id13"&gt;线程交互&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsoperation" id="id14"&gt;NSOperation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id15"&gt;并发执行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id16"&gt;非并发执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gcd" id="id17"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;线程概念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#run-loops" id="id19"&gt;Run Loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;基础知识&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;并发和并行。从技术角度来看，并发是程序的属性，而并行运作是机器的属性。并行和并发是两种分开的概念。作为程序员，你不能保证你的代码会在能并行执行你的代码的机器上运行。然而，你可以设计你的代码，让它使用并发操作。&lt;/p&gt;
&lt;p&gt;主要术语：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;任务&lt;/strong&gt;：一项需要完成的，简单，单一的任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程&lt;/strong&gt;：一种由操作系统提供的机制，允许多条指令在一个单独的程序中同时执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程&lt;/strong&gt;：一段可执行的代码，它可以由几个线程组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程，线程和任务之间的关系：&lt;/p&gt;
&lt;img alt="进程，线程和任务" src="images/Process_Thread_Task.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在iPhone和Mac中，线程功能是由POSIX Threads API（或者pthreads）提供的，它是操作系统的一部分。这是相当底层的东西，你会发现很容易犯错；也许线程最坏的地方就是那些极难被发现的错误吧！&lt;/p&gt;
&lt;p&gt;Foundation 框架包含了一个叫做NSThread的类，他更容易处理，但是使用NSThread管理多个线程仍然是件令人头疼的事情。NSOperation和NSOperationQueue是更高级别的类，他们大大简化了处理多个线程的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="nsthread"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;NSThread&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id11"&gt;创建和启动&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;看文档可以了解到，创建一个线程主要有两个方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// designated initializer&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;initWithTarget:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="nf"&gt;selector:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;selector&lt;/span&gt; &lt;span class="nf"&gt;object:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用以上两种方法创建的线程需要手动启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外还有一种比较特殊，就是使用所谓的 convenient method，这个方法可以直接生成一个线程并启动它，而且无需为线程的清理负责。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;detachNewThreadSelector:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;selector&lt;/span&gt; &lt;span class="nf"&gt;toTarget:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="nf"&gt;withObject:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id12"&gt;线程同步&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;想一下多个窗口同时售票的售票系统。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  AppDelegate.h&lt;/span&gt;
&lt;span class="c1"&gt;//  SellTicket&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  Created by Chan Donly on 13-1-6.&lt;/span&gt;
&lt;span class="c1"&gt;//  Copyright (c) 2013年 Diaoser. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;

&lt;span class="cp"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;


&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;AppDelegate&lt;/span&gt; : &lt;span class="bp"&gt;UIResponder&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="bp"&gt;UIApplicationDelegate&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="bp"&gt;NSCondition&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;UIWindow&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;类的实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  AppDelegate.m&lt;/span&gt;
&lt;span class="c1"&gt;//  SellTicket&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  Created by Chan Donly on 13-1-6.&lt;/span&gt;
&lt;span class="c1"&gt;//  Copyright (c) 2013年 Diaoser. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;

&lt;span class="cp"&gt;#import &amp;quot;AppDelegate.h&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="nc"&gt;AppDelegate&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;dealloc&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_window&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;super&lt;/span&gt; &lt;span class="n"&gt;dealloc&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;application:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;UIApplication&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;application&lt;/span&gt; &lt;span class="nf"&gt;didFinishLaunchingWithOptions:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;launchOptions&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="bp"&gt;UIWindow&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithFrame&lt;/span&gt;&lt;span class="p"&gt;:[[&lt;/span&gt;&lt;span class="bp"&gt;UIScreen&lt;/span&gt; &lt;span class="n"&gt;mainScreen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="n"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// Override point for customization after application launch.&lt;/span&gt;

    &lt;span class="n"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// 锁对象&lt;/span&gt;
    &lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSCondition&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithTarget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="nl"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Thread-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithTarget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="nl"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Thread-2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//[NSThread detachNewThreadSelector:@selector(run) toTarget:self withObject:nil];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="n"&gt;makeKeyAndVisible&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 上锁&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="n"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="nl"&gt;sleepForTimeInterval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;当前票数是:%d,售出:%d,线程名:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;currentThread&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// [ticketsCondition signal];&lt;/span&gt;
        &lt;span class="c1"&gt;// 解除锁&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="n"&gt;unlock&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;当前票数是:100,售出:0,线程名:Thread-1
当前票数是:99,售出:1,线程名:Thread-2
当前票数是:98,售出:2,线程名:Thread-1
当前票数是:97,售出:3,线程名:Thread-2
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;线程交互&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如在主线程中修改界面。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;performSelectorOnMainThread:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;aSelector&lt;/span&gt; &lt;span class="nf"&gt;withObject:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt; &lt;span class="nf"&gt;waitUntilDone:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;wait&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在本过程中，可能需要释放一些资源，则需要使用NSAutoreleasePool来进行管理。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;startTheBackgroundJob&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="bp"&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// to do something in your thread job&lt;/span&gt;

    &lt;span class="p"&gt;...&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;performSelectorOnMainThread&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeMyProgressBarMoving&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;withObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt; &lt;span class="nl"&gt;waitUntilDone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;如果某个ViewController里运行了一个Thread，Thread还没结束的时候，这个ViewController被Release了，结果会如何？&lt;/strong&gt;&lt;/p&gt;
&lt;p style="color:red;"&gt;经过的的测试，Thread 不结束，ViewController 一直保留，不会执行 dealloc 方法。&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nsoperation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;NSOperation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NSoperation也是多线程的一种，NSopertaion有2种形式&lt;/p&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;并发执行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;并发执行你需要重载如下4个方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//执行任务主函数，线程运行的入口函数&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;//是否允许并发，返回YES，允许并发，返回NO不允许。默认返回NO&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isConcurrent&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isExecuting&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;//是否已经完成，这个必须要重载，不然放在放在NSOperationQueue里的NSOpertaion不能正常释放。&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isFinished&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如一个 TestNSOperation:NSoperaion 对象 testOperation 重载上述的4个方法，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSOperationQueue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="bp"&gt;NSOperationQueue&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="nl"&gt;addOperation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;testOperation&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会自动调用 testOperation 里的 start 函数，如果需要多个 NSOperation, 你需要设置 queue 的一些属性，如果多个 NSOperation 之间又依赖关系，也可以设置，具体可以参考 &lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/NSOperation_class/Reference/Reference.html"&gt;API&lt;/a&gt; 文档。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;非并发执行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;只需要重载这个 main 方法就可以了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gcd"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;GCD&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;iOS 4.0+ 才支持。&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;线程概念&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="run-loops"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;Run Loops&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 run loop 就是一个事件处理的循环，用来不停的调度工作以及处理输入事件。使用 run loop 的目的是让你的线程在有工作的时候忙于工作，而没工作的时候处于休眠状态。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="thread"></category></entry><entry><title>解决 OpenWrt Bad Address 问题</title><link href="https://magicalboy.com/openwrt-bad-address.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/openwrt-bad-address.html</id><summary type="html">&lt;p&gt;自升级 CC 后，一切都正常。&lt;/p&gt;
&lt;p&gt;突然有一天发现 DDNS 出了问题，LuCI 的服务界面都刷不完整。&lt;/p&gt;
&lt;p&gt;opkg update 失败。&lt;/p&gt;
&lt;p&gt;ping 所有网址都是 bad address，ping ip 地址正常。&lt;/p&gt;
&lt;p&gt;nslookup 只到 localhost 卡住。&lt;/p&gt;
&lt;p&gt;检查 DNS 配置 &lt;em&gt;vi /etc/config/dhcp&lt;/em&gt; 正常，网络配置 &lt;em&gt;/etc/config/network&lt;/em&gt; 正常。&lt;/p&gt;
&lt;p&gt;找了Ｎ久才发现 &lt;em&gt;/etc/resolv.conf&lt;/em&gt; 文件被修改，解决方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 删除 /etc/resolv.conf&lt;/span&gt;
vi /etc/resolv.conf …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;自升级 CC 后，一切都正常。&lt;/p&gt;
&lt;p&gt;突然有一天发现 DDNS 出了问题，LuCI 的服务界面都刷不完整。&lt;/p&gt;
&lt;p&gt;opkg update 失败。&lt;/p&gt;
&lt;p&gt;ping 所有网址都是 bad address，ping ip 地址正常。&lt;/p&gt;
&lt;p&gt;nslookup 只到 localhost 卡住。&lt;/p&gt;
&lt;p&gt;检查 DNS 配置 &lt;em&gt;vi /etc/config/dhcp&lt;/em&gt; 正常，网络配置 &lt;em&gt;/etc/config/network&lt;/em&gt; 正常。&lt;/p&gt;
&lt;p&gt;找了Ｎ久才发现 &lt;em&gt;/etc/resolv.conf&lt;/em&gt; 文件被修改，解决方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 删除 /etc/resolv.conf&lt;/span&gt;
vi /etc/resolv.conf
&lt;span class="c1"&gt;# 加入以下&lt;/span&gt;

nameserver &lt;span class="m"&gt;114&lt;/span&gt;.114.114.114
nameserver &lt;span class="m"&gt;114&lt;/span&gt;.114.114.115
nameserver &lt;span class="m"&gt;8&lt;/span&gt;.8.8.8
nameserver &lt;span class="m"&gt;8&lt;/span&gt;.8.4.4

&lt;span class="c1"&gt;# reboot&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;问题解决&lt;/p&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category></entry><entry><title>OpenWrt DDNS 配置</title><link href="https://magicalboy.com/openwrt-ddns.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/openwrt-ddns.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OpenWrt CC (LuCI)&lt;/li&gt;
&lt;li&gt;电信光纤 100M&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="luci-app-ddns"&gt;
&lt;h2&gt;一、安装 luci-app-ddns&lt;/h2&gt;
&lt;p&gt;登录路由器，进入 System -&amp;gt; Software，点击 Update lists 更新软件库。&lt;/p&gt;
&lt;p&gt;在 Filter 中输入关键字 ddns, 点击 Find package，然后在 Available packages 列表中找到 luci-i18n-ddns-en，OpenWrt 会自动分析依赖关系安装好 DDNS。&lt;/p&gt;
&lt;p&gt;安装完成后，在 System 和 Network 中间会多出一项 Services（假设之前没有安装过其他服务），里面有 Dynamic DNS 一项，点击进入配置界面。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ddns"&gt;
&lt;h2&gt;二、配置 DDNS&lt;/h2&gt;
&lt;p&gt;DDNS 服务提供商选择列表中没有花生壳服务 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OpenWrt CC (LuCI)&lt;/li&gt;
&lt;li&gt;电信光纤 100M&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="luci-app-ddns"&gt;
&lt;h2&gt;一、安装 luci-app-ddns&lt;/h2&gt;
&lt;p&gt;登录路由器，进入 System -&amp;gt; Software，点击 Update lists 更新软件库。&lt;/p&gt;
&lt;p&gt;在 Filter 中输入关键字 ddns, 点击 Find package，然后在 Available packages 列表中找到 luci-i18n-ddns-en，OpenWrt 会自动分析依赖关系安装好 DDNS。&lt;/p&gt;
&lt;p&gt;安装完成后，在 System 和 Network 中间会多出一项 Services（假设之前没有安装过其他服务），里面有 Dynamic DNS 一项，点击进入配置界面。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ddns"&gt;
&lt;h2&gt;二、配置 DDNS&lt;/h2&gt;
&lt;p&gt;DDNS 服务提供商选择列表中没有花生壳服务，使用 SSH 登录路由器修改：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;＃ vi /usr/lib/ddns/services
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按 G 跳到最后一行，加入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oray.com&amp;quot;&lt;/span&gt;      &lt;span class="s2"&gt;&amp;quot;http://[USERNAME]:[PASSWORD]@ddns.oray.com/ph/update?hostname=[DOMAIN]&amp;amp;myip=[IP]&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后再刷新页面，选择 Oray.com 服务，填写相关信息提交后马上就可以看到绑定的 IP 了。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category><category term="ddns"></category></entry><entry><title>OpenWrt Luci</title><link href="https://magicalboy.com/openwrt-luci.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/openwrt-luci.html</id><summary type="html">&lt;ol class="arabic simple"&gt;
&lt;li&gt;路由 Luci Web 界面访问不了问题&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
解决方法：重启 Luci&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/uhttpd restart
&lt;/pre&gt;&lt;/div&gt;
</summary><content type="html">&lt;ol class="arabic simple"&gt;
&lt;li&gt;路由 Luci Web 界面访问不了问题&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
解决方法：重启 Luci&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/init.d/uhttpd restart
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category></entry><entry><title>OpenWrt WDS 连接设置</title><link href="https://magicalboy.com/openwrt-wds.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/openwrt-wds.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;blockquote&gt;
算了不想写了&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="whr-g300n-v2"&gt;
&lt;h2&gt;WHR-G300N V2&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;产品名称： BUFFALO 巴法络 WHR-G300N V2，硬件配置同 Buffalo WHR-G301N。&lt;/li&gt;
&lt;li&gt;购买链接：&lt;a class="reference external" href="http://www.amazon.cn/BUFFALO"&gt;http://www.amazon.cn/BUFFALO&lt;/a&gt;-巴法络-WHR-G300N-V2-WHR-G300N-CH-高速无线路由器/dp/B005PKUNUC&lt;/li&gt;
&lt;li&gt;官网地址：&lt;a class="reference external" href="http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router"&gt;http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenWrt Wiki：&lt;a class="reference external" href="http://wiki.openwrt.org/toh/buffalo/whr-g300nv2"&gt;http://wiki.openwrt.org/toh/buffalo/whr-g300nv2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;刷机教程参考：&lt;a class="reference external" href="http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2"&gt;http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tftp"&gt;
&lt;h2&gt;砖头复活记：tftp …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;blockquote&gt;
算了不想写了&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="whr-g300n-v2"&gt;
&lt;h2&gt;WHR-G300N V2&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;产品名称： BUFFALO 巴法络 WHR-G300N V2，硬件配置同 Buffalo WHR-G301N。&lt;/li&gt;
&lt;li&gt;购买链接：&lt;a class="reference external" href="http://www.amazon.cn/BUFFALO"&gt;http://www.amazon.cn/BUFFALO&lt;/a&gt;-巴法络-WHR-G300N-V2-WHR-G300N-CH-高速无线路由器/dp/B005PKUNUC&lt;/li&gt;
&lt;li&gt;官网地址：&lt;a class="reference external" href="http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router"&gt;http://www.buffalotech.com/products/wireless/single-band-routers/airstation-n300-wireless-router&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OpenWrt Wiki：&lt;a class="reference external" href="http://wiki.openwrt.org/toh/buffalo/whr-g300nv2"&gt;http://wiki.openwrt.org/toh/buffalo/whr-g300nv2&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;刷机教程参考：&lt;a class="reference external" href="http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2"&gt;http://www.dd-wrt.com/wiki/index.php/WHR-G300N_V2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tftp"&gt;
&lt;h2&gt;砖头复活记：tftp 刷机教程&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;刷机环境：OS X El Capitan&lt;/li&gt;
&lt;li&gt;tftp 固件：&lt;a class="reference external" href="https://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/openwrt-15.05-ar71xx-generic-whr-g301n-squashfs-tftp.bin"&gt;https://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/openwrt-15.05-ar71xx-generic-whr-g301n-squashfs-tftp.bin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1. 用网线连接路由器，打开电源，用 ifconfig 查看网络接口，比如 en0；
修改本机 IP：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ifconfig en0 &lt;span class="m"&gt;192&lt;/span&gt;.168.11.2
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;配置网络，将 192.168.11.1 跟路由器的 MAC 地址关联起来：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo arp -s &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1 xx:xx:xx:xx:xx:xx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MAC 地址见背后标签上的 SSID。&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;这个时候可以断开路由器电源了，接着 cd 到固件所在目录，执行 tftp：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Set verbose mode on &lt;span class="o"&gt;(&lt;/span&gt;so we know what&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s going on&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; verbose
Verbose mode on.
Binary mode on &lt;span class="o"&gt;(&lt;/span&gt;because we are uploading a binary file&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; binary
mode &lt;span class="nb"&gt;set&lt;/span&gt; to octet
Trace on &lt;span class="o"&gt;(&lt;/span&gt;so we get feedback on our commands&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; trace
Packet tracing on.
Rexmt &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;to retry the upload on failure every &lt;span class="m"&gt;1&lt;/span&gt; second&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
tftp&amp;gt; rexmt &lt;span class="m"&gt;1&lt;/span&gt;
And timeout to &lt;span class="m"&gt;60&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;repeatedly retry the upload &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="m"&gt;60&lt;/span&gt; seconds before giving up&lt;span class="o"&gt;)&lt;/span&gt;
tftp&amp;gt; timeout &lt;span class="m"&gt;60&lt;/span&gt;
tftp&amp;gt; connect &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1
尽管路由器是关的
tftp&amp;gt; status
查看当前的配置状态
tftp&amp;gt; put tftp.bin
tftp.bin 就是下载回来的 openwrt-tftp版本的固件，已经被重命名。
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;将路由器的电源接上，同时重复执行以上的 put 指令，直到有以下反应：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tftp&amp;gt; put tftp.bin
putting tftp.bin to &lt;span class="m"&gt;192&lt;/span&gt;.168.11.1:tftp.bin &lt;span class="o"&gt;[&lt;/span&gt;octet&lt;span class="o"&gt;]&lt;/span&gt;
sent WRQ &amp;lt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tftp.bin, &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;octet&amp;gt;
sent WRQ &amp;lt;&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tftp.bin, &lt;span class="nv"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;octet&amp;gt;
received ACK &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&amp;gt;
sent DATA &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="m"&gt;512&lt;/span&gt; bytes&amp;gt;
...
sent DATA &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6529&lt;/span&gt;, &lt;span class="m"&gt;36&lt;/span&gt; bytes&amp;gt;
received ACK &amp;lt;&lt;span class="nv"&gt;block&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6529&lt;/span&gt;&amp;gt;
Sent &lt;span class="m"&gt;3342372&lt;/span&gt; bytes in &lt;span class="m"&gt;2&lt;/span&gt;.7 seconds &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9903324&lt;/span&gt; bits/sec&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时上传完毕，可以输入 quit 退出。&lt;/p&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;路由器红色的灯会有不同的反应，几分钟后会自动重启。此致，成功复活！&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category></entry><entry><title>Pelican</title><link href="https://magicalboy.com/pelican.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/pelican.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="pelican logo" src="http://docs.getpelican.com/en/3.2/_static/pelican.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/"&gt;Pelican&lt;/a&gt; is a static site generator, written in &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;目前最新版本为 &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/changelog.html#id1"&gt;3.2 (2013-04-24)&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;写作流程&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;开启 virtualenv&lt;/li&gt;
&lt;li&gt;进入工作目录&lt;/li&gt;
&lt;li&gt;$ make devserver&lt;/li&gt;
&lt;li&gt;./develop_server.sh stop&lt;/li&gt;
&lt;li&gt;发布直接使用配置好的 &lt;tt class="docutils literal"&gt;git comit &amp;amp; push&lt;/tt&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多详细流程见 &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/getting_started.html"&gt;Getting started — Pelican 3 documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="pelican logo" src="http://docs.getpelican.com/en/3.2/_static/pelican.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/"&gt;Pelican&lt;/a&gt; is a static site generator, written in &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;目前最新版本为 &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/changelog.html#id1"&gt;3.2 (2013-04-24)&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;写作流程&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;开启 virtualenv&lt;/li&gt;
&lt;li&gt;进入工作目录&lt;/li&gt;
&lt;li&gt;$ make devserver&lt;/li&gt;
&lt;li&gt;./develop_server.sh stop&lt;/li&gt;
&lt;li&gt;发布直接使用配置好的 &lt;tt class="docutils literal"&gt;git comit &amp;amp; push&lt;/tt&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更多详细流程见 &lt;a class="reference external" href="http://docs.getpelican.com/en/3.2/getting_started.html"&gt;Getting started — Pelican 3 documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Photoshop 学习笔记</title><link href="https://magicalboy.com/photoshop.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/photoshop.html</id><summary type="html">&lt;p&gt;Photoshop 是设计作图的必备工具，如果码农也会使用Photoshop来设计UI的话。。。唉，无论结果怎么样，求人不如求己。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Photoshop 简介&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="photoshop icon" src="static/images/Adobe_Photoshop_CS6_icon.svg.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Photoshop CS 5.1" class="align-left" src="static/images/photoshop.jpg" style="width: 800px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Adobe Photoshop，简称“PS”（其程序图标便是“PS”）是一个由Adobe Systems开发和发行的图像处理软件。
目前稳定版本 为 &lt;a class="reference external" href="http://www.adobe.com/support/downloads/product.jsp?product=39&amp;amp;platform=Windows%7Caccessdate=2012-04-23}"&gt;CS6 (13.0)&lt;/a&gt; 2012年4月23日。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Photoshop 基础&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;图层、蒙板、模式和样式&lt;/h3&gt;
&lt;p&gt;经常看到美工MM设计好的PS文件都是由很多 &lt;strong&gt;图层（Layer）&lt;/strong&gt; 组成的，就像一个平铺好的三文治。图层面板实际上就是一幅动态的堆栈图表。屏幕中显示的图像就是它们的俯视图。&lt;/p&gt;
&lt;p&gt;堆栈由几种不同类型的图层组成：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;背景（Background）图层，在堆栈的最下方，完全由像素填充而成。&lt;/li&gt;
&lt;li&gt;一般图层，也由像素组成。不同的是可以包含完全透明或半透明的区域，可以透过透明区域看到下层图层。&lt;/li&gt;
&lt;li&gt;调整图层（Adjustment Layer），不包含任何像素，它所包含的指令可以调整其下方图层的颜色与色调。&lt;/li&gt;
&lt;li&gt;文本图层 …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Photoshop 是设计作图的必备工具，如果码农也会使用Photoshop来设计UI的话。。。唉，无论结果怎么样，求人不如求己。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Photoshop 简介&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="photoshop icon" src="static/images/Adobe_Photoshop_CS6_icon.svg.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Photoshop CS 5.1" class="align-left" src="static/images/photoshop.jpg" style="width: 800px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Adobe Photoshop，简称“PS”（其程序图标便是“PS”）是一个由Adobe Systems开发和发行的图像处理软件。
目前稳定版本 为 &lt;a class="reference external" href="http://www.adobe.com/support/downloads/product.jsp?product=39&amp;amp;platform=Windows%7Caccessdate=2012-04-23}"&gt;CS6 (13.0)&lt;/a&gt; 2012年4月23日。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Photoshop 基础&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;图层、蒙板、模式和样式&lt;/h3&gt;
&lt;p&gt;经常看到美工MM设计好的PS文件都是由很多 &lt;strong&gt;图层（Layer）&lt;/strong&gt; 组成的，就像一个平铺好的三文治。图层面板实际上就是一幅动态的堆栈图表。屏幕中显示的图像就是它们的俯视图。&lt;/p&gt;
&lt;p&gt;堆栈由几种不同类型的图层组成：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;背景（Background）图层，在堆栈的最下方，完全由像素填充而成。&lt;/li&gt;
&lt;li&gt;一般图层，也由像素组成。不同的是可以包含完全透明或半透明的区域，可以透过透明区域看到下层图层。&lt;/li&gt;
&lt;li&gt;调整图层（Adjustment Layer），不包含任何像素，它所包含的指令可以调整其下方图层的颜色与色调。&lt;/li&gt;
&lt;li&gt;文本图层（Type Layer），存放文字的图层，可以编辑调整颜色等。&lt;/li&gt;
&lt;li&gt;填充图层和形状图层，颜色像素及对应的指令，如渐变或图案等。&lt;/li&gt;
&lt;li&gt;智能对象（Smart Object），是元素的集合体。先理解为很牛Ｘ的东西就了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;蒙板&lt;/strong&gt;，除背景图层外其它图层都可以包含两种蒙板：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;图层蒙板，基于像素。&lt;/li&gt;
&lt;li&gt;失量蒙板，基于指令。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它们的作用是遮盖其下方的部分图层来显示。其它显示模式有 &lt;strong&gt;不透明度&lt;/strong&gt;、&lt;strong&gt;混合模式&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图层样式&lt;/strong&gt;，除背景图层外，其它图层都可以包含图层样式。样式是一种指令集，可以创建投影、发光和斜面等特效，或者模拟带有半透明、光照、色彩和图案的材质。双击某一普通图层可以打开选项。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;像素与指令&lt;/h3&gt;
&lt;p&gt;像素与指令的区别：简单说，基于像素的图像是位图，基于指令的图像为矢量图。&lt;/p&gt;
&lt;p&gt;基于指令的素材都可以还原到初始状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栅格化&lt;/strong&gt; 指的是将指令转换为像素。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;Photoshop 界面&lt;/h3&gt;
&lt;p&gt;什么工作区、导航就不写了，自己熟悉一下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;高效工作&lt;/h3&gt;
&lt;p&gt;使用调整图层，保护像素，保存选区，使用图层样式，复制图层，合并复制等概念。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>程序语言历史</title><link href="https://magicalboy.com/programming-history.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/programming-history.html</id><summary type="html">&lt;a class="reference external image-reference" href="http://staff.pausd.org/~cbly/1web_design/12b_final/daniel/history.html"&gt;&lt;img alt="programming history" src="http://staff.pausd.org/~cbly/1web_design/12b_final/daniel/images/programminghistory.jpg" style="width: 1024px;" /&gt;&lt;/a&gt;
</summary><content type="html">&lt;a class="reference external image-reference" href="http://staff.pausd.org/~cbly/1web_design/12b_final/daniel/history.html"&gt;&lt;img alt="programming history" src="http://staff.pausd.org/~cbly/1web_design/12b_final/daniel/images/programminghistory.jpg" style="width: 1024px;" /&gt;&lt;/a&gt;
</content><category term="programming"></category><category term="programming language"></category><category term="history"></category></entry><entry><title>反编译 APK</title><link href="https://magicalboy.com/reverse-engineering-apk.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/reverse-engineering-apk.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#apktool" id="id3"&gt;apktool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dex2jar" id="id4"&gt;dex2jar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apktool"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;apktool&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://ibotpeaches.github.io/Apktool/"&gt;apktool1.5.2&lt;/a&gt; 使用示范，直接运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Apktool v1.5.2 - a tool &lt;span class="k"&gt;for&lt;/span&gt; reengineering Android apk files
Copyright &lt;span class="m"&gt;2010&lt;/span&gt; Ryszard Wi?niewski &amp;lt;brut.alll@gmail.com&amp;gt;
with smali v1.4.1, and baksmali v1.4.1
Updated by @iBotPeaches &amp;lt;connor.tumbleson@gmail.com&amp;gt;
Apache License &lt;span class="m"&gt;2&lt;/span&gt;.0 …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#apktool" id="id3"&gt;apktool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dex2jar" id="id4"&gt;dex2jar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apktool"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;apktool&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://ibotpeaches.github.io/Apktool/"&gt;apktool1.5.2&lt;/a&gt; 使用示范，直接运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Apktool v1.5.2 - a tool &lt;span class="k"&gt;for&lt;/span&gt; reengineering Android apk files
Copyright &lt;span class="m"&gt;2010&lt;/span&gt; Ryszard Wi?niewski &amp;lt;brut.alll@gmail.com&amp;gt;
with smali v1.4.1, and baksmali v1.4.1
Updated by @iBotPeaches &amp;lt;connor.tumbleson@gmail.com&amp;gt;
Apache License &lt;span class="m"&gt;2&lt;/span&gt;.0 &lt;span class="o"&gt;(&lt;/span&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;span class="o"&gt;)&lt;/span&gt;

Usage: apktool &lt;span class="o"&gt;[&lt;/span&gt;-q&lt;span class="p"&gt;|&lt;/span&gt;--quiet OR -v&lt;span class="p"&gt;|&lt;/span&gt;--verbose&lt;span class="o"&gt;]&lt;/span&gt; COMMAND &lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

COMMANDs are:

    d&lt;span class="o"&gt;[&lt;/span&gt;ecode&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;OPTS&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;file.apk&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;dir&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
        Decode &amp;lt;file.apk&amp;gt; to &amp;lt;dir&amp;gt;.

        OPTS:

        -s, --no-src
            Do not decode sources.
        -r, --no-res
            Do not decode resources.
        -d, --debug
            Decode in debug mode. Check project page &lt;span class="k"&gt;for&lt;/span&gt; more info.
        -b, --no-debug-info
            Baksmali -- don&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t write out debug info &lt;span class="o"&gt;(&lt;/span&gt;.local, .param, .line, etc.&lt;span class="o"&gt;)&lt;/span&gt;
        -f, --force
            Force delete destination directory.
        -t &amp;lt;tag&amp;gt;, --frame-tag &amp;lt;tag&amp;gt;
            Try to use framework files tagged by &amp;lt;tag&amp;gt;.
        --frame-path &amp;lt;dir&amp;gt;
            Use the specified directory &lt;span class="k"&gt;for&lt;/span&gt; framework files
        --keep-broken-res
            Use &lt;span class="k"&gt;if&lt;/span&gt; there was an error and some resources were dropped, e.g.:
            &lt;span class="s2"&gt;&amp;quot;Invalid config flags detected. Dropping resources&amp;quot;&lt;/span&gt;, but you
            want to decode them anyway, even with errors. You will have to
            fix them manually before building.

    b&lt;span class="o"&gt;[&lt;/span&gt;uild&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;OPTS&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;app_path&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;out_file&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
        Build an apk from already decoded application located in &amp;lt;app_path&amp;gt;.

        It will automatically detect, whether files was changed and perform
        needed steps only.

        If you omit &amp;lt;app_path&amp;gt; &lt;span class="k"&gt;then&lt;/span&gt; current directory will be used.
        If you omit &amp;lt;out_file&amp;gt; &lt;span class="k"&gt;then&lt;/span&gt; &amp;lt;app_path&amp;gt;/dist/&amp;lt;name_of_original.apk&amp;gt;
        will be used.

        OPTS:

        -f, --force-all
            Skip changes detection and build all files.
        -d, --debug
            Build in debug mode. Check project page &lt;span class="k"&gt;for&lt;/span&gt; more info.
        -a, --aapt
            Loads aapt from specified location.

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;install-framework &amp;lt;framework.apk&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;tag&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; --frame-path &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;location&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;
        Install framework file to your system.

For additional info, see: http://code.google.com/p/android-apktool/
For smali/baksmali info, see: http://code.google.com/p/smali/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用示例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ java -jar /Users/Don/Development/apktool1.5.2/apktool.jar d /Users/Don/Downloads/controls.apk

I: Baksmaling...
I: Loading resource table...
I: Loaded.
I: Decoding AndroidManifest.xml with resources...
I: Loading resource table from file: /Users/Don/Library/apktool/framework/1.apk
I: Loaded.
I: Regular manifest package...
I: Decoding file-resources...
I: Decoding values */* XMLs...
I: Done.
I: Copying assets and libs...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;成功后会在当前目录找到反编译好的目录，目录与apk文件同名。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dex2jar"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;dex2jar&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://code.google.com/p/dex2jar/"&gt;dex2jar&lt;/a&gt; - Tools to work with android .dex and java .class files&lt;/p&gt;
&lt;p&gt;将 apk 转换为 jar 的方法：将 apk 文件命名解压出来，然后复制解压到的 classes.dex 文件到 dex2jar 目录，执行 dex2jar 命令（以 OS X 为例）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./dex2jar.sh classes.dex

this cmd is deprecated, use the d2j-dex2jar &lt;span class="k"&gt;if&lt;/span&gt; possible
dex2jar version: translator-0.0.9.15
dex2jar classes.dex -&amp;gt; classes_dex2jar.jar
Done.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;成功后会得到相应的 jar 文件，接着可以拖到 &lt;a class="reference external" href="http://jd.benow.ca/"&gt;http://jd.benow.ca/&lt;/a&gt; 上面直接看结果，或者下载相应平台的客户端等。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>码农必备</title><link href="https://magicalboy.com/skill-framework.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/skill-framework.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="码农的求生技能" src="images/skills.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="码农的求生技能" src="images/skills.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>SVN 使用</title><link href="https://magicalboy.com/svn.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2015-05-28T11:50:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/svn.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;创建分支&lt;/h2&gt;
&lt;p&gt;建立分支非常的简单—使用svn copy命令给你的工程做个拷贝。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn copy http://svn.example.com/repos/calc/trunk &lt;span class="se"&gt;\&lt;/span&gt;
           http://svn.example.com/repos/calc/branches/my-calc-branch &lt;span class="se"&gt;\&lt;/span&gt;
      -m &lt;span class="s2"&gt;&amp;quot;Creating a private branch of /calc/trunk.&amp;quot;&lt;/span&gt;

Committed revision &lt;span class="m"&gt;341&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;在分支上工作&lt;/h2&gt;
&lt;p&gt;现在你已经在项目里建立分支了，你可以取出一个新的工作拷贝来开始使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn checkout http://svn.example.com/repos/calc/branches/my-calc-branch
A  my-calc-branch/Makefile
A  my-calc-branch …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;创建分支&lt;/h2&gt;
&lt;p&gt;建立分支非常的简单—使用svn copy命令给你的工程做个拷贝。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn copy http://svn.example.com/repos/calc/trunk &lt;span class="se"&gt;\&lt;/span&gt;
           http://svn.example.com/repos/calc/branches/my-calc-branch &lt;span class="se"&gt;\&lt;/span&gt;
      -m &lt;span class="s2"&gt;&amp;quot;Creating a private branch of /calc/trunk.&amp;quot;&lt;/span&gt;

Committed revision &lt;span class="m"&gt;341&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;在分支上工作&lt;/h2&gt;
&lt;p&gt;现在你已经在项目里建立分支了，你可以取出一个新的工作拷贝来开始使用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn checkout http://svn.example.com/repos/calc/branches/my-calc-branch
A  my-calc-branch/Makefile
A  my-calc-branch/integer.c
A  my-calc-branch/button.c
Checked out revision &lt;span class="m"&gt;341&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode-svnignore"&gt;
&lt;h2&gt;为 Xcode 项目增加 .svnignore&lt;/h2&gt;
&lt;p&gt;在 SVN 中没有类似于 git 的 ignore 那样，只要添加就能自动过滤，而是需要手动设定，下面经常使用的 .svnignore template：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;.DS_Store
xcuserdata
build
*.mode1v3
*.pbxuser
*.xcworkspace
*.moved-aside
DerivedData

&lt;span class="c1"&gt;# If you are using CocoaPods&lt;/span&gt;
Pods
Podfile.lock
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ svn propset svn:ignore -R -F .svnignore .
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考连接&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.subversion.org.cn/svnbook/nightly/svn.branchmerge.using.html"&gt;http://www.subversion.org.cn/svnbook/nightly/svn.branchmerge.using.html&lt;/a&gt;
&lt;a class="reference external" href="http://blog.kumaya.co/2014/09/25/using-svn-ignore-with-xcode/"&gt;http://blog.kumaya.co/2014/09/25/using-svn-ignore-with-xcode/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>纯文本编辑器</title><link href="https://magicalboy.com/text_editor.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/text_editor.html</id><summary type="html">&lt;div class="section" id="retext"&gt;
&lt;h2&gt;ReText&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sourceforge.net/projects/retext/"&gt;ReText&lt;/a&gt; is a simple editor that reads your text with MarkDown or HTML markup and saves it as plain text, HTML or PDF.&lt;/p&gt;
&lt;p&gt;It is written in Python using Qt libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It's a cross platform program.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="mac-os-x-yosemite"&gt;
&lt;h3&gt;Mac OS X Yosemite 上安装&lt;/h3&gt;
&lt;p&gt;使用 brew 安装：&lt;a class="reference external" href="http://sourceforge.net/p/retext/wiki/Home/"&gt;http://sourceforge.net/p/retext …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="retext"&gt;
&lt;h2&gt;ReText&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sourceforge.net/projects/retext/"&gt;ReText&lt;/a&gt; is a simple editor that reads your text with MarkDown or HTML markup and saves it as plain text, HTML or PDF.&lt;/p&gt;
&lt;p&gt;It is written in Python using Qt libraries.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It's a cross platform program.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="mac-os-x-yosemite"&gt;
&lt;h3&gt;Mac OS X Yosemite 上安装&lt;/h3&gt;
&lt;p&gt;使用 brew 安装：&lt;a class="reference external" href="http://sourceforge.net/p/retext/wiki/Home/"&gt;http://sourceforge.net/p/retext/wiki/Home/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是部分安装日志：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew tap homebrew/python
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Tapping Homebrew/python
Cloning into &lt;span class="s1"&gt;&amp;#39;/usr/local/Library/Taps/homebrew/homebrew-python&amp;#39;&lt;/span&gt;...
remote: Counting objects: &lt;span class="m"&gt;16&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Compressing objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;/16&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total &lt;span class="m"&gt;16&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, reused &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;delta &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, pack-reused &lt;span class="m"&gt;0&lt;/span&gt;
Unpacking objects: &lt;span class="m"&gt;100&lt;/span&gt;% &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;16&lt;/span&gt;/16&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
Checking connectivity... &lt;span class="k"&gt;done&lt;/span&gt;.
Tapped &lt;span class="m"&gt;13&lt;/span&gt; formulae &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt; files, 216K&lt;span class="o"&gt;)&lt;/span&gt;

$ brew install &lt;span class="nv"&gt;retext&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing retext from homebrew/homebrew-python
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing dependencies &lt;span class="k"&gt;for&lt;/span&gt; retext: xz, pkg-config, readline, sqlite,
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing retext dependency: &lt;span class="nv"&gt;xz&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xz-5.2.1.yosemite.bottle.ta
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装编译完成后，直接调用 &lt;em&gt;retext&lt;/em&gt; 命令即可打开带图形界面的编辑器。That's all，就这么简单。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mac-os-x-10-9-2"&gt;
&lt;h3&gt;Mac OS X（10.9.2） 上安装&lt;/h3&gt;
&lt;p&gt;使用 brew 安装：&lt;a class="reference external" href="http://sourceforge.net/p/retext/wiki/Home/"&gt;http://sourceforge.net/p/retext/wiki/Home/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew tap samueljohn/python
brew install enchant
pip install pyenchant
pip install markups
pip install markdown
pip install docutils

$ brew install retext
Warning: It appears you have MacPorts or Fink installed.
Software installed with other package managers causes known problems &lt;span class="k"&gt;for&lt;/span&gt;
Homebrew. If a formula fails to build, uninstall MacPorts/Fink and try again.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing dependencies &lt;span class="k"&gt;for&lt;/span&gt; retext: qt, sip, &lt;span class="nv"&gt;pyqt&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing retext dependency: &lt;span class="nv"&gt;qt&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/qt-4.8.5.mavericks.bottle.4.tar.gz
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装时遇到的问题：&lt;/p&gt;
&lt;p&gt;Q1: Could not link glib&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew link glib
Linking /usr/local/Cellar/glib/2.38.2... Warning: Could not link glib. Unlinking...

Error: Could not symlink file: /usr/local/Cellar/glib/2.38.2/share/locale/hr/LC_MESSAGES/glib20.mo
/usr/local/share/locale/hr/LC_MESSAGES is not writable. You should change its permissions.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo chown -R &lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;:admin /usr/local
$ brew link glib
Linking /usr/local/Cellar/glib/2.38.2... &lt;span class="m"&gt;136&lt;/span&gt; symlinks created
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Q2: install enchant error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install enchant
Warning: It appears you have MacPorts or Fink installed.
Software installed with other package managers causes known problems &lt;span class="k"&gt;for&lt;/span&gt;
Homebrew. If a formula fails to build, uninstall MacPorts/Fink and try again.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing enchant dependency: &lt;span class="nv"&gt;aspell&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading http://ftpmirror.gnu.org/aspell/aspell-0.60.6.1.tar.gz
Already downloaded: /Library/Caches/Homebrew/aspell-0.60.6.1.tar.gz
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; ./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/aspell/0.60.6.1
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; make install
&lt;span class="m"&gt;20&lt;/span&gt; errors generated.
make&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: *** &lt;span class="o"&gt;[&lt;/span&gt;prog/checker_string.o&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;20&lt;/span&gt; errors generated.
make&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: *** &lt;span class="o"&gt;[&lt;/span&gt;prog/aspell.o&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;
make: *** &lt;span class="o"&gt;[&lt;/span&gt;install-recursive&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;

READ THIS: https://github.com/Homebrew/homebrew/wiki/troubleshooting
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew update
$ brew doctor
$ brew install enchant
Warning: It appears you have MacPorts or Fink installed.
Software installed with other package managers causes known problems &lt;span class="k"&gt;for&lt;/span&gt;
Homebrew. If a formula fails to build, uninstall MacPorts/Fink and try again.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing dependencies &lt;span class="k"&gt;for&lt;/span&gt; enchant: glib, &lt;span class="nv"&gt;aspell&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing enchant dependency: &lt;span class="nv"&gt;glib&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/glib-2.40.0.mavericks.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring glib-2.40.0.mavericks.bottle.tar.gz
  /usr/local/Cellar/glib/2.40.0: &lt;span class="m"&gt;410&lt;/span&gt; files, &lt;span class="nv"&gt;18M&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing enchant dependency: &lt;span class="nv"&gt;aspell&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading http://ftpmirror.gnu.org/aspell/aspell-0.60.6.1.tar.gz
Already downloaded: /Library/Caches/Homebrew/aspell-0.60.6.1.tar.gz
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Patching
patching file interfaces/cc/aspell.h
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; ./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/aspell/0.60.6.1
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; make &lt;span class="nv"&gt;install&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading http://ftpmirror.gnu.org/aspell/dict/en/aspell6-en-7.1-0.tar.bz2
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; ./configure --vars &lt;span class="nv"&gt;ASPELL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/aspell/0.60.6.1/bin/aspell &lt;span class="nv"&gt;PREZIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/aspell/0.60.6.1/bin/prezip
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; make install
  /usr/local/Cellar/aspell/0.60.6.1: &lt;span class="m"&gt;181&lt;/span&gt; files, &lt;span class="m"&gt;6&lt;/span&gt;.5M, built in &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="nv"&gt;seconds&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Installing &lt;span class="nv"&gt;enchant&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading http://www.abisource.com/downloads/enchant/1.6.0/enchant-1.6.0.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; ./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/enchant/1.6.0 --disable-ispell --disable-myspell
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; make &lt;span class="nv"&gt;install&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://pypi.python.org/packages/source/p/pyenchant/pyenchant-1.6.5.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; python setup.py install --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/enchant/1.6.0 --single-version-externally-managed --record&lt;span class="o"&gt;=&lt;/span&gt;installed.txt
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Caveats
If you need Python to find the installed site-packages:
  mkdir -p ~/Library/Python/2.7/lib/python/site-packages
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/usr/local/lib/python2.7/site-packages&amp;#39;&lt;/span&gt; &amp;gt; ~/Library/Python/2.7/lib/python/site-packages/homebrew.pth
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Summary
  /usr/local/Cellar/enchant/1.6.0: &lt;span class="m"&gt;55&lt;/span&gt; files, 676K, built in &lt;span class="m"&gt;28&lt;/span&gt; seconds
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Q3: pip install pyenchant failed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install pyenchant
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;/usr/local/bin/pip&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;5&lt;/span&gt;, in &amp;lt;module&amp;gt;
    from pkg_resources import load_entry_point
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;2603&lt;/span&gt;, in &amp;lt;module&amp;gt;
    working_set.require&lt;span class="o"&gt;(&lt;/span&gt;__requires__&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;666&lt;/span&gt;, in require
    &lt;span class="nv"&gt;needed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; self.resolve&lt;span class="o"&gt;(&lt;/span&gt;parse_requirements&lt;span class="o"&gt;(&lt;/span&gt;requirements&lt;span class="o"&gt;))&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;565&lt;/span&gt;, in resolve
    raise DistributionNotFound&lt;span class="o"&gt;(&lt;/span&gt;req&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# XXX put more info here&lt;/span&gt;
pkg_resources.DistributionNotFound: &lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.4.1
donlydeMacBook-Pro:Vizrt Sun-cam$ pip install markups
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;/usr/local/bin/pip&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;5&lt;/span&gt;, in &amp;lt;module&amp;gt;
    from pkg_resources import load_entry_point
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;2603&lt;/span&gt;, in &amp;lt;module&amp;gt;
    working_set.require&lt;span class="o"&gt;(&lt;/span&gt;__requires__&lt;span class="o"&gt;)&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;666&lt;/span&gt;, in require
    &lt;span class="nv"&gt;needed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; self.resolve&lt;span class="o"&gt;(&lt;/span&gt;parse_requirements&lt;span class="o"&gt;(&lt;/span&gt;requirements&lt;span class="o"&gt;))&lt;/span&gt;
  File &lt;span class="s2"&gt;&amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py&amp;quot;&lt;/span&gt;, line &lt;span class="m"&gt;565&lt;/span&gt;, in resolve
    raise DistributionNotFound&lt;span class="o"&gt;(&lt;/span&gt;req&lt;span class="o"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# XXX put more info here&lt;/span&gt;
pkg_resources.DistributionNotFound: &lt;span class="nv"&gt;pip&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.4.1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo easy_install --upgrade pip
Password:
Searching &lt;span class="k"&gt;for&lt;/span&gt; pip
Reading http://pypi.python.org/simple/pip/
Best match: pip &lt;span class="m"&gt;1&lt;/span&gt;.5.4
Downloading https://pypi.python.org/packages/source/p/pip/pip-1.5.4.tar.gz#md5&lt;span class="o"&gt;=&lt;/span&gt;834b2904f92d46aaa333267fb1c922bb
Processing pip-1.5.4.tar.gz
Running pip-1.5.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-hsbdrM/pip-1.5.4/egg-dist-tmp-c3ITXY
warning: no files found matching &lt;span class="s1"&gt;&amp;#39;pip/cacert.pem&amp;#39;&lt;/span&gt;
warning: no files found matching &lt;span class="s1"&gt;&amp;#39;*.html&amp;#39;&lt;/span&gt; under directory &lt;span class="s1"&gt;&amp;#39;docs&amp;#39;&lt;/span&gt;
warning: no previously-included files matching &lt;span class="s1"&gt;&amp;#39;*.rst&amp;#39;&lt;/span&gt; found under directory &lt;span class="s1"&gt;&amp;#39;docs/_build&amp;#39;&lt;/span&gt;
no previously-included directories found matching &lt;span class="s1"&gt;&amp;#39;docs/_build/_sources&amp;#39;&lt;/span&gt;
Adding pip &lt;span class="m"&gt;1&lt;/span&gt;.5.4 to easy-install.pth file
Installing pip script to /usr/local/bin
Installing pip2.7 script to /usr/local/bin
Installing pip2 script to /usr/local/bin

Installed /Library/Python/2.7/site-packages/pip-1.5.4-py2.7.egg
Processing dependencies &lt;span class="k"&gt;for&lt;/span&gt; pip
Finished processing dependencies &lt;span class="k"&gt;for&lt;/span&gt; pip

$ sudo pip install pyenchant
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Q4: Install retext&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install retext
Warning: It appears you have MacPorts or Fink installed.
Software installed with other package managers causes known problems &lt;span class="k"&gt;for&lt;/span&gt;
Homebrew. If a formula fails to build, uninstall MacPorts/Fink and try again.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://downloads.sourceforge.net/project/retext/ReText-4.0/ReText-4.0.0.tar.gz
Already downloaded: /Library/Caches/Homebrew/retext-4.0.0.tar.gz
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; python setup.py install --prefix&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/retext/4.0.0
Warning: Formula#python is deprecated and will go away shortly.
Error: undefined method &lt;span class="sb"&gt;`&lt;/span&gt;xy&lt;span class="s1"&gt;&amp;#39; for #&amp;lt;PythonDependency: &amp;quot;python&amp;quot; []&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;Please report this bug:&lt;/span&gt;
&lt;span class="s1"&gt;    https://github.com/Homebrew/homebrew/wiki/troubleshooting&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Taps/samueljohn-python/retext.rb:26:in `install&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/build.rb:174:in &lt;span class="sb"&gt;`&lt;/span&gt;install&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Homebrew/formula.rb:267:in `brew&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/formula.rb:592:in &lt;span class="sb"&gt;`&lt;/span&gt;stage&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Homebrew/resource.rb:62:in `unpack&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/extend/fileutils.rb:21:in &lt;span class="sb"&gt;`&lt;/span&gt;mktemp&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Homebrew/resource.rb:59:in `unpack&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/resource.rb:52:in &lt;span class="sb"&gt;`&lt;/span&gt;stage&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Homebrew/formula.rb:590:in `stage&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/formula.rb:262:in &lt;span class="sb"&gt;`&lt;/span&gt;brew&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;/usr/local/Library/Homebrew/build.rb:151:in `install&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/build.rb:45:in &lt;span class="sb"&gt;`&lt;/span&gt;main&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
/usr/local/Library/Homebrew/build.rb:12
/usr/local/Library/Taps/samueljohn-python/retext.rb:33
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;直接下载ReText源码，使用brew安装Python3，重新安装PyQt4 --with-python3，进入ReText-4.1.2，输入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python3 setup.py install

running install
running build
running build_py
running build_scripts
copying and adjusting retext.py -&amp;gt; build/scripts-3.4
running install_lib
copying build/lib/.DS_Store -&amp;gt; /usr/local/lib/python3.4/site-packages
running install_scripts
copying build/scripts-3.4/retext.py -&amp;gt; /usr/local/bin
copying build/scripts-3.4/wpgen.py -&amp;gt; /usr/local/bin
changing mode of /usr/local/bin/retext.py to &lt;span class="m"&gt;755&lt;/span&gt;
changing mode of /usr/local/bin/wpgen.py to &lt;span class="m"&gt;755&lt;/span&gt;
renaming /usr/local/bin/retext.py to /usr/local/bin/retext
renaming /usr/local/bin/wpgen.py to /usr/local/bin/wpgen
running install_data
running install_egg_info
Removing /usr/local/lib/python3.4/site-packages/ReText-4.1.2-py3.4.egg-info
Writing /usr/local/lib/python3.4/site-packages/ReText-4.1.2-py3.4.egg-info
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下载资源文件：&lt;a class="reference external" href="https://downloads.sourceforge.net/project/retext/Icons/ReTextIcons_r3.tar.gz"&gt;https://downloads.sourceforge.net/project/retext/Icons/ReTextIcons_r3.tar.gz&lt;/a&gt;'
复制到 /usr/local/lib/python3.4/site-packages/ReText/icons，修改 /usr/local/lib/python3.4/site-packages/ReText/__init__.py 中的 icon_path = &amp;quot;/usr/local/lib/python3.4/site-packages/ReText/icons/&amp;quot;&lt;/p&gt;
&lt;p&gt;最终运行效果图：&lt;/p&gt;
&lt;img alt="ReText 4.1.2" src="images/ReText4.1.2.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;参考资料&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sourceforge.net/p/retext/wiki/Home/"&gt;Wiki&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;更新日志&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2015-05-17：增加 Mac OS X Yosemite 上安装&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>UIImage 使用</title><link href="https://magicalboy.com/uiimage.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/uiimage.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIImage_Class/Reference/Reference.html"&gt;UIImage Class Reference&lt;/a&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Inherits from&lt;/td&gt;
&lt;td&gt;NSObject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Framework&lt;/td&gt;
&lt;td&gt;/System/Library/Frameworks/UIKit.framework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Availability&lt;/td&gt;
&lt;td&gt;Available in iOS 2.0 and later.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="stretch"&gt;
&lt;h2&gt;Stretch&lt;/h2&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/IPNUm.png" /&gt;
&lt;p&gt;拉伸为&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/1skMj.png" /&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="nl"&gt;imageNamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;myImage.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// iOS 5 and obove.&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="bp"&gt;UIEdgeInsets&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIImage_Class/Reference/Reference.html"&gt;UIImage Class Reference&lt;/a&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Inherits from&lt;/td&gt;
&lt;td&gt;NSObject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Framework&lt;/td&gt;
&lt;td&gt;/System/Library/Frameworks/UIKit.framework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Availability&lt;/td&gt;
&lt;td&gt;Available in iOS 2.0 and later.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="stretch"&gt;
&lt;h2&gt;Stretch&lt;/h2&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/IPNUm.png" /&gt;
&lt;p&gt;拉伸为&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/1skMj.png" /&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="nl"&gt;imageNamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;myImage.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// iOS 5 and obove.&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="bp"&gt;UIEdgeInsets&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;stretchableImageWithLeftCapWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nl"&gt;topCapHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A stretchable image is divided into 9 parts, if both leftCapWidth and topCapHeight are nonzero.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;leftCapWidth&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;-----&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;+--------------+&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;topCapHeight&lt;/span&gt;
&lt;span class="o"&gt;|-----+&lt;/span&gt;&lt;span class="err"&gt;·&lt;/span&gt;&lt;span class="o"&gt;+------|&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="o"&gt;|-----+&lt;/span&gt;&lt;span class="err"&gt;·&lt;/span&gt;&lt;span class="o"&gt;+------|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+--------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The central parts are always 1 px in size, and this is the part that is stretched, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;leftCapWidth&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;-----&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;+------------------+&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;topCapHeight&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;|-----+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+------|&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;|-----+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+------|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+------------------+&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;-----&amp;lt;&lt;/span&gt;
    &lt;span class="n"&gt;stretched&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a &amp;quot;glass pill button&amp;quot;, you should fill the rounded border into the regions A, B, C and D above, and supply the radius of that pill into both the leftCapWidth and topCapHeight.&lt;/p&gt;
&lt;p&gt;Also, a stretchable image is not shrinkable. If you try to use stretchable images bigger than the buttons (or whatever else) you want to apply it to, they may be rendered incorrectly (especially on older iOSes).&lt;/p&gt;
&lt;p&gt;引用 &lt;a class="reference external" href="http://stackoverflow.com/questions/2924408/iphone-stretchableimagewithleftcapwidth-only-makes-ds"&gt;Stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="UIImage"></category><category term="iOS"></category></entry><entry><title>单元测试</title><link href="https://magicalboy.com/unit_testing.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/unit_testing.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;单元测试是什么&lt;/h2&gt;
&lt;p&gt;即分模块测试，针对程序模块进行正确性检验的测试工作。单元测试可以在软件开发过程的早期及时发现问题，同时也利于未来对代码的重构。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 中的单元测试&lt;/h2&gt;
&lt;p&gt;OCUnit，被官方集成进XCode 4.x版本中；GHUnit，被推荐最多的测试框架，带GUI界面。&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;单元测试是什么&lt;/h2&gt;
&lt;p&gt;即分模块测试，针对程序模块进行正确性检验的测试工作。单元测试可以在软件开发过程的早期及时发现问题，同时也利于未来对代码的重构。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 中的单元测试&lt;/h2&gt;
&lt;p&gt;OCUnit，被官方集成进XCode 4.x版本中；GHUnit，被推荐最多的测试框架，带GUI界面。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Xcode</title><link href="https://magicalboy.com/xcode.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/xcode.html</id><summary type="html">&lt;p&gt;Xcode 目前最新版本 &lt;a class="reference external" href="http://magicalboy.com/xcode-5-0/"&gt;Xcode 5.0&lt;/a&gt; ，支持 iPhone 5s, iOS 7 开发。&lt;/p&gt;
&lt;div class="section" id="what-s-new"&gt;
&lt;h2&gt;What's New&lt;/h2&gt;
&lt;p&gt;各个版本的 Xcode 新增功能说明。&lt;/p&gt;
&lt;div class="section" id="xcode-5-0-x"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;Help you design an app that looks gorgeous on iOS 7 or OS X Mavericks.&lt;/p&gt;
&lt;p&gt;WWDC地址：&lt;a class="reference external" href="https://developer.apple.com/wwdc/videos/?id=400"&gt;What’s New in Xcode 5&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;素材管理（Asset Management）：素材目录(Asset Catalogs)，后缀名为.xcassets …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Xcode 目前最新版本 &lt;a class="reference external" href="http://magicalboy.com/xcode-5-0/"&gt;Xcode 5.0&lt;/a&gt; ，支持 iPhone 5s, iOS 7 开发。&lt;/p&gt;
&lt;div class="section" id="what-s-new"&gt;
&lt;h2&gt;What's New&lt;/h2&gt;
&lt;p&gt;各个版本的 Xcode 新增功能说明。&lt;/p&gt;
&lt;div class="section" id="xcode-5-0-x"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;Help you design an app that looks gorgeous on iOS 7 or OS X Mavericks.&lt;/p&gt;
&lt;p&gt;WWDC地址：&lt;a class="reference external" href="https://developer.apple.com/wwdc/videos/?id=400"&gt;What’s New in Xcode 5&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;素材管理（Asset Management）：素材目录(Asset Catalogs)，后缀名为.xcassets，只能在 Xcode 5 中打开使用。通过它可以创建和使用每个图片的所有版本，而不需管理单独的文件，或不需要单独的文件命名约定。素材目录还可以创建图片的切片，使得图片可以在用户界面上动态拉伸过程中保持文件大小。可惜这个功能是 iOS7 才支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ios"&gt;
&lt;h2&gt;支持 iOS 情况&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;最低支持 iOS 4.3，但生成的 xib 在之前版本的 Xcode 中打不开。解决方法见：&lt;a class="reference external" href="http://stackoverflow.com/questions/17281073/cant-open-project-in-xcode-4-6-after-opening-in-5-0"&gt;Can't Open Project in Xcode 4.6 After Opening in 5.0&lt;/a&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode-4-4-x"&gt;
&lt;h3&gt;Xcode 4.4.x&lt;/h3&gt;
&lt;p&gt;虽然可以支持到iOS 3.0，但不支持 nib，只能用代码实现 UI 编写。只有 Xcode 4.2.x 版本及以下才支持 nib。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode-4-5-x"&gt;
&lt;h3&gt;Xcode 4.5.x&lt;/h3&gt;
&lt;p&gt;不再支持 iOS 4.3 以下版本开发，即不再支持 armv 6。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;相关连接：&lt;a class="reference external" href="http://stackoverflow.com/questions/9961631/build-universal-app-for-ios-3-0-using-xcode-4-3-x-nskeyedunarchiver-exception"&gt;Build universal app for iOS 3.0 using Xcode 4.3.x - NSKeyedUnarchiver Exception - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="linker-flags"&gt;
&lt;h2&gt;Linker Flags&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;-all_load Loads all members of static archive libraries.&lt;/li&gt;
&lt;li&gt;-ObjC Loads all members of static archive libraries that implement an Objective-C class or category.&lt;/li&gt;
&lt;li&gt;-force_load (path_to_archive) Loads all members of the specified static archive library. Note: -all_load forces all members of all archives to be loaded. This option allows you to target a specific archive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体请参考苹果Q&amp;amp;A文档：&lt;a class="reference external" href="https://developer.apple.com/library/mac/#qa/qa2006/qa1490.html"&gt;Building Objective-C static libraries with categories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackOverflow：&lt;a class="reference external" href="http://stackoverflow.com/a/8179905"&gt;Objective-C categories in static library&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;启用 Xcode 编译版本自增功能&lt;/h2&gt;
&lt;p&gt;使用苹果自带的 agvtool 工具，方法见 &lt;a class="reference external" href="https://developer.apple.com/library/ios/qa/qa1827/_index.html"&gt;Automating Version and Build Numbers Using agvtool&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在 Xcode 项目中选中 Target，在Build Phases中新增一个 Run Script：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
agvtool next-version -all
&lt;/pre&gt;
&lt;p&gt;之后每 Build 一次 Bundle version 的号码就会自增一次。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>Xcode 7 清除多余的 Woking copies</title><link href="https://magicalboy.com/xcode-remove-working-copies.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/xcode-remove-working-copies.html</id><summary type="html">&lt;p&gt;Xcode 版本：Version 7.1 (7B91b)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;
由于项目从 SVN 切到 Git，所以在项目的 Source Control 里面的 Woking copies 里面有旧项目残留的 SVN。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;
删除 &lt;em&gt;ProjectName.xcworkspace &amp;gt; xcshareddata &amp;gt; ProjectName.xcscmblueprint&lt;/em&gt;，重启 Xcode。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/a/27535601"&gt;http://stackoverflow.com/a/27535601&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Xcode 版本：Version 7.1 (7B91b)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;
由于项目从 SVN 切到 Git，所以在项目的 Source Control 里面的 Woking copies 里面有旧项目残留的 SVN。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;
删除 &lt;em&gt;ProjectName.xcworkspace &amp;gt; xcshareddata &amp;gt; ProjectName.xcscmblueprint&lt;/em&gt;，重启 Xcode。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/a/27535601"&gt;http://stackoverflow.com/a/27535601&lt;/a&gt;&lt;/p&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>wepy 框架</title><link href="https://magicalboy.com/wepy.html" rel="alternate"></link><published>2017-10-26T22:30:00+08:00</published><updated>2017-10-26T22:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-10-26:/wepy.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://wepyjs.github.io/wepy"&gt;小程序组件化开发框架&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;WePY项目的创建与使用&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;环境介绍：macOS Sierra 10.12.6 (16G29)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ npm --version
&lt;span class="m"&gt;5&lt;/span&gt;.4.2

$ node -v
v8.8.1
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;全局安装或更新WePY命令行工具&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ npm install wepy-cli -g
/usr/local/bin/wepy -&amp;gt; /usr/local/lib/node_modules/wepy-cli/bin/wepy.js

&amp;gt; fsevents&amp;#64;1.1.2 install /usr/local/lib/node_modules/wepy-cli/node_modules/fsevents
&amp;gt; node install …&lt;/pre&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://wepyjs.github.io/wepy"&gt;小程序组件化开发框架&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;WePY项目的创建与使用&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;环境介绍：macOS Sierra 10.12.6 (16G29)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ npm --version
&lt;span class="m"&gt;5&lt;/span&gt;.4.2

$ node -v
v8.8.1
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;全局安装或更新WePY命令行工具&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ npm install wepy-cli -g
/usr/local/bin/wepy -&amp;gt; /usr/local/lib/node_modules/wepy-cli/bin/wepy.js

&amp;gt; fsevents&amp;#64;1.1.2 install /usr/local/lib/node_modules/wepy-cli/node_modules/fsevents
&amp;gt; node install

&lt;span class="o"&gt;[&lt;/span&gt;fsevents&lt;span class="o"&gt;]&lt;/span&gt; Success: &lt;span class="s2"&gt;&amp;quot;/usr/local/lib/node_modules/wepy-cli/node_modules/fsevents/lib/binding/Release/node-v57-darwin-x64/fse.node&amp;quot;&lt;/span&gt; already installed
Pass --update-binary to reinstall or --build-from-source to recompile
+ wepy-cli&amp;#64;1.5.9
added &lt;span class="m"&gt;255&lt;/span&gt; packages in &lt;span class="m"&gt;27&lt;/span&gt;.108s
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;在开发目录中生成Demo开发项目&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ wepy new wxapp2
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;创建&lt;span class="o"&gt;]&lt;/span&gt; 目录：wxapp2
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; 配置: package.json
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: .editorconfig
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: .eslintignore
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: .eslintrc.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: .wepyignore
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/app.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/components/counter.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/components/group.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/components/groupitem.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/components/list.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/components/panel.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/index.template.html
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/mixins/test.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: src/pages/index.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 文件: wepy.config.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;执行&lt;span class="o"&gt;]&lt;/span&gt; 执行命令: npm install --save wepy wepy-com-toast wepy-async-function
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;执行&lt;span class="o"&gt;]&lt;/span&gt; 执行命令: npm install --save-dev wepy-compiler-babel babel-plugin-transform-decorators-legacy babel-plugin-syntax-export-extensions babel-plugin-transform-export-extensions babel-plugin-transform-class-properties babel-preset-env wepy-compiler-less cross-env eslint&amp;#64;3.18.0 babel-eslint&amp;#64;7.2.1 eslint-config-standard&amp;#64;7.1.0 eslint-friendly-formatter&amp;#64;2.0.7 eslint-plugin-html&amp;#64;2.0.1 eslint-plugin-promise&amp;#64;3.5.0 eslint-plugin-standard&amp;#64;2.0.1 wepy-eslint
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:16:49&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;信息&lt;span class="o"&gt;]&lt;/span&gt; 可能需要几分钟, 请耐心等待...
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN wxapp2&amp;#64;1.2.8 No description
npm WARN wxapp2&amp;#64;1.2.8 No repository field.

+ wepy-async-function&amp;#64;1.4.4
+ wepy&amp;#64;1.6.0
+ wepy-com-toast&amp;#64;1.0.2
added &lt;span class="m"&gt;5&lt;/span&gt; packages in &lt;span class="m"&gt;3&lt;/span&gt;.299s
npm WARN wxapp2&amp;#64;1.2.8 No description
npm WARN wxapp2&amp;#64;1.2.8 No repository field.

+ babel-eslint&amp;#64;7.2.1
+ eslint&amp;#64;3.18.0
+ eslint-friendly-formatter&amp;#64;2.0.7
+ eslint-plugin-promise&amp;#64;3.5.0
+ eslint-plugin-html&amp;#64;2.0.1
+ babel-plugin-transform-decorators-legacy&amp;#64;1.3.4
+ eslint-config-standard&amp;#64;7.1.0
+ eslint-plugin-standard&amp;#64;2.0.1
+ babel-plugin-syntax-export-extensions&amp;#64;6.13.0
+ babel-plugin-transform-class-properties&amp;#64;6.24.1
+ babel-plugin-transform-export-extensions&amp;#64;6.22.0
+ wepy-compiler-babel&amp;#64;1.5.1
+ babel-preset-env&amp;#64;1.6.1
+ wepy-compiler-less&amp;#64;1.3.10
+ cross-env&amp;#64;5.1.0
+ wepy-eslint&amp;#64;1.5.2
added &lt;span class="m"&gt;308&lt;/span&gt; packages in &lt;span class="m"&gt;40&lt;/span&gt;.672s
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:34&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;完成&lt;span class="o"&gt;]&lt;/span&gt; 安装依赖完成
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:34&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;执行&lt;span class="o"&gt;]&lt;/span&gt; 执行命令: wepy build
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:34&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;信息&lt;span class="o"&gt;]&lt;/span&gt; 可能需要几分钟, 请耐心等待...
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:35&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 入口: src/app.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:35&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JSON: dist/app.json
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:35&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/counter.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/group.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/groupitem.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/list.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/panel.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; HTML: src/index.template.html
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 页面: src/pages/index.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JSON: dist/pages/index.json
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/wepy.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy-async-function/index.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/app.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/counter.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/group.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/groupitem.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/list.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/panel.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/mixins/test.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXML: dist/pages/index.wxml
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy-com-toast/toast.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/pages/index.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/app.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/page.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/component.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/event.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/base.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/util.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/mixin.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/wepy.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy-async-function/global.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/promise-polyfill/promise.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/regenerator-runtime/runtime.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy-async-function/index.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; Other: node_modules/wepy-com-toast/toast.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; 依赖: dist/npm/wepy/lib/native.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/app.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/page.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/component.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/event.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/base.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/util.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/mixin.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy-async-function/global.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/promise-polyfill/promise.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/regenerator-runtime/runtime.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXML: dist/npm/wepy-com-toast/toast.wxml
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy-com-toast/toast.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/app.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/npm/wepy/lib/native.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/counter.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/group.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/groupitem.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/list.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/panel.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/pages/index.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:36&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/npm/wepy-com-toast/toast.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:37&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;完成&lt;span class="o"&gt;]&lt;/span&gt; 代码编译完成
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:37&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;完成&lt;span class="o"&gt;]&lt;/span&gt; 项目初始化完成, 可以开始使用小程序。
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;切换至项目目录&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; wxapp2
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;开启实时编译&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ wepy build --watch
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:22&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 入口: src/app.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:22&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JSON: dist/app.json
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; DS_STORE: src/.DS_Store
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/counter.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/group.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/groupitem.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/list.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 组件: src/components/panel.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;拷贝&lt;span class="o"&gt;]&lt;/span&gt; HTML: src/index.template.html
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;编译&lt;span class="o"&gt;]&lt;/span&gt; 页面: src/pages/index.wpy
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JSON: dist/pages/index.json
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/app.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/counter.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/group.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/groupitem.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/list.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/components/panel.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/mixins/test.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXML: dist/pages/index.wxml
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; JS  : dist/pages/index.js
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/app.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/counter.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/group.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/groupitem.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/list.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/components/panel.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;写入&lt;span class="o"&gt;]&lt;/span&gt; WXSS: dist/pages/index.wxss
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;23&lt;/span&gt;:01:23&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;信息&lt;span class="o"&gt;]&lt;/span&gt; 开始监听文件改动。
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="6"&gt;
&lt;li&gt;接下来直接参考 &lt;a class="reference external" href="https://wepyjs.github.io/wepy/#/"&gt;https://wepyjs.github.io/wepy/#/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="js"></category></entry><entry><title>Java 匿名类</title><link href="https://magicalboy.com/java_anonymous_class.html" rel="alternate"></link><published>2017-06-30T19:39:00+08:00</published><updated>2017-06-30T19:39:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-06-30:/java_anonymous_class.html</id><summary type="html">&lt;p&gt;最近在复习 Java，利用 Learn Java App 有一定基础复习一遍还是很快的。&lt;/p&gt;
&lt;img alt="java" src="https://lh3.googleusercontent.com/GG1ijmZNLKV6wfyLBqgr0Y7Lnx2sPD3pInbzRt9HY5RJIFpxYPPfUDAT2JmnqztmfdjaSPMNsp41fA=w1440-h900-no" /&gt;
&lt;p&gt;在复习过程中，觉得比较容易忘记的几点还是有必要做一下笔记的。比如匿名内部类。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;匿名类&lt;/h2&gt;
&lt;p&gt;没有名字，创建方式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;父类构造器&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;参数列表&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;实现接口&lt;/span&gt;&lt;span class="err"&gt;（）&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//匿名内部类的类体部分&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bird&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fly&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bird …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;最近在复习 Java，利用 Learn Java App 有一定基础复习一遍还是很快的。&lt;/p&gt;
&lt;img alt="java" src="https://lh3.googleusercontent.com/GG1ijmZNLKV6wfyLBqgr0Y7Lnx2sPD3pInbzRt9HY5RJIFpxYPPfUDAT2JmnqztmfdjaSPMNsp41fA=w1440-h900-no" /&gt;
&lt;p&gt;在复习过程中，觉得比较容易忘记的几点还是有必要做一下笔记的。比如匿名内部类。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;匿名类&lt;/h2&gt;
&lt;p&gt;没有名字，创建方式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;父类构造器&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;参数列表&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;实现接口&lt;/span&gt;&lt;span class="err"&gt;（）&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//匿名内部类的类体部分&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;举个例子：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bird&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setName&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fly&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bird&lt;/span&gt; &lt;span class="n"&gt;bird&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bird&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;能够飞 &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bird&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fly&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;米&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Test&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Bird&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;fly&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;

            &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getName&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;大雁&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;});&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;------------------&lt;/span&gt;
&lt;span class="n"&gt;Output&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;
&lt;span class="n"&gt;大雁能够飞&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="n"&gt;米&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;EOF.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Java"></category></entry><entry><title>iOS 11 Developer beta 2</title><link href="https://magicalboy.com/ios-11-beta-2-update.html" rel="alternate"></link><published>2017-06-22T10:30:00+08:00</published><updated>2017-06-22T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-06-22:/ios-11-beta-2-update.html</id><summary type="html">&lt;p&gt;iOS 11 更新至 beta 2。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11 (15A5304i)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Jun_21_2017/iOS_11_beta_2_Release_Notes.pdf"&gt;iOS 11 beta 2 Release Notes&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11 第一个 beta 版本问题还是很多的，而且部分 bug 还严重影响设备的正常使用。&lt;/p&gt;
&lt;p&gt;关于 iOS 11 的新特性请见 &lt;a class="reference external" href="https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS_11_0.html#//apple_ref/doc/uid/TP40017637-SW1"&gt;What's New in iOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本次更新主要亮点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;32 位应用程序将不会运行在 iOS 11 的未来版本上。（26402174）&lt;/li&gt;
&lt;li&gt;iOS 11 不再支持 armv7 或 armv7s（32位）。 如果 iOS 目标的 iOS 部署目标为 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;iOS 11 更新至 beta 2。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11 (15A5304i)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Jun_21_2017/iOS_11_beta_2_Release_Notes.pdf"&gt;iOS 11 beta 2 Release Notes&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11 第一个 beta 版本问题还是很多的，而且部分 bug 还严重影响设备的正常使用。&lt;/p&gt;
&lt;p&gt;关于 iOS 11 的新特性请见 &lt;a class="reference external" href="https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS_11_0.html#//apple_ref/doc/uid/TP40017637-SW1"&gt;What's New in iOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本次更新主要亮点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;32 位应用程序将不会运行在 iOS 11 的未来版本上。（26402174）&lt;/li&gt;
&lt;li&gt;iOS 11 不再支持 armv7 或 armv7s（32位）。 如果 iOS 目标的 iOS 部署目标为 11，则不会为 32 位构建。 默认情况下，针对早于11的iOS部署目标的iOS目标仍将生成32位。（32163517）&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="install on iPhone 6s plus" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-11-beta-2.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
</content><category term="apple"></category></entry><entry><title>Vultr 云主机</title><link href="https://magicalboy.com/vultr_host.html" rel="alternate"></link><published>2017-06-20T00:00:00+08:00</published><updated>2017-06-20T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-06-20:/vultr_host.html</id><summary type="html">&lt;img alt="" src="https://www.vultr.com/media/banner_3.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.vultr.com/?ref=7161763"&gt;DigitalOcean&lt;/a&gt; 云主机，价格最价 &lt;code&gt;2.5 USD&lt;/code&gt; 一个月。&lt;/p&gt;
&lt;p&gt;购买请点上面连接。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.vultr.com/faq/#downloadspeedtests"&gt;速度测试&lt;/a&gt;，日本 Tokyo ping 在 160 ms 左右。&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;访问速度快（日本，新加坡），ping 平均 160 ms 左右；&lt;/li&gt;
&lt;li&gt;价格不算贵，最便宜 2.5 USD，可惜已经限量购买了；&lt;/li&gt;
&lt;li&gt;国外主机不需备案；&lt;/li&gt;
&lt;li&gt;操作系统可选比较多，而且比较新，比如有 Ubuntu 17.04, Windows 2012R2 等；&lt;/li&gt;
&lt;li&gt;官方指导文档资料比较丰富，Support tickets 回复迅速，方便解决问题节省时间。&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;img alt="" src="https://www.vultr.com/media/banner_3.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.vultr.com/?ref=7161763"&gt;DigitalOcean&lt;/a&gt; 云主机，价格最价 &lt;code&gt;2.5 USD&lt;/code&gt; 一个月。&lt;/p&gt;
&lt;p&gt;购买请点上面连接。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.vultr.com/faq/#downloadspeedtests"&gt;速度测试&lt;/a&gt;，日本 Tokyo ping 在 160 ms 左右。&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;访问速度快（日本，新加坡），ping 平均 160 ms 左右；&lt;/li&gt;
&lt;li&gt;价格不算贵，最便宜 2.5 USD，可惜已经限量购买了；&lt;/li&gt;
&lt;li&gt;国外主机不需备案；&lt;/li&gt;
&lt;li&gt;操作系统可选比较多，而且比较新，比如有 Ubuntu 17.04, Windows 2012R2 等；&lt;/li&gt;
&lt;li&gt;官方指导文档资料比较丰富，Support tickets 回复迅速，方便解决问题节省时间。&lt;/li&gt;
&lt;/ul&gt;
</content><category term="misc"></category></entry><entry><title>iOS 10.3 正式版发布</title><link href="https://magicalboy.com/ios-10-3-release.html" rel="alternate"></link><published>2017-03-28T10:30:00+08:00</published><updated>2017-03-28T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-28:/ios-10-3-release.html</id><summary type="html">&lt;p&gt;今天苹果 iOS 10.3 正式版已经发布。版本号为：&lt;code&gt;10.3 (14E277)&lt;/code&gt;，对应的开发工具 Xcode 8.3 版本号为 8E162。&lt;/p&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.3 推出了包括使用“查找我的 iPhone”定位 AirPods 在内的全新功能，并提供了使用 Siri 进行支付、叫车以及与车载设备配合使用的更多途径。&lt;/p&gt;
&lt;p&gt;查找我的 iPhone&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看您 AirPods 的当前位置或最后已知位置&lt;/li&gt;
&lt;li&gt;在一侧或左右 AirPods 上同时播放声音，帮助您找到它们&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Siri&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持配合支付应用进行支付和检查账单状态&lt;/li&gt;
&lt;li&gt;支持配合叫车应用预约车辆&lt;/li&gt;
&lt;li&gt;支持配合车载应用检查油量及车锁状态，并可开灯和鸣喇叭&lt;/li&gt;
&lt;li&gt;支持印度超级板球联赛和国际板球理事会的板球运动比分和统计数据 …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;今天苹果 iOS 10.3 正式版已经发布。版本号为：&lt;code&gt;10.3 (14E277)&lt;/code&gt;，对应的开发工具 Xcode 8.3 版本号为 8E162。&lt;/p&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.3 推出了包括使用“查找我的 iPhone”定位 AirPods 在内的全新功能，并提供了使用 Siri 进行支付、叫车以及与车载设备配合使用的更多途径。&lt;/p&gt;
&lt;p&gt;查找我的 iPhone&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看您 AirPods 的当前位置或最后已知位置&lt;/li&gt;
&lt;li&gt;在一侧或左右 AirPods 上同时播放声音，帮助您找到它们&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Siri&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持配合支付应用进行支付和检查账单状态&lt;/li&gt;
&lt;li&gt;支持配合叫车应用预约车辆&lt;/li&gt;
&lt;li&gt;支持配合车载应用检查油量及车锁状态，并可开灯和鸣喇叭&lt;/li&gt;
&lt;li&gt;支持印度超级板球联赛和国际板球理事会的板球运动比分和统计数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CarPlay&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;状态栏增加了快捷键，方便访问上次使用的应用&lt;/li&gt;
&lt;li&gt;在 Apple Music 的“播放中”屏幕上即可访问“接着播放”及在播歌曲的专辑&lt;/li&gt;
&lt;li&gt;Apple Music 可提供每日精选播放列表和全新音乐类别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它改进和修复&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;只需租借一次，即可在您所有设备上欣赏 iTunes 电影&lt;/li&gt;
&lt;li&gt;全新“设置”整合了 Apple ID 帐户信息、设置和设备，集中一处供您查看&lt;/li&gt;
&lt;li&gt;在“地图”中显示的当前温度上使用 3D Touch 即可查看逐时天气&lt;/li&gt;
&lt;li&gt;现可支持在“地图”中搜索“停车位置”&lt;/li&gt;
&lt;li&gt;“日历”新增了删除不必要的邀请并报告为垃圾信息的功能&lt;/li&gt;
&lt;li&gt;“家庭”应用现支持使用带开关和按钮的配件来触发场景&lt;/li&gt;
&lt;li&gt;“家庭”应用现支持检查配件电池电量状态&lt;/li&gt;
&lt;li&gt;“播客”现支持使用 3D Touch 和在“今日” Widget 中访问最近更新的节目&lt;/li&gt;
&lt;li&gt;“播客”中的节目或单集现可通过“信息”共享，并提供完整的播放支持&lt;/li&gt;
&lt;li&gt;修复了还原“位置与隐私”后，可能造成“地图”不显示当前位置的问题&lt;/li&gt;
&lt;li&gt;改进了 VoiceOver 针对“电话”、Safari 和“邮件”的稳定性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关 Apple 软件更新的安全性内容，请访问此网站：
&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-release.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;END&lt;/p&gt;
</content><category term="apple"></category></entry><entry><title>重置树莓派 Root 密码</title><link href="https://magicalboy.com/reset-raspberry-root-password.html" rel="alternate"></link><published>2017-03-23T10:25:00+08:00</published><updated>2017-03-23T10:25:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-23:/reset-raspberry-root-password.html</id><summary type="html">&lt;p&gt;自买了 Raspberry 3 之后一直以吃灰为主，比较少用难免会将用户密码忘记，于是有了此篇章。&lt;/p&gt;
&lt;p&gt;如果还有模糊印象，可以通过 &lt;code&gt;passwd pi&lt;/code&gt; 进行尝试。需要注意的是 &lt;code&gt;pi&lt;/code&gt; 用户的初始密码是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;raspberry
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;找回密码&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;关机取出内存卡，插到另一台电脑，Windows, Linux 或 macOS 都支持。&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;cmdline.txt&lt;/code&gt; 文件
在 &lt;code&gt;boot&lt;/code&gt; 分区下找到此文件，修改之前的内容为：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;serial0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p7 &lt;span class="nv"&gt;rootfstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ext4 &lt;span class="nv"&gt;elevator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deadline fsck.repair&lt;span class="o"&gt;=&lt;/span&gt;yes rootwait …&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;自买了 Raspberry 3 之后一直以吃灰为主，比较少用难免会将用户密码忘记，于是有了此篇章。&lt;/p&gt;
&lt;p&gt;如果还有模糊印象，可以通过 &lt;code&gt;passwd pi&lt;/code&gt; 进行尝试。需要注意的是 &lt;code&gt;pi&lt;/code&gt; 用户的初始密码是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;raspberry
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;找回密码&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;关机取出内存卡，插到另一台电脑，Windows, Linux 或 macOS 都支持。&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;cmdline.txt&lt;/code&gt; 文件
在 &lt;code&gt;boot&lt;/code&gt; 分区下找到此文件，修改之前的内容为：&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;serial0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p7 &lt;span class="nv"&gt;rootfstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ext4 &lt;span class="nv"&gt;elevator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deadline fsck.repair&lt;span class="o"&gt;=&lt;/span&gt;yes rootwait
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将 &lt;code&gt;init=/bin/sh&lt;/code&gt; 追加到内容后面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dwc_otg.lpm_enable&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;serial0,115200 &lt;span class="nv"&gt;console&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;tty1 &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/mmcblk0p7 &lt;span class="nv"&gt;rootfstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ext4 &lt;span class="nv"&gt;elevator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deadline fsck.repair&lt;span class="o"&gt;=&lt;/span&gt;yes rootwait &lt;span class="nv"&gt;init&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin/sh
&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic" start="3"&gt;
&lt;li&gt;&lt;p class="first"&gt;重置密码&lt;/p&gt;
&lt;ol class="loweralpha"&gt;
&lt;li&gt;&lt;p class="first"&gt;将内存卡取出，重新插到树莓派。注意树莓派必须有键盘鼠标连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;当出现一个闪动的光标的时候，输入命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mount -rw -o remount /
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;然后输入修改密码命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;passwd pi
&lt;/pre&gt;&lt;/div&gt;
&lt;img alt="reset password" class="align-left" src="https://github.com/donly/note/blob/master/images/reaspberry_reset_password.jpg?raw=true" style="width: 320px; height: 240px;" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;密码修改成功，然后输入以下命令完成启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sync
&lt;span class="nb"&gt;exec&lt;/span&gt; /sbin/init
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;进入系统后可以确认密码修改是否成功，然后关机，关电源：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo halt
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;继续取出内存卡，将步骤 2 的 &lt;code&gt;init=/bin/sh&lt;/code&gt; 删除，重新插回树莓派正常使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.raspberrypi.org/forums/viewtopic.php?t=20397"&gt;Raspberry Pi • View topic - Reset OS password&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.raspberrypi-spy.co.uk/2014/08/how-to-reset-a-forgotten-raspberry-pi-password/"&gt;How To Reset A Forgotten Raspberry Pi Password&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="raspberry"></category></entry><entry><title>iOS 10.3 Beta 7</title><link href="https://magicalboy.com/ios-10-3-beta-7-update.html" rel="alternate"></link><published>2017-03-20T10:30:00+08:00</published><updated>2017-03-20T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-20:/ios-10-3-beta-7-update.html</id><summary type="html">&lt;p&gt;今天苹果前几天又发布了 iOS 10.3 Beta 7 更新，距离上个 Beta 版本才 3 天左右。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;10.3 (14E5277a)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_16_2017/iOS_10.3_beta_7_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 7&lt;/a&gt;。&lt;/p&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-7.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;iPhone 6s 更新后没有发现有什么明显不同。&lt;/p&gt;
&lt;p&gt;关于 10.3 Beta 补充几点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;10.3 Beta 版开机时按住 Home 和 音量加，可进入诊断模式。&lt;/li&gt;
&lt;li&gt;关机时少了中间的加载动画，即菊花。&lt;/li&gt;
&lt;li&gt;增加了对 32 位应用的警告提示：此应用在未来的 iOS 版本下将无法使用 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;今天苹果前几天又发布了 iOS 10.3 Beta 7 更新，距离上个 Beta 版本才 3 天左右。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;10.3 (14E5277a)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_16_2017/iOS_10.3_beta_7_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 7&lt;/a&gt;。&lt;/p&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-7.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;iPhone 6s 更新后没有发现有什么明显不同。&lt;/p&gt;
&lt;p&gt;关于 10.3 Beta 补充几点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;10.3 Beta 版开机时按住 Home 和 音量加，可进入诊断模式。&lt;/li&gt;
&lt;li&gt;关机时少了中间的加载动画，即菊花。&lt;/li&gt;
&lt;li&gt;增加了对 32 位应用的警告提示：此应用在未来的 iOS 版本下将无法使用。应用开发者需要更新此应用以改进兼容性。&lt;/li&gt;
&lt;/ol&gt;
</content><category term="apple"></category></entry><entry><title>2017年3月 Android 安全补丁推送</title><link href="https://magicalboy.com/android-march-2017-upgrade.html" rel="alternate"></link><published>2017-03-17T10:30:00+08:00</published><updated>2017-03-17T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-17:/android-march-2017-upgrade.html</id><summary type="html">&lt;p&gt;Nexus 6 终于有推送更新了，结果不是 7.1，而是安全补丁。&lt;/p&gt;
&lt;p&gt;对此我有两个疑问：&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;为什么我的 Nexus 6 一直等不到 7.1 的 OTA 更新推送呢？&lt;/p&gt;
&lt;p&gt;根据 &lt;a class="reference external" href="https://android-developers.googleblog.com/2016/12/welcoming-android-711-nougat.html"&gt;Welcoming Android 7.1.1 Nougat | Android Developers Blog&lt;/a&gt;，Android 7.1.1 is an incremental release that builds on the features already available on Pixel and Pixel XL devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;为什么更新完补丁后，点击系统更新会出现 …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Nexus 6 终于有推送更新了，结果不是 7.1，而是安全补丁。&lt;/p&gt;
&lt;p&gt;对此我有两个疑问：&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;为什么我的 Nexus 6 一直等不到 7.1 的 OTA 更新推送呢？&lt;/p&gt;
&lt;p&gt;根据 &lt;a class="reference external" href="https://android-developers.googleblog.com/2016/12/welcoming-android-711-nougat.html"&gt;Welcoming Android 7.1.1 Nougat | Android Developers Blog&lt;/a&gt;，Android 7.1.1 is an incremental release that builds on the features already available on Pixel and Pixel XL devices.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;为什么更新完补丁后，点击系统更新会出现 FC？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="install on Nexus 6" class="align-left" src="https://github.com/donly/note/blob/master/images/android_20170317-082545.png?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;难道要重新刷机了吗，现在的系统虽然没有 Root，但也用不了 Android Pay，因为 bootloader 被解锁过。&lt;/p&gt;
&lt;p&gt;生命果然在于折腾。&lt;/p&gt;
</content><category term="Android"></category></entry><entry><title>域名备案通知</title><link href="https://magicalboy.com/domain_filing.html" rel="alternate"></link><published>2017-03-17T09:30:00+08:00</published><updated>2017-03-17T09:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-17:/domain_filing.html</id><summary type="html">&lt;p&gt;一大早就收到这样一条信息：&lt;/p&gt;
&lt;blockquote&gt;
【阿里云】尊敬的****：按照工信部2017年全面域名实名认证的要求，目前阿里云已接到相关注册局通知，为保障您的网站及邮箱能够正常访问，请您务必尽快完成域名实名认证。同时提醒您：1、截止2017年5月31日，未完成实名认证的.com/.net域名将被注册局暂停解析；2、截止2017年5月15日，未完成实名认证的.top/.xyz/.vip /.club/.shop/.wang/.ren域名将被注册局暂停解析。另外，相关注册局将在4月1日左右对历史域名的认证情况进行二次审核。更多实名认证资讯请查看官网公告&lt;/blockquote&gt;
&lt;p&gt;看来只有将域名转出保平安了，且行且珍惜。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;一大早就收到这样一条信息：&lt;/p&gt;
&lt;blockquote&gt;
【阿里云】尊敬的****：按照工信部2017年全面域名实名认证的要求，目前阿里云已接到相关注册局通知，为保障您的网站及邮箱能够正常访问，请您务必尽快完成域名实名认证。同时提醒您：1、截止2017年5月31日，未完成实名认证的.com/.net域名将被注册局暂停解析；2、截止2017年5月15日，未完成实名认证的.top/.xyz/.vip /.club/.shop/.wang/.ren域名将被注册局暂停解析。另外，相关注册局将在4月1日左右对历史域名的认证情况进行二次审核。更多实名认证资讯请查看官网公告&lt;/blockquote&gt;
&lt;p&gt;看来只有将域名转出保平安了，且行且珍惜。&lt;/p&gt;
</content></entry><entry><title>iOS 10.3 Beta6</title><link href="https://magicalboy.com/ios-10-3-beta-install.html" rel="alternate"></link><published>2017-03-14T09:30:00+08:00</published><updated>2017-03-14T09:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-14:/ios-10-3-beta-install.html</id><summary type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.3 Beta6 更新。更新后版本号为：&lt;code&gt;10.3 (14E5273a)&lt;/code&gt;，更新如下：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;相对于上一个版本 Beta5，比较重要一点更新就是没有通过 MFi 认证的 Lightning 会提示：&lt;code&gt;此 iPhone 不支持此配件&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对系统底层进行了优化，当用户完成升级后，iOS 设备的文件系统也更新至了全新的苹果文件系统 &lt;code&gt;APFS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;苹果还计划在 iOS 10.3 中对 App Store 进行一些功能调整，允许开发者直接回复应用的评价，这点早已在 Google Play 实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_13_2017/iOS_10.3_beta_6_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 6&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="beta-ios"&gt;
&lt;h2&gt;安装 …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.3 Beta6 更新。更新后版本号为：&lt;code&gt;10.3 (14E5273a)&lt;/code&gt;，更新如下：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;相对于上一个版本 Beta5，比较重要一点更新就是没有通过 MFi 认证的 Lightning 会提示：&lt;code&gt;此 iPhone 不支持此配件&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对系统底层进行了优化，当用户完成升级后，iOS 设备的文件系统也更新至了全新的苹果文件系统 &lt;code&gt;APFS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;苹果还计划在 iOS 10.3 中对 App Store 进行一些功能调整，允许开发者直接回复应用的评价，这点早已在 Google Play 实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_13_2017/iOS_10.3_beta_6_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 6&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="beta-ios"&gt;
&lt;h2&gt;安装 Beta 版 iOS&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;需要 iOS 开发者账号，登陆打开 &lt;a class="reference external" href="https://developer.apple.com/download/"&gt;https://developer.apple.com/download/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载 &lt;code&gt;iOS_10_beta_Configuration_Profile.mobileconfig&lt;/code&gt; 并发送到需要安装 Beta 版系统的 iOS 设备上，或者想办法让手机访问。&lt;/li&gt;
&lt;li&gt;在 iOS 设备上安装此描述文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-install-01.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;接着就可以通过系统设置-通用-软件更新来进行 OTA 升级安装了。&lt;/li&gt;
&lt;li&gt;如果想恢复到之前的系统，必须下载恢复固件，使用 iTunes 来还原。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最重要一点：&lt;strong&gt;更新之前请先做好备份，数据无价！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>Fastlane 插件开发</title><link href="https://magicalboy.com/fastlane_plugin.html" rel="alternate"></link><published>2016-12-21T09:39:00+08:00</published><updated>2016-12-21T09:39:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-21:/fastlane_plugin.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;能用计算机自动处理的事情，为什么还要手动重复劳动。&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="fastlane" src="https://docs.fastlane.tools/img/fastlane_text.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fastlane.tools/"&gt;Fastlane&lt;/a&gt; 是一个优秀的 CI 工具，移动开发少不了它。&lt;/p&gt;
&lt;blockquote&gt;
The easiest way to automate building and releasing your iOS and Android apps&lt;/blockquote&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;创建插件&lt;/h2&gt;
&lt;p&gt;详细步骤：&lt;a class="reference external" href="https://docs.fastlane.tools/plugins/create-plugin/"&gt;https://docs.fastlane.tools/plugins/create-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;开发&amp;amp;调试&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Autogenerated by fastlane&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Ensure this file is checked in to source control!&lt;/span&gt;

&lt;span class="c1"&gt;#gem &amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;~/Documents …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;能用计算机自动处理的事情，为什么还要手动重复劳动。&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="fastlane" src="https://docs.fastlane.tools/img/fastlane_text.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fastlane.tools/"&gt;Fastlane&lt;/a&gt; 是一个优秀的 CI 工具，移动开发少不了它。&lt;/p&gt;
&lt;blockquote&gt;
The easiest way to automate building and releasing your iOS and Android apps&lt;/blockquote&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;创建插件&lt;/h2&gt;
&lt;p&gt;详细步骤：&lt;a class="reference external" href="https://docs.fastlane.tools/plugins/create-plugin/"&gt;https://docs.fastlane.tools/plugins/create-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;开发&amp;amp;调试&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Autogenerated by fastlane&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Ensure this file is checked in to source control!&lt;/span&gt;

&lt;span class="c1"&gt;#gem &amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;~/Documents/Workspace/Project/fastlane-ftp-plugin&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;以开发模式安装插件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bundle install --with development
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Fastfile&lt;/code&gt; 的 Action 中&lt;/li&gt;
&lt;li&gt;使用详细输出模式运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bundle &lt;span class="nb"&gt;exec&lt;/span&gt; fastlane &lt;span class="o"&gt;[&lt;/span&gt;action&lt;span class="o"&gt;]&lt;/span&gt; --verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Android"></category></entry><entry><title>Ruby 快速入门</title><link href="https://magicalboy.com/ruby-quickstart.html" rel="alternate"></link><published>2016-12-21T09:39:00+08:00</published><updated>2016-12-21T09:39:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-21:/ruby-quickstart.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id16"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id17"&gt;交互&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#puts" id="id18"&gt;puts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id19"&gt;计算器功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#modules" id="id20"&gt;Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id21"&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id22"&gt;在字符串中预留位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id23"&gt;类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id24"&gt;面向对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id25"&gt;访问属性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id26"&gt;注释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id27"&gt;更强大的类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id28"&gt;循环，迭代&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id29"&gt;代码块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id30"&gt;让脚本跑起来&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;这是一个快速入门笔记，来自官网的 &lt;a class="reference external" href="https://www.ruby-lang.org/zh_cn/documentation/quickstart/"&gt;Ruby in Twenty Minutes&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;Ruby&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to …&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id16"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id17"&gt;交互&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#puts" id="id18"&gt;puts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id19"&gt;计算器功能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#modules" id="id20"&gt;Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id21"&gt;函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id22"&gt;在字符串中预留位置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id23"&gt;类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id24"&gt;面向对象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id25"&gt;访问属性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id26"&gt;注释&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id27"&gt;更强大的类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id28"&gt;循环，迭代&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id29"&gt;代码块&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id30"&gt;让脚本跑起来&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;这是一个快速入门笔记，来自官网的 &lt;a class="reference external" href="https://www.ruby-lang.org/zh_cn/documentation/quickstart/"&gt;Ruby in Twenty Minutes&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id16"&gt;Ruby&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.ruby-lang.org"&gt;Ruby&lt;/a&gt; 是一种开源的面向对象程序设计的服务器端脚本语言，在20 世纪90 年代中期由日本的松本行弘（まつもとゆきひろ/Yukihiro Matsumoto）设计并开发。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;交互&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;跟 Python 一样有交互界面，在终端使用 &lt;code&gt;irb&lt;/code&gt; 打开。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ irb
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:001:0&amp;gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
irb&lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt;:002:0&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="puts"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;puts&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;puts&lt;/code&gt; 是一个基本的命令，用于打印字符串，返回结果为 &lt;code&gt;nil&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;002&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;World&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id19"&gt;计算器功能&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;IRB 就是一个基础计算器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;003&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;004&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;005&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modules"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id20"&gt;Modules&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;上面的 Math 是一个内置的数学 module。Modules 主要有两个角色，这里扮演的角度是是将功能相似的方法分组到同一名字下。&lt;/p&gt;
&lt;p&gt;接着是点运算符，用来告诉一个接收者它所要接受的信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;006&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;007&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;函数&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;定义函数的关键字是 &lt;cite&gt;def&lt;/cite&gt; 函数体以 &lt;cite&gt;end&lt;/cite&gt; 结束。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;010&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;011&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;012&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;013&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;014&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数的周期简短而又频繁，定义一次，使用多次。函数调用的参数是可选的，如果没有参数，调用时括号可省略。&lt;/p&gt;
&lt;p&gt;让函数接收参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;014&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;015&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;016&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;017&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Don&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;Don&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id22"&gt;在字符串中预留位置&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;#{name}&lt;/code&gt;，Ruby 中的在字符串中插入信息，有点类似 Swift 中的语法：print(&amp;quot;(name)&amp;quot;)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capitalize&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;020&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;021&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;022&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;chris&amp;quot;&lt;/span&gt;
&lt;span class="no"&gt;Hello&lt;/span&gt; &lt;span class="no"&gt;Chris&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到有参数的时候，函数的括号也是可以省略的。而且还可以定义函数的默认参数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用 &lt;cite&gt;class&lt;/cite&gt; 关键字定义一个新的类。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;023&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Greeter&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;024&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;025&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="vi"&gt;@name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;026&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;027&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hi&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hi &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;030&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_bye&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;031&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Bye &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, come back soon.&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;032&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;033&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要注意的是，这里的 &lt;code&gt;&amp;#64;name&lt;/code&gt; 表示实例变量。&lt;/p&gt;
&lt;p&gt;既然定义了类，我们需要创建一个对象来使用它：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;034&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pat&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;#&amp;lt;Greeter:0x007fc113857a60 @name=&amp;quot;Pat&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;035&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_hi&lt;/span&gt;
&lt;span class="no"&gt;Hi&lt;/span&gt; &lt;span class="no"&gt;Pat&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;036&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_bye&lt;/span&gt;
&lt;span class="no"&gt;Bye&lt;/span&gt; &lt;span class="no"&gt;Pat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;come&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;soon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建了对象 g 后，名字属性有了值 Pat，能不能通过对象直接访问呢？&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;037&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vi"&gt;@name&lt;/span&gt;
&lt;span class="ss"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;syntax&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;unexpected&lt;/span&gt; &lt;span class="n"&gt;tIVAR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expecting&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;(&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="sr"&gt;/usr/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="ss"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="ss"&gt;:in&lt;/span&gt; &lt;span class="sb"&gt;`&amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="sb"&gt;irb(main):038:0&amp;gt; g.name&lt;/span&gt;
&lt;span class="sb"&gt;NoMethodError: undefined method `&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; for #&amp;lt;Greeter:0x007fc113857a60 @name=&amp;quot;Pat&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="s1"&gt;from (irb):38&lt;/span&gt;
&lt;span class="s1"&gt;from /usr/bin/irb:12:in `&amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很明显是不行的！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id24"&gt;面向对象&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;实例变量是被隐藏起来的，符合面向对象的设计，将内部属性保护起来。&lt;/p&gt;
&lt;p&gt;但也并非完全隐藏起来，可以通过检查对象看到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_methods&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:say_hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:say_bye&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:nil?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:===&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=~&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;!~&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:eql?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:&amp;lt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:singleton_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:clone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:dup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:taint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:tainted?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:untaint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:untrust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:untrusted?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:trust&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:freeze&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:frozen?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:to_s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:inspect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:singleton_methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:protected_methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:private_methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:public_methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_variable_get&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_variable_set&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_variable_defined?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:remove_instance_variable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_of?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:kind_of?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:is_a?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:tap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:public_send&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:respond_to?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:extend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:display&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:public_method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:define_singleton_method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:object_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:to_enum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:enum_for&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:==&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:equal?&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_eval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:instance_exec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:__send__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:__id__&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们定义的只有两个，这里列出的是 Greeter 对象所有的函数，即包括了它所继承的类的函数。&lt;/p&gt;
&lt;p&gt;可以通过 false 参数，列出不包括父类的函数。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;040&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:say_hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:say_bye&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着使用父类的 &lt;cite&gt;respond_to&lt;/cite&gt; 方法来测试 Greeter 对象 g 会对哪些函数作出回应：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;041&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;042&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;say_hi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;043&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;to_s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可见 &lt;cite&gt;name&lt;/cite&gt; 还是隐藏的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id25"&gt;访问属性&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;attr_accessor&lt;/code&gt; 让属性变成可访问。实际会自动生成两个新函数，一个用于读取，一个用于赋值。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Greeter&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="kp"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;060&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;061&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Andy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;#&amp;lt;Greeter:0x007fc116acf100 @name=&amp;quot;Andy&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;062&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;063&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;name=&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;irb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mo"&gt;064&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;Greeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance_methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:say_hi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:say_bye&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="o"&gt;=]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id26"&gt;注释&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;#&lt;/code&gt; 号注释，当前行的 # 号后面的内容是注释内容。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id27"&gt;更强大的类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;这次不再使用互动的 Ruby 解析器 IRB，而是将代码写到文件里。&lt;/p&gt;
&lt;p&gt;输入 &lt;cite&gt;exit&lt;/cite&gt; 或 Control-D 退出 IRB。&lt;/p&gt;
&lt;p&gt;然后新那家一个文件 &lt;code&gt;MegaGreeter.rb&lt;/code&gt;，输入以下内容：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/ur/bin/env ruby&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MegaGreeter&lt;/span&gt;
  &lt;span class="kp"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:names&lt;/span&gt;

  &lt;span class="c1"&gt;# Create the object&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;World&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Say hi to everybody&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_hi&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;each&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;# @names is a list of some kind, iterate!&lt;/span&gt;
      &lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Say bye to everybody&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;say_bye&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;...&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;respond_to?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;join&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;# Join the list elements with commas&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Goodbye &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Come back soon!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Goodbye &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@names&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Come back soon!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;__FILE__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="vg"&gt;$0&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MegaGreeter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_hi&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_bye&lt;/span&gt;

  &lt;span class="c1"&gt;# Change name to be &amp;quot;Zeke&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Zeke&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_hi&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_bye&lt;/span&gt;

  &lt;span class="c1"&gt;# Change the name to an array of names&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Albert&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Brenda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Charles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dave&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Engelbert&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_hi&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_bye&lt;/span&gt;

  &lt;span class="c1"&gt;# Change to nil&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_hi&lt;/span&gt;
  &lt;span class="n"&gt;mg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;say_bye&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用命令 &lt;code&gt;ruby MegaGreeter.rb&lt;/code&gt; 运行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ruby MegaGreeter.rb
...
...
Hello Zeke!
Goodbye Zeke. Come back soon!
Hello Albert!
Hello Brenda!
Hello Charles!
Hello Dave!
Hello Engelbert!
Goodbye Albert, Brenda, Charles, Dave, Engelbert. Come back soon!
...
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id28"&gt;循环，迭代&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;先判断 &amp;#64;names 对象能否回应 &lt;code&gt;each&lt;/code&gt; 函数，如果可以被迭代，使用 &lt;code&gt;do&lt;/code&gt; 后面的代码块进行迭代处理。&lt;/p&gt;
&lt;p&gt;代码块定义在两个 &lt;code&gt;|&lt;/code&gt; 符号之间。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id29"&gt;代码块&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;“如果它走起来像鸭子，叫起来像鸭子， 那它一定是鸭子”。&lt;/p&gt;
&lt;blockquote&gt;
这种思想的好处就是不限制函数所支持的参数类别。 如果有人写了一个新的类，只要它像其他列表类一样回应 &lt;code&gt;join&lt;/code&gt; 这个函数， 那它就可以被相应的其他函数所使用。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id30"&gt;让脚本跑起来&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;调用这个类的小技术在于:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;__FILE__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="vg"&gt;$0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;__FILE__&lt;/code&gt; 是一个魔法值，它存有现在运行的脚本文件的名字。&lt;/p&gt;
&lt;p&gt;$0 是启动脚本的名字。&lt;/p&gt;
&lt;p&gt;这句代码的意思是 “如果这是启动脚本的话…”。这允许代码作为库调用的时候不运行启动代码，而在作为执行脚本的时候调用启动代码。&lt;/p&gt;
&lt;p&gt;EOF.&lt;/p&gt;
&lt;/div&gt;
</content><category term="ruby"></category></entry><entry><title>超级玛丽酷跑</title><link href="https://magicalboy.com/super_mario_run.html" rel="alternate"></link><published>2016-12-16T00:00:00+08:00</published><updated>2016-12-16T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-16:/super_mario_run.html</id><summary type="html">&lt;img alt="Super Mario" src="https://supermariorun.com/img/index/sec02_img06.png" /&gt;
&lt;p&gt;超级玛丽最早印象是一款经典的 NES 游戏，儿时就开始玩啦。今天任天堂终于发布了 iOS 版本，叫超级玛丽酷跑。&lt;/p&gt;
&lt;blockquote&gt;
『超級瑪利歐酷跑』是一款瑪利歐為救出被庫巴抓走的碧姬公主，以及讓遭到庫巴侵略的蘑菇王國恢復原狀而在全世界奔走的遊戲。&lt;/blockquote&gt;
&lt;p&gt;具体介绍请点击官网：&lt;a class="reference external" href="https://supermariorun.com/zh-tw/about.html"&gt;SUPER MARIO RUN&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;游戏支持 iOS 8 以及以上平台，大小 173 MB 左右。游戏开始后才下载关卡资源（On Demand Resources 特性）。&lt;/li&gt;
&lt;li&gt;游戏下载免费，有而且只有一个内购消费，价格 9.9 USD。&lt;/li&gt;
&lt;li&gt;游戏访问速度快，手机 4G 可玩。&lt;/li&gt;
&lt;li&gt;可以连接任天堂的账号同步游戏资料。&lt;/li&gt;
&lt;li&gt;拉力模式可以同朋友或全球玩家比赛。&lt;/li&gt;
&lt;li&gt;支持全年龄段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不好的地方：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;目前仅支持 iOS 平台，Android 平台将在 2017 年发布 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;img alt="Super Mario" src="https://supermariorun.com/img/index/sec02_img06.png" /&gt;
&lt;p&gt;超级玛丽最早印象是一款经典的 NES 游戏，儿时就开始玩啦。今天任天堂终于发布了 iOS 版本，叫超级玛丽酷跑。&lt;/p&gt;
&lt;blockquote&gt;
『超級瑪利歐酷跑』是一款瑪利歐為救出被庫巴抓走的碧姬公主，以及讓遭到庫巴侵略的蘑菇王國恢復原狀而在全世界奔走的遊戲。&lt;/blockquote&gt;
&lt;p&gt;具体介绍请点击官网：&lt;a class="reference external" href="https://supermariorun.com/zh-tw/about.html"&gt;SUPER MARIO RUN&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;游戏支持 iOS 8 以及以上平台，大小 173 MB 左右。游戏开始后才下载关卡资源（On Demand Resources 特性）。&lt;/li&gt;
&lt;li&gt;游戏下载免费，有而且只有一个内购消费，价格 9.9 USD。&lt;/li&gt;
&lt;li&gt;游戏访问速度快，手机 4G 可玩。&lt;/li&gt;
&lt;li&gt;可以连接任天堂的账号同步游戏资料。&lt;/li&gt;
&lt;li&gt;拉力模式可以同朋友或全球玩家比赛。&lt;/li&gt;
&lt;li&gt;支持全年龄段。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不好的地方：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;目前仅支持 iOS 平台，Android 平台将在 2017 年发布（网易新闻）。&lt;/li&gt;
&lt;li&gt;建造模式比较简单，并非养成类。&lt;/li&gt;
&lt;li&gt;無法在離線的狀態下進行遊戲。&lt;/li&gt;
&lt;li&gt;国区不能上架。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想加我游戏好友有以下两种方式：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Player ID: &lt;code&gt;2287-9077-0275&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;邀请连接：&lt;a class="reference external" href="http://url.cn/42YSKwb"&gt;http://url.cn/42YSKwb&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;EOF.&lt;/p&gt;
</content><category term="misc"></category></entry><entry><title>iOS 10.2 更新</title><link href="https://magicalboy.com/ios-10-2-update.html" rel="alternate"></link><published>2016-12-15T09:30:00+08:00</published><updated>2016-12-15T09:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-15:/ios-10-2-update.html</id><summary type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.2 更新。更新后版本号为：10.2 (14C92)，上一个版本是 10.1.1 (14B100)。&lt;/p&gt;
&lt;p&gt;详细的更新日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 加入了多项新功能，其中包括“电视”应用（仅限美国），这款全新的聚合应用使用户可在一处观看多个视频应用内的电视节目和影片。经过重新设计的表情符号更加精美、细致，新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型。本更新还包括稳定性提升和错误修复。&lt;/p&gt;
&lt;p&gt;电视&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用“接着播放”来查看当前正在观看的影片和节目，并从暂停播放的位置继续观看&lt;/li&gt;
&lt;li&gt;在“立即观看”中获取新影片和电视节目的推荐&lt;/li&gt;
&lt;li&gt;在“商店”中发现新的应用和 iTunes 最新发布的内容&lt;/li&gt;
&lt;li&gt;访问“资料库”中的 …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.2 更新。更新后版本号为：10.2 (14C92)，上一个版本是 10.1.1 (14B100)。&lt;/p&gt;
&lt;p&gt;详细的更新日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 加入了多项新功能，其中包括“电视”应用（仅限美国），这款全新的聚合应用使用户可在一处观看多个视频应用内的电视节目和影片。经过重新设计的表情符号更加精美、细致，新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型。本更新还包括稳定性提升和错误修复。&lt;/p&gt;
&lt;p&gt;电视&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用“接着播放”来查看当前正在观看的影片和节目，并从暂停播放的位置继续观看&lt;/li&gt;
&lt;li&gt;在“立即观看”中获取新影片和电视节目的推荐&lt;/li&gt;
&lt;li&gt;在“商店”中发现新的应用和 iTunes 最新发布的内容&lt;/li&gt;
&lt;li&gt;访问“资料库”中的 iTunes 已购项目和租借项目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表情符号&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;经过重新设计的表情符号更加精美、细致&lt;/li&gt;
&lt;li&gt;新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;照片&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提高了 Live Photo 的防抖动功能并带来了更快的帧速率&lt;/li&gt;
&lt;li&gt;提高了在“人物”相簿中，对同一人物的类似照片进行分组的准确性&lt;/li&gt;
&lt;li&gt;修复了“回忆”可能基于屏幕快照、白板或回执的照片生成回忆的问题&lt;/li&gt;
&lt;li&gt;修复了 iPhone 7 Plus 上从“相机胶卷”切回后，摄像头仍然放大对焦的问题&lt;/li&gt;
&lt;li&gt;对 RAW 数码相机的更多支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信息&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在“信息”中新增了爱心和欢庆全屏幕效果&lt;/li&gt;
&lt;li&gt;修复了“信息”中键盘有时无法显示的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;音乐&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;向上轻扫“播放中”屏幕可更加轻松地访问“随机播放”、“重复播放”和“接着播放”&lt;/li&gt;
&lt;li&gt;在“音乐资料库”中选取如何排序播放列表、专辑和歌曲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;News&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;存储供稍后阅读的报道现会在新的“已存储”部分中显示&lt;/li&gt;
&lt;li&gt;订阅频道的最佳付费报道现将在“为你推荐”的专属版块中显示&lt;/li&gt;
&lt;li&gt;现在前往下一篇报道更加简单，只需在阅读时向左轻扫或轻点“下一则报道”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;邮件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;修复了在“邮件”中将邮件移到文件夹后，“移动”表单仍然显示的问题&lt;/li&gt;
&lt;li&gt;解决了在“邮件”中长按无法激活拷贝和粘贴的问题&lt;/li&gt;
&lt;li&gt;修复了删除“邮件”会话后，可能选择错误邮件的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;辅助功能&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;VoiceOver 支持 BraillePen14&lt;/li&gt;
&lt;li&gt;修复了使用 VoiceOver 时，盲文表格可能意外切换的问题&lt;/li&gt;
&lt;li&gt;修复了 VoiceOver 用户有时无法使用 Siri 优化语音的问题&lt;/li&gt;
&lt;li&gt;修复了 VoiceOver 用户无法对列表中项目进行重新排列的问题&lt;/li&gt;
&lt;li&gt;修复了“切换控制”有时无法删除语音留言的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他功能改进和错误修复&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增加了对 HomeKit 配件的通知支持，其中包括窗帘传感器、人体传感器、动作传感器、门窗传感器、烟雾传感器、一氧化碳传感器和漏水传感器&lt;/li&gt;
&lt;li&gt;增加了 HomeKit 配件有软件更新时的通知支持&lt;/li&gt;
&lt;li&gt;提高了蓝牙的性能以及与第三方配件的连接性&lt;/li&gt;
&lt;li&gt;修复了可能导致 FaceTime 通话参与者无法对焦的问题&lt;/li&gt;
&lt;li&gt;修复了可能导致 FaceTime 通话以错误的宽高比和方向显示的问题&lt;/li&gt;
&lt;li&gt;修复了部分 Visual Voicemail 无法完成播放的问题&lt;/li&gt;
&lt;li&gt;修复了 Safari 阅读器打开文章时可能显示空白页面的问题&lt;/li&gt;
&lt;li&gt;修复了将“阅读列表”中的项目标记为已读后，可能导致 Safari 意外退出的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关 Apple 软件更新安全性内容的信息，请访问此网站：
&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;英文版更新日志&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 introduces new features including the TV app (US Only), a new and unified experience for accessing your TV shows and movies across multiple video apps. Emoji have been beautifully redesigned to reveal even more detail and over 100 new emoji have been added including new faces, food, animals, sports, and professions. This update also includes stability improvements and bug fixes.&lt;/p&gt;
&lt;p&gt;TV&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use Up Next to see the movies and shows you’re currently watching and pick up where you left off&lt;/li&gt;
&lt;li&gt;Get recommendations for new movies and TV shows in Watch Now&lt;/li&gt;
&lt;li&gt;Discover new apps and the latest iTunes releases in the Store&lt;/li&gt;
&lt;li&gt;Access the Library for your iTunes purchases and rentals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Emoji&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beautifully redesigned emoji that reveal even more detail&lt;/li&gt;
&lt;li&gt;Over 100 new emoji including new faces, food, animals, sports, and professions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photos&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Improves stabilization and delivers faster frame rate for Live Photos&lt;/li&gt;
&lt;li&gt;Improves accuracy of groupings of similar photos of the same person in the People album&lt;/li&gt;
&lt;li&gt;Fixes an issue where Memories might generate a memory from photos of screenshots, whiteboards or receipts&lt;/li&gt;
&lt;li&gt;Fixes an issue where the camera would stay zoomed in after switching back from the Camera Roll on iPhone 7 Plus&lt;/li&gt;
&lt;li&gt;Additional support for RAW digital cameras&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Messages&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds new love and celebration full screen effects in Messages&lt;/li&gt;
&lt;li&gt;Fixes an issue that sometimes prevented the keyboard from displaying in Messages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Music&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Swipe up the Now Playing screen to more easily access Shuffle, Repeat and Up Next&lt;/li&gt;
&lt;li&gt;Choose how to sort Playlists, Albums, and Songs in Library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;News&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Stories you’ve saved for later now appear the new Saved section&lt;/li&gt;
&lt;li&gt;The best paid stories from channels you subscribe to will now appear in a dedicated section in For You&lt;/li&gt;
&lt;li&gt;It’s now easier than ever to get to the next story, just swipe left or tap Next Story while reading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mail&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fixes an issue that caused the Move sheet to persist after filing a Mail message&lt;/li&gt;
&lt;li&gt;Addresses an issue with long press activating copy and paste in Mail&lt;/li&gt;
&lt;li&gt;Fixes an issue in which the wrong message would be selected after deleting a Mail conversation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Accessibility&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds BraillePen14 support to VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where the braille table could switch unexpectedly with VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where sometimes Siri enhanced voices were unavailable to VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where VoiceOver users could not re-order items in lists&lt;/li&gt;
&lt;li&gt;Fixes an issue where Switch Control was sometimes unable to delete Voicemails&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other improvements and fixes&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds notification support for HomeKit accessories including window coverings, occupancy, motion, door/window, smoke, carbon monoxide, and water leak sensors&lt;/li&gt;
&lt;li&gt;Adds notification support for HomeKit accessories when software updates are available to HomeKit accessories&lt;/li&gt;
&lt;li&gt;Improves Bluetooth performance and connectivity with 3rd party accessories&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause FaceTime participants to appear out of focus&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause FaceTime calls to appear with incorrect aspect ratio and orientation&lt;/li&gt;
&lt;li&gt;Fixes an issue that prevented some Visual Voicemail from completing playback&lt;/li&gt;
&lt;li&gt;Fixes a Safari Reader issue that could cause articles to open as empty pages&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause Safari to quit unexpectedly after marking an item as read in Reading List&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For information on the security content of Apple software updates, please visit this website:
&lt;a class="reference external" href="https://support.apple.com/HT201222"&gt;https://support.apple.com/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>Digital Ocean 云主机</title><link href="https://magicalboy.com/digital_ocean_host.html" rel="alternate"></link><published>2016-12-13T00:00:00+08:00</published><updated>2016-12-13T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-13:/digital_ocean_host.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; 云主机，价格最价 &lt;code&gt;5USD&lt;/code&gt; 一个月。&lt;/p&gt;
&lt;p&gt;推荐购买连接：&lt;a class="reference external" href="https://m.do.co/c/05c0b260aaab"&gt;https://m.do.co/c/05c0b260aaab&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这是 DigitalOcean 的官方教程：&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-lemp-on-ubuntu-16-04"&gt;How To Install WordPress with LEMP on Ubuntu 16.04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;访问速度快（新加坡），ping 平均 160 ms 左右；&lt;/li&gt;
&lt;li&gt;价格不算贵，比国内的阿里云 ECS 便宜；&lt;/li&gt;
&lt;li&gt;国外主机不需备案；&lt;/li&gt;
&lt;li&gt;操作系统可选比较多，而且比较新，比如有 Ubuntu 16.04；&lt;/li&gt;
&lt;li&gt;官方指导文档资料比较丰富，Support tickets 回复迅速，方便解决问题节省时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不好的地方 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.digitalocean.com/"&gt;DigitalOcean&lt;/a&gt; 云主机，价格最价 &lt;code&gt;5USD&lt;/code&gt; 一个月。&lt;/p&gt;
&lt;p&gt;推荐购买连接：&lt;a class="reference external" href="https://m.do.co/c/05c0b260aaab"&gt;https://m.do.co/c/05c0b260aaab&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这是 DigitalOcean 的官方教程：&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-lemp-on-ubuntu-16-04"&gt;How To Install WordPress with LEMP on Ubuntu 16.04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;访问速度快（新加坡），ping 平均 160 ms 左右；&lt;/li&gt;
&lt;li&gt;价格不算贵，比国内的阿里云 ECS 便宜；&lt;/li&gt;
&lt;li&gt;国外主机不需备案；&lt;/li&gt;
&lt;li&gt;操作系统可选比较多，而且比较新，比如有 Ubuntu 16.04；&lt;/li&gt;
&lt;li&gt;官方指导文档资料比较丰富，Support tickets 回复迅速，方便解决问题节省时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不好的地方：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;只支持 Linux 主机&lt;/li&gt;
&lt;li&gt;需要绑定信用卡才能使用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注册的时候需要绑定信用卡，但不会马上扣费，点击我的 &lt;a class="reference external" href="https://m.do.co/c/05c0b260aaab"&gt;推荐购买链接&lt;/a&gt; 会有 &lt;code&gt;10USD&lt;/code&gt; 优惠。&lt;/p&gt;
</content><category term="misc"></category></entry><entry><title>Objective C</title><link href="https://magicalboy.com/Objective-C.html" rel="alternate"></link><published>2016-11-24T14:25:00+08:00</published><updated>2016-11-24T14:25:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-11-24:/Objective-C.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id17"&gt;介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id18"&gt;类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id19"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id20"&gt;实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id21"&gt;属性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id22"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id23"&gt;方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id24"&gt;类方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#block" id="id25"&gt;Block 块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#protocol" id="id26"&gt;Protocol 协议&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id27"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id28"&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#category" id="id29"&gt;Category 分类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id30"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id31"&gt;Objective C 类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;类型和字面常量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;编译器指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id34"&gt;其它&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;介绍&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Objective-C 作为 C 程序设计语言的超集，支持与 C 相同的基本语法。您会看到所有熟悉的元素，例如基本类型（&lt;tt class="docutils literal"&gt;int&lt;/tt&gt;、&lt;tt class="docutils literal"&gt;float&lt;/tt&gt; 等）、结构、函数、指针，以及流程控制结构，如 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;if...else&lt;/span&gt;&lt;/tt&gt; 语句和 &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; 语句。还可以直接使用 C 标准库 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id17"&gt;介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id18"&gt;类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id19"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id20"&gt;实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id21"&gt;属性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id22"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id23"&gt;方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id9" id="id24"&gt;类方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#block" id="id25"&gt;Block 块&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#protocol" id="id26"&gt;Protocol 协议&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id10" id="id27"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id11" id="id28"&gt;使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#category" id="id29"&gt;Category 分类&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id12" id="id30"&gt;声明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id13" id="id31"&gt;Objective C 类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id14" id="id32"&gt;类型和字面常量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id15" id="id33"&gt;编译器指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id16" id="id34"&gt;其它&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;介绍&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Objective-C 作为 C 程序设计语言的超集，支持与 C 相同的基本语法。您会看到所有熟悉的元素，例如基本类型（&lt;tt class="docutils literal"&gt;int&lt;/tt&gt;、&lt;tt class="docutils literal"&gt;float&lt;/tt&gt; 等）、结构、函数、指针，以及流程控制结构，如 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;if...else&lt;/span&gt;&lt;/tt&gt; 语句和 &lt;tt class="docutils literal"&gt;for&lt;/tt&gt; 语句。还可以直接使用 C 标准库，例如 stdlib.h 和 stdio.h。&lt;/p&gt;
&lt;p&gt;Objective-C 为 ANSI C 添加了下述语法和功能：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;定义新的类&lt;/li&gt;
&lt;li&gt;类和实例方法&lt;/li&gt;
&lt;li&gt;方法调用（称为发消息）&lt;/li&gt;
&lt;li&gt;属性声明（以及通过它们自动合成存取方法）&lt;/li&gt;
&lt;li&gt;静态和动态类型化&lt;/li&gt;
&lt;li&gt;块 (block)，已封装的、可在任何时候执行的多段代码&lt;/li&gt;
&lt;li&gt;基本语言的扩展，例如协议和类别&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如同其他大多数面向对象语言那样，Objective-C 中的类，支持数据的封装，并定义对这些数据执行的操作。对象是类的运行时实例。它包含自己的实例变量（由其类声明）的内存副本，以及类方法的指针。您可以采用两步法（称为分配和初始化）创建对象。&lt;/p&gt;
&lt;p&gt;Objective-C 中某个类包括两个不同的部分：接口和实现。接口部分包含类声明，并定义该类的公共接口。如同 C 代码那样，您定义头文件和源代码文件，将公共声明与代码的实现细节分开。如果是私有的，将它们放在实现文件中。这些文件的文件扩展名，列在下表中。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="5%" /&gt;
&lt;col width="95%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;扩展名&lt;/th&gt;
&lt;th class="head"&gt;源类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;.h&lt;/td&gt;
&lt;td&gt;头文件。头文件包含类、类型、函数和常量声明。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;.m&lt;/td&gt;
&lt;td&gt;实现文件。可以同时包含 Objective-C 代码和 C 代码。有时也称为源文件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;.mm&lt;/td&gt;
&lt;td&gt;实现文件。除了包含 Objective-C 代码和 C 代码以外，还可以包含 C++ 代码。仅当您实际引用您的 Objective-C 代码中的 C++ 类或功能时，才使用此扩展名。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;声明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如下图中的语法声明名为 MyClass 的类，它是从基础类（或根类）NSObject 继承而来的。（根类是供其他类直接或间接继承的类。）类声明以编译器指令 &amp;#64;interface 开始，以 &amp;#64;end 指令结束。类名称后面（以冒号分隔），是父类的名称。在 Objective-C 中，一个类只能有一个父类。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="类的声明" class="align-center" src="http://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOSCh/chapters/WriteObjective-CCode/Art/class_decl_2x.png" style="width: 496px; height: 208px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在 &amp;#64;interface 指令和 &amp;#64;end 指令之间，编写属性和方法的声明。这些声明组成了类的公共接口。公共接口相关的自定函数、常量或数据类型的声明放在 &amp;#64;interface ...&amp;#64;end 块之外。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id20"&gt;实现&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;类实现的语法和声明相似。以 &amp;#64;implementation 编译器指令开始（接着是该类的名称），以 &amp;#64;end 指令结束。中间是方法实现。（函数实现应在 &amp;#64;implementation ...&amp;#64;end 块之外。）一个实现应该总是将导入它的接口文件作为代码的第一行。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#import &amp;quot;MyClass.h&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="bp"&gt;MyClass&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;initWithString:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;aName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code goes here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;myClassWithString:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;aName&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code goes here&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当您想要在源代码中包括头文件时，请在头文件或源文件的前几行之中，指定一个导入 (#import) 指令，#import 指令类似于 C 的 #include 指令，不过前者确保同一文件只被包括一次。如果您要导入框架的大部分或所有头文件，请导入框架的包罗头文件 (umbrella header file)，它具有与框架相同的名称。导入（假设的）QuartzCore 框架的头文件的语法是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#import &amp;lt;QuartzCore/QuartzCore.h&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id21"&gt;属性&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;属性通常是指某些由对象封装或储存的数据。它可以是标志（如名称或颜色），也可以是与一个或多个其他对象的关系。一个对象的类定义一个接口，该接口使其对象的用户能获取并设定所封装属性的值。执行这些操作的方法，称为 &lt;strong&gt;存取方法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;存取方法有两种类型，命名约定：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“getter” 存取方法返回属性的值，且名称与属性相同。&lt;/li&gt;
&lt;li&gt;“setter” 存取方法设定属性的新值，且形式为 setPropertyName:，其中属性名称的第一个字母大写。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正确命名的存取方法是 Cocoa 和 Cocoa Touch 框架的多种技术的关键元素，如 &lt;strong&gt;键－值编码&lt;/strong&gt;  (KVC)，它的机制是，通过对象的名称间接访问对象的属性。&lt;/p&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id22"&gt;声明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Objective-C 提供属性声明(&amp;#64;property)编译器指令作为一种方便的写法，用于存取方法的声明和实现。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用属性声明，指定您想要的行为。编译器接着可以根据该声明，创建或合成实际的 getter 和 setter 方法。已声明的属性减少了您必须编写的样板文件代码量，因此使代码更简洁、更少机会出错。&lt;/p&gt;
&lt;p&gt;编译器自动合成所声明的属性。在合成属性时，它创建自己的存取方法，以及“支持”该属性的专有实例变量。实例变量的名称与属性的名称相同，但具有下划线前缀 (_)。只有在对象初始化和取消分配的方法中，您的应用程序应该直接访问实例变量（而不是其属性）。&lt;/p&gt;
&lt;p&gt;注意：在 Xcode4.4 之后不需要 &lt;tt class="docutils literal"&gt;&amp;#64;synthesize property&lt;/tt&gt;，会自动生成 &lt;tt class="docutils literal"&gt;&amp;#64;synthesize property = _property&lt;/tt&gt;。&lt;/p&gt;
&lt;p&gt;如果您想要让实例变量采用不同名称，可以绕过自动合成，并明确地合成属性。在类实现中使用 &amp;#64;synthesize 编译器指令，让编译器产生存取方法，以及进行特殊命名的实例变量。例如：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@synthesize&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_isEnabled&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同时，在声明属性时，您可以指定存取方法的自定名称，通常是使 Boolean 属性的 getter 方法遵循约定形式，如下所示：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;getter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;isEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kt"&gt;BOOL&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Assign new value, change name of getter method&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于包含对象的变量，Objective-C 既支持动态类型化，也支持静态类型化。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;静态变量：静态类型化的变量，要在变量类型声明中包括类名称。&lt;/li&gt;
&lt;li&gt;动态变量：动态类型化的变量，则要给对象使用类型 id。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;myObject1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Static typing&lt;/span&gt;
&lt;span class="kt"&gt;id&lt;/span&gt;       &lt;span class="n"&gt;myObject2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// Dynamic typing&lt;/span&gt;
&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// From Your First iOS App (static typing)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请注意第一个声明中的星号 (*)。在 Objective-C 中，执行对象引用的只能是指针。不能完全理解也不用担心，并非一定要成为指针专家才能开始 Objective-C 编程。码农只需要记住，在静态类型化的对象的声明中，变量的名称前面应放置一个星号。id 类型意味着一个指针。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id23"&gt;方法&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Objective-C 中有两种类型的方法：实例方法和类方法。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;实例方法&lt;/strong&gt;，由类的实例来执行。换言之，在调用实例方法之前，必须先创建该类的实例。实例方法是最常见的方法类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类方法&lt;/strong&gt;，可由它所在的类直接执行。它不需要对象的实例作为消息的接收者。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方法声明包含方法类型标识符、返回类型、一个或多个签名关键词，以及参数类型和名称信息。以下是 insertObject:atIndex: 实例方法的声明。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="方法声明语法" class="align-center" src="http://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOSCh/chapters/WriteObjective-CCode/Art/method_decl_2x.png" style="width: 492px; height: 252px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对于实例方法，声明前面是减号 (-)；对于类方法，对应指示器是加号 (+)。
一个方法的实际名称 (insertObject:atIndex:) 由方法签名关键词组成，之间用冒号字符分隔。冒号字符表明有参数存在。在上述示例中，该方法采用两个参数。如果方法没有参数，则省略第一个签名关键词后面的冒号。&lt;/p&gt;
&lt;p&gt;当您想要调用一个方法时，通过给实现该方法的对象发送一则消息来实现。消息包含方法名称，以及方法所需的参数信息（类型要匹配）。您发送到一个对象的所有消息，都被动态地分派，这样使 Objective-C 类的多态行为更加容易。（多态性是指不同类型的对象响应同一消息的能力。）有时被调用的方法，是由接收消息对象的类之超类来实现。&lt;/p&gt;
&lt;p&gt;要发消息，需要一个消息表达式。&lt;strong&gt;消息表达式&lt;/strong&gt; 使用方括号（[ 和 ]）将消息本身（以及任何所需参数）括起来，同时将接收消息的对象放在最左边方括号右侧。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="nl"&gt;insertObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;anObject&lt;/span&gt; &lt;span class="nl"&gt;atIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为避免声明大量局部变量来储存临时结果，Objective-C 让您嵌套消息表达式。每个嵌套表达式的返回值，都用作另一个消息的一个参数或接收对象。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt; &lt;span class="n"&gt;theArray&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;insertObject&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt; &lt;span class="n"&gt;objectToInsert&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;atIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Objective-C (2.0) 还提供用于调用存取方法的点记法语法。&lt;strong&gt;存取方法&lt;/strong&gt; 获取并设定对象的状态，因此对于封装很重要，是所有对象的重要功能。对象隐藏或封装其状态，并显示接口，该接口是访问该状态的所有实例都通用的。使用点记法语法，您可以将上个示例重新编写为如下形式：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theArray&lt;/span&gt; &lt;span class="nl"&gt;insertObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objectToInsert&lt;/span&gt; &lt;span class="nl"&gt;atIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用点记法语法进行赋值：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;theArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aNewArray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 相当于&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;myAppObject&lt;/span&gt; &lt;span class="nl"&gt;setTheArray&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;aNewArray&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在点记法表达式中，您不能使用对动态类型化的对象（类型为 id 的对象）的引用。&lt;/p&gt;
&lt;p&gt;TODO: 介绍方法属性&lt;/p&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id24"&gt;类方法&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Objective C 的类方法，类似于 C++ 中的静态类方法。&lt;/p&gt;
&lt;p&gt;一般将类方法用作工厂方法创建类的新实例，或，访问与该类关联的一些共享信息。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// nil is essentially the same as NULL&lt;/span&gt;

&lt;span class="c1"&gt;// Create a new array and assign it to the myArray variable.&lt;/span&gt;
&lt;span class="n"&gt;myArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="block"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id25"&gt;Block 块&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;块是封装工作单元的对象，即可在任何时间执行的代码段。它们在本质上是可移植的匿名函数，可作为方法和函数的参数传入，或可从方法和函数中返回。块本身具有一个已类型化的参数列表，且可能具有推断或声明的返回类型。您还可以将块赋值给变量，然后像调用函数一样调用它。&lt;/p&gt;
&lt;p&gt;插入符号 (^) 是用作块的语法标记。块的参数、返回值和正文（即执行的代码）存在其他类似的语法约定。下图解释了该语法，尤其是在将块赋值给变量时。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="Block 声明语法" class="align-center" src="http://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOSCh/chapters/WriteObjective-CCode/Art/blocks_2x.png" style="width: 570px; height: 210px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;您接着可以调用块变量，就像它是一个函数一样：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myBlock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// result is 28&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Block 可以在低版本 iOS 中使用，它只需要编译器 Xcode 支持。&lt;/p&gt;
&lt;p&gt;TODO: 深入&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="protocol"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id26"&gt;Protocol 协议&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;协议是一组尚未实现的方法列表，任何的类均可采纳该协议并给出方法的具体实现。&lt;/p&gt;
&lt;p&gt;协议经常应用于委托及事件触发。&lt;/p&gt;
&lt;p&gt;Objective-C中协议的概念与Java中接口的概念并不完全相同。&lt;/p&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id27"&gt;声明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;类似于接口的声明，但没有父类，并且不能定义实例变量，尽管可以声明属性。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@protocol&lt;/span&gt; &lt;span class="nc"&gt;MyProtocol&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;myProtocolMethod&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外，Protocol 也可以在声明时继承别的 Protocol。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 注意此处的 NSObject 是一个 Protocol&lt;/span&gt;
&lt;span class="k"&gt;@protocol&lt;/span&gt; &lt;span class="nc"&gt;MyProtocol&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="bp"&gt;NSObject&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;myProtocolMethod&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id28"&gt;使用&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;将该协议的名称放在尖括号 (&amp;lt;...&amp;gt;) 中，并且放在它继承的类的名称后面：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;SomeClass&lt;/span&gt; : &lt;span class="nc"&gt;SomeSuperClass&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyProtocol&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="category"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id29"&gt;Category 分类&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;一个分类可以将方法的实现分解进一系列分离的文件。可让扩展类的接口而无需要对类进行实例化。&lt;/p&gt;
&lt;p&gt;Objective-C借用并扩展了Smalltalk实现中的“分类”概念。&lt;/p&gt;
&lt;p&gt;将类别用作一种手段，来对头文件内的相关方法声明进行分组。甚至还可以将不同的类别声明放在不同的头文件中。框架在其所有头文件中使用这些技巧，来达到清晰明确。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;img alt="系统框架中的类别" src="static/images/category.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Objective C 中的 Category 仅允许增加方法，不允许增加成员变量。&lt;/p&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id30"&gt;声明&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;声明类别语法，是使用圆括号将类别名称括起来。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="nl"&gt;(NSExtendedArray)&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;arrayByAddingObject:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;anObject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;类扩展匿名类别，在实现 (.m) 文件中声明专有属性和专有方法。类扩展看起来类似于类别，只是圆括号之间没有文本。在高版本的Xcode自动生成的 UIViewController 子类实现中可以看到：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;MyAppDelegate&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;MyDataObject&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在运行时，分类中的方法与类原有的方法并无区别，其代码可以访问包括私有类成员变量在内的所有成员变量。虽然分类可以访问类的私有成员，但通常利用属性的访问方法来访问是一种更好的做法，可以使得分类与原有类更加独立。&lt;/p&gt;
&lt;p&gt;若分类声明了与类中原有方法同名的函数，则分类中的方法会被调用。因此分类不仅可以增加类的方法，也可以代替原有的方法。这个特性可以用于修正原有代码中的错误，更可以从根本上改变程序中原有类的行为。若两个分类中的方法同名，则被调用的方法是不可预测的。&lt;/p&gt;
&lt;p&gt;允许动态的、按需的加载分类；若不需要某一分类提供的功能，可以简单的不编译之。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id31"&gt;Objective C 类型&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Objective-C 有几个不能用作变量名称的术语，保留用于特殊用途。其中包括已定义的类型以及与这些类型相配的字面常量，和以 &amp;#64; 符号为前缀的编译器指令。&lt;/p&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id32"&gt;类型和字面常量&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="7%" /&gt;
&lt;col width="93%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;类型&lt;/th&gt;
&lt;th class="head"&gt;字面常量及描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;动态对象&lt;/strong&gt; 类型。动态类型化的对象和静态类型化的对象的否定字面常量，都是 nil。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Class&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;动态类&lt;/strong&gt; 类型。其否定字面常量是 Nil。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;SEL&lt;/td&gt;
&lt;td&gt;选择器的数据类型 (typedef)；此数据类型表示运行时的方法签名。其否定字面常量是 NULL。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;BOOL&lt;/td&gt;
&lt;td&gt;Boolean 类型。字面常量值是 YES 和 NO。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在某些情况下，这些类型和字面常量替换 ANSI C 相应的类型和字面常量。将消息发送到 nil，完全没有影响。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id33"&gt;编译器指令&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;#64;interface&lt;/li&gt;
&lt;li&gt;&amp;#64;end&lt;/li&gt;
&lt;li&gt;&amp;#64;implementation&lt;/li&gt;
&lt;li&gt;&amp;#64;protocol&lt;/li&gt;
&lt;li&gt;&amp;#64;property&lt;/li&gt;
&lt;li&gt;&amp;#64;synthesize&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id34"&gt;其它&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;self : 引用当前对象；它等同于 C++ 中的 this。&lt;/li&gt;
&lt;li&gt;super : 引用超类对象；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您将消息发送到 self，运行时先在当前对象的类中查找方法实现；如果在那里找不到方法，则在其超类中查找（依此类推）。如果您将消息发送到 super，运行时先在超类中查找方法实现。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Objective-C"></category></entry><entry><title>Swift 中的 Lazy 初始化</title><link href="https://magicalboy.com/lazy_load_with_swift.html" rel="alternate"></link><published>2016-10-29T00:00:00+08:00</published><updated>2016-10-29T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-10-29:/lazy_load_with_swift.html</id><summary type="html">&lt;p&gt;Lazy 初始化技术早在 Objective C 时代经常被使用，是一种用来延时创建一些比较消耗资源的对象的技术。&lt;/p&gt;
&lt;p&gt;这种技术在 iOS 开发里面很有用，确保只有在需要使用某些资源的时候才开始分配内存。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;老的方式&lt;/h2&gt;
&lt;p&gt;这是在 Objective C 里面的写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;players&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swift"&gt;
&lt;h2&gt;Swift 新方式&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简单，就一句话！&lt;/p&gt;
&lt;p&gt;需要注意的是，声明 &lt;code&gt;lazy&lt;/code&gt; 变量必须用 &lt;code&gt;var&lt;/code&gt; 关键字，不能使用 &lt;code&gt;let&lt;/code&gt;。因为常量对象初始化完成的时候必须有一个初始值。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;Closure&lt;/code&gt; 定义 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Lazy 初始化技术早在 Objective C 时代经常被使用，是一种用来延时创建一些比较消耗资源的对象的技术。&lt;/p&gt;
&lt;p&gt;这种技术在 iOS 开发里面很有用，确保只有在需要使用某些资源的时候才开始分配内存。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;老的方式&lt;/h2&gt;
&lt;p&gt;这是在 Objective C 里面的写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;players&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swift"&gt;
&lt;h2&gt;Swift 新方式&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简单，就一句话！&lt;/p&gt;
&lt;p&gt;需要注意的是，声明 &lt;code&gt;lazy&lt;/code&gt; 变量必须用 &lt;code&gt;var&lt;/code&gt; 关键字，不能使用 &lt;code&gt;let&lt;/code&gt;。因为常量对象初始化完成的时候必须有一个初始值。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;Closure&lt;/code&gt; 定义 lazy 属性：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;temporaryPlayers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
    &lt;span class="n"&gt;temporaryPlayers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;temporaryPlayers&lt;/span&gt;
&lt;span class="p"&gt;}()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用实例方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或类方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TestClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;func&lt;/span&gt; &lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很明显，一般情况下使用 Closure 方式创建是最简单的，能够一目了然。&lt;/p&gt;
&lt;p&gt;本文翻译并修改自 &lt;a class="reference external" href="http://mikebuss.com/2014/06/22/lazy-initialization-swift/"&gt;Lazy Initialization with Swift&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Swift"></category></entry><entry><title>微鲸电视，智能电视</title><link href="https://magicalboy.com/whaley_android_tv.html" rel="alternate"></link><published>2016-10-28T00:00:00+08:00</published><updated>2016-10-28T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-10-28:/whaley_android_tv.html</id><summary type="html">&lt;p&gt;这是一台四月份在 &lt;a class="reference external" href="https://item.jd.com/2268749.html"&gt;京东商场&lt;/a&gt; 买的一台平板电视，关于微鲸这个新品牌请自行搜索。&lt;/p&gt;
&lt;p&gt;这台电视主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;4K 分辨率&lt;/li&gt;
&lt;li&gt;价格不算贵，不到 1500 CNY&lt;/li&gt;
&lt;li&gt;LG 屏幕，尺寸 43 寸，适合出租屋，将来有自己房子之时也可以作为卧室电视使用&lt;/li&gt;
&lt;li&gt;普通 Android 定制系统，京东销售渠道非 YunOS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;开机启动速度慢&lt;/li&gt;
&lt;li&gt;资源不够丰富（GITV 牌照）&lt;/li&gt;
&lt;li&gt;Android 5.0 不够新，建议更新到 6.0 ，有完整意义的权限管理&lt;/li&gt;
&lt;li&gt;系统不可靠，有与 YunOS 合作的版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装失败，未知原因&lt;/h2&gt;
&lt;p&gt;这是最近更新的一个版本在安装 APK 时报的一个错误，当时问了客服，客服没有任何回应。后来自己打开 ADB 使用命令与手动结合安装解决 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;这是一台四月份在 &lt;a class="reference external" href="https://item.jd.com/2268749.html"&gt;京东商场&lt;/a&gt; 买的一台平板电视，关于微鲸这个新品牌请自行搜索。&lt;/p&gt;
&lt;p&gt;这台电视主要特点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;4K 分辨率&lt;/li&gt;
&lt;li&gt;价格不算贵，不到 1500 CNY&lt;/li&gt;
&lt;li&gt;LG 屏幕，尺寸 43 寸，适合出租屋，将来有自己房子之时也可以作为卧室电视使用&lt;/li&gt;
&lt;li&gt;普通 Android 定制系统，京东销售渠道非 YunOS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;开机启动速度慢&lt;/li&gt;
&lt;li&gt;资源不够丰富（GITV 牌照）&lt;/li&gt;
&lt;li&gt;Android 5.0 不够新，建议更新到 6.0 ，有完整意义的权限管理&lt;/li&gt;
&lt;li&gt;系统不可靠，有与 YunOS 合作的版本&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装失败，未知原因&lt;/h2&gt;
&lt;p&gt;这是最近更新的一个版本在安装 APK 时报的一个错误，当时问了客服，客服没有任何回应。后来自己打开 ADB 使用命令与手动结合安装解决。&lt;/p&gt;
&lt;p&gt;由于这是一个定制的操作系统，这里使用 &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.magicalboy.artchecker"&gt;ARTChecker&lt;/a&gt; 和 &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.magicalboy.dptest"&gt;DPInfo&lt;/a&gt; 两件套查看结果（仅参考）。&lt;/p&gt;
&lt;img alt="Whaley Android" class="align-left" src="images/whaley_android_spec.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;黑屏问题&lt;/h2&gt;
&lt;p&gt;可能是第一批次产品良品率问题，运气不好刚好遇上，没用几天就黑屏了。&lt;/p&gt;
&lt;img alt="Whaley Half of Black Screen" class="align-left" src="images/whaley_half_of_black_screen.jpg" /&gt;
&lt;p&gt;后来通过售后服务，由厂家安装人员上门检测，拿到检测报告后京东直接上门换新，并收走有问题的商品。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;虽然国内的 OTT 平台有 &lt;a class="reference external" href="http://www.digitaling.com/articles/11970.html"&gt;广电181号文件&lt;/a&gt; 限制，如果将一个开放的 Android 系统做得太封闭未见是一件好事。&lt;/p&gt;
&lt;p&gt;目前国产电视已经大部分是互联网电视，集成 Android 系统并内置内容服务。&lt;/p&gt;
&lt;p&gt;因受阿里云 YunOS 的问题影响极大，个人更倾向于非 Android 系统的电视。&lt;/p&gt;
&lt;p&gt;电视的主要参数不应该为了让 Android 系统运行更快，解码能力更强而使用更强 CPU 和 GPU，而应该注重屏幕本身，提高显示质量。以及提升开机速度和响应速度。&lt;/p&gt;
&lt;p&gt;最近的量子显示技术和 LED 屏显示技术我还是比较感兴趣的，等技术成熟和价格降下来以后买一台享受一下。不多说了，搬砖赚钱提高生活质量 :D&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>摩托罗拉(Motorola) MT620</title><link href="https://magicalboy.com/motorola_mt620.html" rel="alternate"></link><published>2016-10-20T12:20:00+08:00</published><updated>2016-10-20T12:20:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-10-20:/motorola_mt620.html</id><summary type="html">&lt;p&gt;今天在收拾东西的时候发现一部旧 Android 手机，Motorola MT620。&lt;/p&gt;
&lt;p&gt;这是一台老手机，2012 年购买于亚马逊：&lt;a class="reference external" href="https://www.amazon.cn/gp/product/B005HM1R62"&gt;摩托罗拉(Motorola)MT620 3G智能手机(简洁白 移动定制)&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;购买价格是 470.00，在当时来说已经是令人心动了，虽然今天 299 元即可买到八核，4G 大屏手机。&lt;/p&gt;
&lt;p&gt;主要亮点是：QWERTY 全功能键盘，全触屏，支持手写输入，摩托罗拉品牌且价格实惠。&lt;/p&gt;
&lt;p&gt;所以买了一台给老爸使用，现在他在用 iPhone 5。:D&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;运行系统&lt;/h2&gt;
&lt;img alt="OPhone" class="align-left" src="images/OPhone_20161020110900.png" /&gt;
&lt;p&gt;采用以 Android 2.3.7 为基础的 &lt;a class="reference external" href="https://zh.wikipedia.org/wiki/OPhone#.E6.91.A9.E6.89.98.E7.BE.85.E6.8B.89MT620"&gt;OPhone&lt;/a&gt; 2.6 最新智能操作系统。&lt;/p&gt;
&lt;p&gt;虽说这是一台移动定制手机，但与别的中国版 Android 系统不同的是，里面没有移动自家应用程序 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天在收拾东西的时候发现一部旧 Android 手机，Motorola MT620。&lt;/p&gt;
&lt;p&gt;这是一台老手机，2012 年购买于亚马逊：&lt;a class="reference external" href="https://www.amazon.cn/gp/product/B005HM1R62"&gt;摩托罗拉(Motorola)MT620 3G智能手机(简洁白 移动定制)&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;购买价格是 470.00，在当时来说已经是令人心动了，虽然今天 299 元即可买到八核，4G 大屏手机。&lt;/p&gt;
&lt;p&gt;主要亮点是：QWERTY 全功能键盘，全触屏，支持手写输入，摩托罗拉品牌且价格实惠。&lt;/p&gt;
&lt;p&gt;所以买了一台给老爸使用，现在他在用 iPhone 5。:D&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;运行系统&lt;/h2&gt;
&lt;img alt="OPhone" class="align-left" src="images/OPhone_20161020110900.png" /&gt;
&lt;p&gt;采用以 Android 2.3.7 为基础的 &lt;a class="reference external" href="https://zh.wikipedia.org/wiki/OPhone#.E6.91.A9.E6.89.98.E7.BE.85.E6.8B.89MT620"&gt;OPhone&lt;/a&gt; 2.6 最新智能操作系统。&lt;/p&gt;
&lt;p&gt;虽说这是一台移动定制手机，但与别的中国版 Android 系统不同的是，里面没有移动自家应用程序（除了开机动画和声音），更意外的是自带了 Google Play 商店和 GTalk 应用。&lt;/p&gt;
&lt;p&gt;这一点和维基百科上面说的不一致，不但有自带 Google 服务，而且没有中国移动的全家桶应用。&lt;/p&gt;
&lt;p&gt;根据上图显示，OPhone 主要由 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Borqs"&gt;Borqs&lt;/a&gt; 开发，中国移动只是定制了开机动画，以及手机外观加了一个 G3 标志。&lt;/p&gt;
&lt;p&gt;后来本人手贱点了升级，导致 Google 服务消失，但一样没有中移动应用。幸运的是还可以手动刷回去。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="recovery"&gt;
&lt;h2&gt;Recovery 模式&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;首先在关机状态下按住键盘 ALT 键，然后按开机键；&lt;/li&gt;
&lt;li&gt;等出现移动 Logo 放开开机键，继续按着 ALT 不放，等屏幕出现一个盒子即可；&lt;/li&gt;
&lt;li&gt;音量加减控制上下，空格键是选择。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刷机方法：选择 “apply update from sdcard” 进入后找到 “SUPK_31I_MA_Fly.supk” 文件按空格键。
需要注意的是，刷机包需要先解压缩。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mt620"&gt;
&lt;h2&gt;MT620 相册&lt;/h2&gt;
&lt;p&gt;MT620 有自带截图功能，方法是：按住菜单键（触摸按钮最左边一个）不放，接着按音量加键。&lt;/p&gt;
&lt;p&gt;使用截图功能创建的相册：
&lt;a class="reference external" href="https://goo.gl/photos/YhCsm3ADp3HSZua59"&gt;https://goo.gl/photos/YhCsm3ADp3HSZua59&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category><category term="Motorola"></category></entry><entry><title>使用 Let's Encrypt SSL</title><link href="https://magicalboy.com/use-lets-encrypt-ssl.html" rel="alternate"></link><published>2016-09-13T16:30:00+08:00</published><updated>2016-09-13T16:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-09-13:/use-lets-encrypt-ssl.html</id><summary type="html">&lt;p&gt;本站的 SSL 由 &lt;a class="reference external" href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; 提供。不再使用 StartSSL。&lt;/p&gt;
&lt;p&gt;需要注意的是，Let's Encrypt 的免费证书有效期为三个月，注意过期之前更新或使用自动脚本更新。&lt;/p&gt;
&lt;p&gt;附：&lt;a class="reference external" href="https://www.digicert.com/help/?host=magicalboy.com"&gt;SSL Certificate Checker&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本站的 SSL 由 &lt;a class="reference external" href="https://letsencrypt.org"&gt;Let's Encrypt&lt;/a&gt; 提供。不再使用 StartSSL。&lt;/p&gt;
&lt;p&gt;需要注意的是，Let's Encrypt 的免费证书有效期为三个月，注意过期之前更新或使用自动脚本更新。&lt;/p&gt;
&lt;p&gt;附：&lt;a class="reference external" href="https://www.digicert.com/help/?host=magicalboy.com"&gt;SSL Certificate Checker&lt;/a&gt;&lt;/p&gt;
</content><category term="web"></category><category term="ssl"></category></entry><entry><title>苹果发布会视频下载</title><link href="https://magicalboy.com/apple-event-download.html" rel="alternate"></link><published>2016-09-08T16:30:00+08:00</published><updated>2016-09-08T16:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-09-08:/apple-event-download.html</id><summary type="html">&lt;p&gt;苹果的发布会通常在中国北京时间凌晨一点。如果因为睡觉错过了想回顾，除了在官网在线回看，还可以在 Youtube 或其他网站上观看。&lt;/p&gt;
&lt;p&gt;如果想下载完整版回来收藏，可以使用 VLC 或 ffmpeg 工具。&lt;/p&gt;
&lt;p&gt;比如，使用 ffmpeg 下载苹果九月发布会命令：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ ffmpeg -i &lt;span class="s2"&gt;&amp;quot;http://p.events-delivery.apple.com.edgesuite.net/1609lijbsdfvoihbadfvohbsdfvljhb/vod/8500/8500_vod.m3u8&amp;quot;&lt;/span&gt; -c copy apple.ts
&lt;/pre&gt;
&lt;p&gt;提示：1080p 的 m3u8 流地址可以复制视频地址分析得到。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;苹果的发布会通常在中国北京时间凌晨一点。如果因为睡觉错过了想回顾，除了在官网在线回看，还可以在 Youtube 或其他网站上观看。&lt;/p&gt;
&lt;p&gt;如果想下载完整版回来收藏，可以使用 VLC 或 ffmpeg 工具。&lt;/p&gt;
&lt;p&gt;比如，使用 ffmpeg 下载苹果九月发布会命令：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ ffmpeg -i &lt;span class="s2"&gt;&amp;quot;http://p.events-delivery.apple.com.edgesuite.net/1609lijbsdfvoihbadfvohbsdfvljhb/vod/8500/8500_vod.m3u8&amp;quot;&lt;/span&gt; -c copy apple.ts
&lt;/pre&gt;
&lt;p&gt;提示：1080p 的 m3u8 流地址可以复制视频地址分析得到。&lt;/p&gt;
</content><category term="apple"></category></entry><entry><title>iOS 固件信息 API</title><link href="https://magicalboy.com/ios-firmware-api.html" rel="alternate"></link><published>2016-08-31T11:30:00+08:00</published><updated>2016-08-31T11:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-08-31:/ios-firmware-api.html</id><summary type="html">&lt;p&gt;收藏几个有意思的第三方 API，主要获取固件信息，实时的 Apple TSS 服务状态：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ineal.me/tss/docs"&gt;Real time status of every iOS firmware currently being signed by Apple's TSS server.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ios.icj.me/docs/"&gt;IPSW Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;p&gt;收藏几个有意思的第三方 API，主要获取固件信息，实时的 Apple TSS 服务状态：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ineal.me/tss/docs"&gt;Real time status of every iOS firmware currently being signed by Apple's TSS server.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ios.icj.me/docs/"&gt;IPSW Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content><category term="iOS"></category><category term="crack"></category></entry><entry><title>苹果九月发布会</title><link href="https://magicalboy.com/apple-event-2016-september.html" rel="alternate"></link><published>2016-08-31T00:30:00+08:00</published><updated>2016-08-31T00:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-08-31:/apple-event-2016-september.html</id><summary type="html">&lt;img alt="Apple Event" src="images/hero_image_large.jpg" /&gt;
&lt;p&gt;中国北京时间为8日凌晨1点。&lt;/p&gt;
&lt;p&gt;可以在线看直播，有即时字幕，流畅度提升越来越明显。&lt;/p&gt;
&lt;blockquote&gt;
Requirements: Live streaming uses Apple’s HTTP Live Streaming (HLS) technology. HLS requires an iPhone, iPad, or iPod touch with Safari on iOS 7.0 or later, a Mac with Safari 6.0.5 or later on OS X v10.8.5 or later, or a …&lt;/blockquote&gt;</summary><content type="html">&lt;img alt="Apple Event" src="images/hero_image_large.jpg" /&gt;
&lt;p&gt;中国北京时间为8日凌晨1点。&lt;/p&gt;
&lt;p&gt;可以在线看直播，有即时字幕，流畅度提升越来越明显。&lt;/p&gt;
&lt;blockquote&gt;
Requirements: Live streaming uses Apple’s HTTP Live Streaming (HLS) technology. HLS requires an iPhone, iPad, or iPod touch with Safari on iOS 7.0 or later, a Mac with Safari 6.0.5 or later on OS X v10.8.5 or later, or a PC with Microsoft Edge on Windows 10. Streaming via Apple TV requires an Apple TV (2nd or 3rd generation) with software 6.2 or later or an Apple TV (4th generation).&lt;/blockquote&gt;
</content><category term="apple"></category></entry><entry><title>xctool 使用</title><link href="https://magicalboy.com/xctool-usage.html" rel="alternate"></link><published>2016-07-06T10:30:00+08:00</published><updated>2016-07-06T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-07-06:/xctool-usage.html</id><summary type="html">&lt;p&gt;xctool 可以理解为 xcodebuild 的增强版，特别有利于可持续集成。xctool 由 Facebook 开发维护，项目地址 &lt;a class="reference external" href="https://github.com/facebook/xctool"&gt;https://github.com/facebook/xctool&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装 xctool&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.7.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.7.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.7 …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;xctool 可以理解为 xcodebuild 的增强版，特别有利于可持续集成。xctool 由 Facebook 开发维护，项目地址 &lt;a class="reference external" href="https://github.com/facebook/xctool"&gt;https://github.com/facebook/xctool&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装 xctool&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.7.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.7.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.7: &lt;span class="m"&gt;20&lt;/span&gt; files, &lt;span class="m"&gt;2&lt;/span&gt;.2M
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;如果安装的不是最新版本，则升级&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew update
Updated Homebrew from c3096f39 to dde20cd8.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Migrating Homebrew to v0.9.9
...
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; Cleaning up /Library/Caches/Homebrew...
...
Removing: /Library/Caches/Homebrew/xctool-0.2.7.el_capitan.bottle.tar.gz... &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;650&lt;/span&gt;.4K&lt;span class="o"&gt;)&lt;/span&gt;

$ brew upgrade &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Upgrading &lt;span class="m"&gt;1&lt;/span&gt; outdated package, with result:
xctool &lt;span class="m"&gt;0&lt;/span&gt;.2.9
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Upgrading &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.9.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.9.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.9: &lt;span class="m"&gt;21&lt;/span&gt; files, &lt;span class="m"&gt;2&lt;/span&gt;.9M
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;xctool 的命令和参考选项大部分基于 xcodebuild，大多数情况下两者可以互换使用，但 xctool 会有更漂亮的输出。更多请查看帮助命令 &lt;cite&gt;$xctool -help&lt;/cite&gt;。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Test，对指定的 scheme 进行编译和运行测试&lt;/li&gt;
&lt;li&gt;Building Tests，只编译测试，不运行&lt;/li&gt;
&lt;li&gt;Running Tests，不需要再编译，直接运行测试&lt;/li&gt;
&lt;li&gt;Parallelizing Test Runs，并行地进行单元测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可见 xctool 比较侧重于测试，对于编译可能不会对未来的 Xcode 版本更新。编译项目建议使用 xcodebuild, xcpretty 或 xcbuild。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="faq"&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;DVTAssertions: ASSERTION FAILURE：
原因是安装了旧版本，可见安装前 update 一下是个必须的好习惯。&lt;/li&gt;
&lt;li&gt;依然报错：NSInternalInconsistencyException', reason: 'Platform 'iphoneos' is not yet supported.
解决：&lt;a class="reference external" href="https://github.com/facebook/xctool/issues/692"&gt;https://github.com/facebook/xctool/issues/692&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Travis CI: Code Sign error:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/travis-ci/travis-ci/issues/3047"&gt;https://github.com/travis-ci/travis-ci/issues/3047&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/travis-ci/travis-ci/issues/3986"&gt;https://github.com/travis-ci/travis-ci/issues/3986&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="CI"></category></entry><entry><title>启用 OS X Web 服务器</title><link href="https://magicalboy.com/enable-osx-webserver.html" rel="alternate"></link><published>2016-06-01T14:12:00+08:00</published><updated>2016-06-01T14:12:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-06-01:/enable-osx-webserver.html</id><summary type="html">&lt;p&gt;OS X 有内置 &lt;code&gt;Apache&lt;/code&gt; 服务器应用，早期版本可以在网络共享中打开，目前的 OS Ｘ 版本已经取消。&lt;/p&gt;
&lt;p&gt;本文 OS X 版本是 &lt;em&gt;OS X El Capitan 10.11.5&lt;/em&gt;，Apache 版本：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ apachectl -v
Server version: Apache/2.4.18 &lt;span class="o"&gt;(&lt;/span&gt;Unix&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="section" id="apache"&gt;
&lt;h2&gt;Apache 使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;即使在未配置之前也可以打开 Apache 服务：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ sudo apachectl start
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;然后输入本机地址进行测试：&lt;a class="reference external" href="http://localhost/"&gt;http://localhost/&lt;/a&gt; 或 &lt;a class="reference external" href="http://127.0.0.1"&gt;http://127.0.0.1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;测试完毕后 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;OS X 有内置 &lt;code&gt;Apache&lt;/code&gt; 服务器应用，早期版本可以在网络共享中打开，目前的 OS Ｘ 版本已经取消。&lt;/p&gt;
&lt;p&gt;本文 OS X 版本是 &lt;em&gt;OS X El Capitan 10.11.5&lt;/em&gt;，Apache 版本：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ apachectl -v
Server version: Apache/2.4.18 &lt;span class="o"&gt;(&lt;/span&gt;Unix&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="section" id="apache"&gt;
&lt;h2&gt;Apache 使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;即使在未配置之前也可以打开 Apache 服务：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ sudo apachectl start
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;然后输入本机地址进行测试：&lt;a class="reference external" href="http://localhost/"&gt;http://localhost/&lt;/a&gt; 或 &lt;a class="reference external" href="http://127.0.0.1"&gt;http://127.0.0.1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;测试完毕后，停止服务：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ sudo apachectl stop
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;如果更改了配置，刚使用以下命令重启：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ sudo apachectl -k restart
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Apache 配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;编辑 Apache 的配置文件，路径：&lt;em&gt;/etc/apache2/httpd.conf&lt;/em&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;修改 &lt;em&gt;Document Root&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;默认的 &lt;em&gt;Document Root&lt;/em&gt; 是 &lt;em&gt;/Library/WebServer/Documents&lt;/em&gt;，这个路径下面就是默认的 &lt;em&gt;It works!&lt;/em&gt; 页面文件。&lt;/p&gt;
&lt;p&gt;一般需要修改为用户目录下的 &lt;em&gt;Sites&lt;/em&gt; 目录：&lt;em&gt;DocumentRoot &amp;quot;/Users/[username]/Sites&amp;quot;&lt;/em&gt;。注意这里的路径必须写完整的路径，用户目录不能使用 &lt;em&gt;~&lt;/em&gt; 代替。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;然后修改站点目录：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&amp;lt;Directory &lt;span class="s2"&gt;&amp;quot;Users/[username]/Sites&amp;quot;&lt;/span&gt;&amp;gt;
    Options FollowSymLinks Multiviews
    MultiviewsMatch Any
    AllowOverride All
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/pre&gt;
&lt;p&gt;需要注意的是，&lt;em&gt;AllowOverride&lt;/em&gt; 值改为 &lt;em&gt;All&lt;/em&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;修改用户和用户组：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
User yaokan
Group staff
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;创建站点目录&lt;/p&gt;
&lt;p&gt;在 Home 根目录下创建 &lt;em&gt;Sites&lt;/em&gt; 目录，然后创建一个测试页面 &lt;em&gt;index.html&lt;/em&gt;：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ mkdir ~/Sites
$ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt; &amp;gt; ~/Sites/index.html
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;重启服务器&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
sudo apachectl restart
&lt;/pre&gt;
&lt;p&gt;打开网址 &lt;a class="reference external" href="http://localhost"&gt;http://localhost&lt;/a&gt; 即可看到刚刚所创建的 &lt;em&gt;Hello World&lt;/em&gt; 页面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="web"></category></entry><entry><title>在树莓派上安装 AMP</title><link href="https://magicalboy.com/install-amp-on-raspberry-pi.html" rel="alternate"></link><published>2016-05-31T14:22:00+08:00</published><updated>2016-05-31T14:22:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-31:/install-amp-on-raspberry-pi.html</id><summary type="html">&lt;p&gt;AMP 是 Linux 网站最常见的组合，即 Apache，MySQL 和 PHP。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Apache 是一个非常流行的 Web 服务器软件&lt;/li&gt;
&lt;li&gt;MySQL 是一个关系型数据库管理系统&lt;/li&gt;
&lt;li&gt;PHP 是一种通用开源脚本语言，主要适用于 Web 开发领域&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="apache"&gt;
&lt;h2&gt;安装 Apache&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Apache 可以用下面的命令来安装：&lt;em&gt;sudo apt-get install apache2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Raspbian Jessie 版本的默认站点路径是 &lt;em&gt;/var/www/html&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;配置文件路径为 &lt;em&gt;/etc/apache2/&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;修改监听端口号 &lt;em&gt;sudo vi /etc/apache2/ports.conf&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;重启服务 &lt;em&gt;sudo service apache2 restart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;修改权限 …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;AMP 是 Linux 网站最常见的组合，即 Apache，MySQL 和 PHP。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Apache 是一个非常流行的 Web 服务器软件&lt;/li&gt;
&lt;li&gt;MySQL 是一个关系型数据库管理系统&lt;/li&gt;
&lt;li&gt;PHP 是一种通用开源脚本语言，主要适用于 Web 开发领域&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="apache"&gt;
&lt;h2&gt;安装 Apache&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Apache 可以用下面的命令来安装：&lt;em&gt;sudo apt-get install apache2&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Raspbian Jessie 版本的默认站点路径是 &lt;em&gt;/var/www/html&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;配置文件路径为 &lt;em&gt;/etc/apache2/&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;修改监听端口号 &lt;em&gt;sudo vi /etc/apache2/ports.conf&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;重启服务 &lt;em&gt;sudo service apache2 restart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;修改权限 &lt;em&gt;sudo chown pi: index.html&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="php"&gt;
&lt;h2&gt;安装 PHP&lt;/h2&gt;
&lt;p&gt;安装 PHP 及其 Apache Module：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
sudo apt-get install php5 libapache2-mod-php5 -y
&lt;/pre&gt;
&lt;p&gt;测试页：index.php&lt;/p&gt;
&lt;pre class="code php literal-block"&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nb"&gt;phpinfo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;配置文件：&lt;em&gt;/etc/php5/cli/php.ini&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql"&gt;
&lt;h2&gt;安装 MySQL&lt;/h2&gt;
&lt;pre class="code shell literal-block"&gt;
sudo apt-get install mysql-server php5-mysql
&lt;/pre&gt;
&lt;p&gt;安装过程中会让你输入 MySQL root 用户的密码。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category></entry><entry><title>iTunes 可视化插件</title><link href="https://magicalboy.com/itunes-visualizer-plugin.html" rel="alternate"></link><published>2016-05-30T15:51:00+08:00</published><updated>2016-05-30T15:51:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-30:/itunes-visualizer-plugin.html</id><summary type="html">&lt;p&gt;听到一些好的音乐时，尤其是节奏感强烈的，总是想看看可视化效果。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://apptree.net/ledsa.htm"&gt;LED Spectrum Analyzer plug-in for iTunes&lt;/a&gt; 是一个很不错的 iTunes 可视化插件，免费开源。&lt;/p&gt;
&lt;p&gt;本人一直在使用这个 LED 频谱分析议插件，虽有两年多没更新，但仍然支持目前最新 iTunes 12.4。另外需要注意的是，此插件仅支持 OS X 平台。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;下载：&lt;a class="reference external" href="http://apptree.net/apps/LEDSA3.0.zip"&gt;Version 3.0.7&lt;/a&gt; 并解压。&lt;/li&gt;
&lt;li&gt;打开 Finder，按下 &lt;em&gt;Shift + cmd + G&lt;/em&gt; 并输入 &lt;em&gt;~/Library/iTunes/iTunes Plug-ins&lt;/em&gt; 前往到 iTunes 插件目录。&lt;/li&gt;
&lt;li&gt;复制 &lt;em&gt;LED Spectrum …&lt;/em&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;听到一些好的音乐时，尤其是节奏感强烈的，总是想看看可视化效果。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://apptree.net/ledsa.htm"&gt;LED Spectrum Analyzer plug-in for iTunes&lt;/a&gt; 是一个很不错的 iTunes 可视化插件，免费开源。&lt;/p&gt;
&lt;p&gt;本人一直在使用这个 LED 频谱分析议插件，虽有两年多没更新，但仍然支持目前最新 iTunes 12.4。另外需要注意的是，此插件仅支持 OS X 平台。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;下载：&lt;a class="reference external" href="http://apptree.net/apps/LEDSA3.0.zip"&gt;Version 3.0.7&lt;/a&gt; 并解压。&lt;/li&gt;
&lt;li&gt;打开 Finder，按下 &lt;em&gt;Shift + cmd + G&lt;/em&gt; 并输入 &lt;em&gt;~/Library/iTunes/iTunes Plug-ins&lt;/em&gt; 前往到 iTunes 插件目录。&lt;/li&gt;
&lt;li&gt;复制 &lt;em&gt;LED Spectrum Analyser.bundle&lt;/em&gt; 到 iTunes 插件目录。&lt;/li&gt;
&lt;li&gt;重新打开 iTunes，在菜单选择 &lt;em&gt;显示 -&amp;gt; 可视化效果 -&amp;gt; LED Spectrum Analyser 3.0&lt;/em&gt; 激活使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;默认的配置没有达到个人想要的效果，所以要配置一下。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;在可视化界面鼠标右键选择 &lt;em&gt;Visualizer Options..&lt;/em&gt; 打开 &lt;em&gt;LED Spectrum Analyser Options&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;打开 &lt;em&gt;Layout&lt;/em&gt; 标签视图，&lt;em&gt;Bands&lt;/em&gt; 选择 &lt;em&gt;18&lt;/em&gt;。 &lt;em&gt;Cover Art&lt;/em&gt; 部分全部勾选，启用封面图片和根据封面图片生成的颜色，这个功能挺赞的。&lt;/li&gt;
&lt;li&gt;打开 &lt;em&gt;Advanced&lt;/em&gt; 标签界面，只勾选 &lt;em&gt;Bin Using Peak Values&lt;/em&gt; 以及 &lt;em&gt;Exponential Decay&lt;/em&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上配置可以让频谱看起来更灵活，节奏带感，当然也是纯个人爱好。有兴趣的可以去研究其源码。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iTunes"></category></entry><entry><title>自定义 Django Serializer</title><link href="https://magicalboy.com/django-serializer_customize.html" rel="alternate"></link><published>2016-05-29T08:41:00+08:00</published><updated>2016-05-29T08:41:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-29:/django-serializer_customize.html</id><summary type="html">&lt;p&gt;根据 &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.9/topics/serialization/#serialization-formats-json"&gt;Serializing Django objects | Django documentation | Django&lt;/a&gt;
，使用内置默认的 serializer 格式化的 JSON 如下：&lt;/p&gt;
&lt;pre class="code json literal-block"&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4b678b301dfd8a4e0dad910de3ae245b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sessions.session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;expire_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2013-01-16T08:16:59.844Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="err"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;里面带有 &lt;em&gt;pk&lt;/em&gt;, &lt;em&gt;model&lt;/em&gt; 等我们不想要的属性，或者我们想添加一些自定义属性，该如何处理。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;Google 了一大圈，没发现有自己想要的方案。其实想法很简单，获取到原始数据进行二次封装处理即可，并不需要继承实现自己的 &lt;em&gt;Serializer&lt;/em&gt;。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;
    An HttpResponse that renders its content into JSON.
    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__ …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;根据 &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.9/topics/serialization/#serialization-formats-json"&gt;Serializing Django objects | Django documentation | Django&lt;/a&gt;
，使用内置默认的 serializer 格式化的 JSON 如下：&lt;/p&gt;
&lt;pre class="code json literal-block"&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;pk&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4b678b301dfd8a4e0dad910de3ae245b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sessions.session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;quot;fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;quot;expire_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2013-01-16T08:16:59.844Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="err"&gt;...&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;里面带有 &lt;em&gt;pk&lt;/em&gt;, &lt;em&gt;model&lt;/em&gt; 等我们不想要的属性，或者我们想添加一些自定义属性，该如何处理。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;Google 了一大圈，没发现有自己想要的方案。其实想法很简单，获取到原始数据进行二次封装处理即可，并不需要继承实现自己的 &lt;em&gt;Serializer&lt;/em&gt;。&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;
    An HttpResponse that renders its content into JSON.
    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'json'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'fields'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;response_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'totalPages'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'currentPage'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'result'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;

        &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'content_type'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'application/json'&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Restaurant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;JSONResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
</content><category term="django"></category></entry><entry><title>安装 phpMyAdmin</title><link href="https://magicalboy.com/install-phpmyadmin.html" rel="alternate"></link><published>2016-05-28T10:32:00+08:00</published><updated>2016-05-28T10:32:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-28:/install-phpmyadmin.html</id><summary type="html">&lt;p&gt;phpMyAdmin 是管理 MySQL 最方便的 Web 应用，如果经常使用 MySQL ，phpMyAdmin 是必备工具。&lt;/p&gt;
&lt;p&gt;本文主要参考资料：&lt;a class="reference external" href="https://docs.phpmyadmin.net/en/latest/setup.html"&gt;Installation — phpMyAdmin 4.7.0-dev documentation&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 安装&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;去官网下载 &lt;a class="reference external" href="https://www.phpmyadmin.net/downloads/"&gt;最新的版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压到 &lt;em&gt;~/Sites/phpmyadmin&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;em&gt;phpMyAdmin&lt;/em&gt; 目录下创建一个可写的 &lt;em&gt;config&lt;/em&gt; 目录&lt;/li&gt;
&lt;li&gt;打开 &lt;em&gt;http://localhost/~[username]/phpMyAdmin/setup&lt;/em&gt;，加载配置，修改并保存&lt;/li&gt;
&lt;li&gt;将 &lt;em&gt;config&lt;/em&gt; 下生成的 &lt;em&gt;config.inc.php&lt;/em&gt; 移到 &lt;em&gt;phpmyadmin&lt;/em&gt; 根目录下&lt;/li&gt;
&lt;li&gt;删除 &lt;em&gt;config …&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;phpMyAdmin 是管理 MySQL 最方便的 Web 应用，如果经常使用 MySQL ，phpMyAdmin 是必备工具。&lt;/p&gt;
&lt;p&gt;本文主要参考资料：&lt;a class="reference external" href="https://docs.phpmyadmin.net/en/latest/setup.html"&gt;Installation — phpMyAdmin 4.7.0-dev documentation&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 安装&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;去官网下载 &lt;a class="reference external" href="https://www.phpmyadmin.net/downloads/"&gt;最新的版本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压到 &lt;em&gt;~/Sites/phpmyadmin&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;em&gt;phpMyAdmin&lt;/em&gt; 目录下创建一个可写的 &lt;em&gt;config&lt;/em&gt; 目录&lt;/li&gt;
&lt;li&gt;打开 &lt;em&gt;http://localhost/~[username]/phpMyAdmin/setup&lt;/em&gt;，加载配置，修改并保存&lt;/li&gt;
&lt;li&gt;将 &lt;em&gt;config&lt;/em&gt; 下生成的 &lt;em&gt;config.inc.php&lt;/em&gt; 移到 &lt;em&gt;phpmyadmin&lt;/em&gt; 根目录下&lt;/li&gt;
&lt;li&gt;删除 &lt;em&gt;config&lt;/em&gt; 目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ &lt;span class="nb"&gt;cd&lt;/span&gt; /Users/&lt;span class="o"&gt;[&lt;/span&gt;username&lt;span class="o"&gt;]&lt;/span&gt;/Sites/phpMyAdmin
$ mkdir config
$ chmod o+rw config
$ cp config.sample.inc.php config.inc.php
$ vi config.inc.php &lt;span class="c1"&gt;# 按官网推荐的配置
&lt;/span&gt;$ mv config.inc.php config
$ chmod o+w config/config.inc.php
$ mv config/config.inc.php .
$ chmod o-rw config.inc.php
$ rm -rf config
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;2002&lt;/em&gt; 错误， 找不到 &lt;em&gt;mysql.sock&lt;/em&gt; 的解决方法：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ sudo mkdir /var/mysql
Password:
$ sudo ln -s /tmp/mysql.sock /var/mysql/mysql.sock
&lt;/pre&gt;
&lt;/div&gt;
</content><category term="php"></category><category term="web"></category></entry><entry><title>破解 Asset Catalog</title><link href="https://magicalboy.com/crack-asset-catalog.html" rel="alternate"></link><published>2016-05-24T11:30:00+08:00</published><updated>2016-05-24T11:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-24:/crack-asset-catalog.html</id><summary type="html">&lt;p&gt;Asset Catalog 是 Xcode 5 引入的一个新的图片管理方式，支持矢量图，这样设计师不需要再切 &amp;#64;2x, &amp;#64;3x 等多套图标，提高效率。&lt;/p&gt;
&lt;p&gt;使用了 Asset Catalog 的 App 在发布的时候，Xcode 会为这些图片资源打包成 &lt;strong&gt;Assets.car&lt;/strong&gt; 这样的文件，而且无法直接打开。&lt;/p&gt;
&lt;div class="section" id="assets-car"&gt;
&lt;h2&gt;提取 Assets.car 图片&lt;/h2&gt;
&lt;p&gt;使用开源的 &lt;a class="reference external" href="https://github.com/steventroughtonsmith/cartool"&gt;cartool&lt;/a&gt; 工具提取 &lt;em&gt;.car&lt;/em&gt; 文件中的资源。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;clone 源码。&lt;/li&gt;
&lt;li&gt;编译，生成 &lt;em&gt;cartool&lt;/em&gt; 工具。&lt;/li&gt;
&lt;li&gt;使用 &lt;em&gt;cartool&lt;/em&gt; 破解 &lt;em&gt;.car&lt;/em&gt; 文件中的资源&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ ./cartool &amp;lt;.car 文件的路径&amp;gt; &amp;lt;解压后的文件路径&amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就可以获取 &lt;em&gt;Assets …&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Asset Catalog 是 Xcode 5 引入的一个新的图片管理方式，支持矢量图，这样设计师不需要再切 &amp;#64;2x, &amp;#64;3x 等多套图标，提高效率。&lt;/p&gt;
&lt;p&gt;使用了 Asset Catalog 的 App 在发布的时候，Xcode 会为这些图片资源打包成 &lt;strong&gt;Assets.car&lt;/strong&gt; 这样的文件，而且无法直接打开。&lt;/p&gt;
&lt;div class="section" id="assets-car"&gt;
&lt;h2&gt;提取 Assets.car 图片&lt;/h2&gt;
&lt;p&gt;使用开源的 &lt;a class="reference external" href="https://github.com/steventroughtonsmith/cartool"&gt;cartool&lt;/a&gt; 工具提取 &lt;em&gt;.car&lt;/em&gt; 文件中的资源。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;clone 源码。&lt;/li&gt;
&lt;li&gt;编译，生成 &lt;em&gt;cartool&lt;/em&gt; 工具。&lt;/li&gt;
&lt;li&gt;使用 &lt;em&gt;cartool&lt;/em&gt; 破解 &lt;em&gt;.car&lt;/em&gt; 文件中的资源&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ ./cartool &amp;lt;.car 文件的路径&amp;gt; &amp;lt;解压后的文件路径&amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就可以获取 &lt;em&gt;Assets.car&lt;/em&gt; 中的素材了。由于这个工具已经差不多 &lt;strong&gt;3年&lt;/strong&gt; 没有更新，不支持 &lt;em&gt;&amp;#64;3x&lt;/em&gt; 图的导出。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ios-images-extractor"&gt;
&lt;h2&gt;iOS-Images-Extractor&lt;/h2&gt;
&lt;p&gt;另一个 macOS 工具，&lt;a class="reference external" href="https://github.com/devcxm/iOS-Images-Extractor"&gt;https://github.com/devcxm/iOS-Images-Extractor&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;声明&lt;/h2&gt;
&lt;p&gt;由于素材等资源版权问题，本文仅作为学习目的，请切勿用于商业用途。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="crack"></category></entry><entry><title>树莓派 GPIO 模拟器：GPIOSim</title><link href="https://magicalboy.com/raspberry-pi-gpio-sim.html" rel="alternate"></link><published>2016-05-24T10:05:00+08:00</published><updated>2016-05-24T10:05:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-24:/raspberry-pi-gpio-sim.html</id><summary type="html">&lt;p&gt;GPIOSim 是一个树莓派 GPIO 模拟器，目前支持 Linux 和 OS X。它能够在 PC 上进行开发调试使用 RPi.GPIO 模块编写的树莓派应用。&lt;/p&gt;
&lt;p&gt;这是一个开源项目：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github：&lt;a class="reference external" href="https://github.com/bobvann/GPIOSim"&gt;bobvann/GPIOSim: Raspberry Pi GPIO simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;博客主页：&lt;a class="reference external" href="http://bobvann.noip.me/gpiosim-raspberry-pi-gpio-simulator-for-linux-os-x/"&gt;GPIOSim: Raspberry Pi GPIO Simulator for Linux / OS X - Bob Vann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 上安装使用&lt;/h2&gt;
&lt;p&gt;运行环境：&lt;strong&gt;OS X 10.11.5，Python 3.5&lt;/strong&gt;
运行效果：&lt;/p&gt;
&lt;img alt="run on OS X" src="images/raspberry_pi_gpiosim_run_on_osx.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;安装 …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;GPIOSim 是一个树莓派 GPIO 模拟器，目前支持 Linux 和 OS X。它能够在 PC 上进行开发调试使用 RPi.GPIO 模块编写的树莓派应用。&lt;/p&gt;
&lt;p&gt;这是一个开源项目：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github：&lt;a class="reference external" href="https://github.com/bobvann/GPIOSim"&gt;bobvann/GPIOSim: Raspberry Pi GPIO simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;博客主页：&lt;a class="reference external" href="http://bobvann.noip.me/gpiosim-raspberry-pi-gpio-simulator-for-linux-os-x/"&gt;GPIOSim: Raspberry Pi GPIO Simulator for Linux / OS X - Bob Vann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 上安装使用&lt;/h2&gt;
&lt;p&gt;运行环境：&lt;strong&gt;OS X 10.11.5，Python 3.5&lt;/strong&gt;
运行效果：&lt;/p&gt;
&lt;img alt="run on OS X" src="images/raspberry_pi_gpiosim_run_on_osx.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装 Python 3.x，可使用 Homebrew 工具安装。&lt;/li&gt;
&lt;li&gt;安装 Pillow，(Python 2.x 上叫 PIL)：&lt;em&gt;$ pip3.5 install Pillow&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;安装 configparser&lt;/li&gt;
&lt;li&gt;&lt;em&gt;git clone&lt;/em&gt; 源码并进入目录，执行 &lt;em&gt;$ python3.5 GPIOSim.py&lt;/em&gt;，即可运行 GUI。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;示例&lt;/h3&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RPi.GPIO&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;GPIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="c1"&gt;# BOARD编号方式，基于插座引脚编号&lt;/span&gt;
&lt;span class="c1"&gt;#GPIO.setmode(GPIO.BOARD)&lt;/span&gt;
&lt;span class="c1"&gt;# 输出模式&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#GPIO.cleanup()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到上面的代码有两行被注释的代码，因为这是一个小项目，没有模拟实现完整的 RPi.GPIO 模块。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="GPIO"></category><category term="RaspberryPi"></category><category term="Python"></category></entry><entry><title>树莓派 GPIO 入门</title><link href="https://magicalboy.com/raspberry-pi-gpio.html" rel="alternate"></link><published>2016-05-23T18:05:00+08:00</published><updated>2016-05-23T18:05:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-23:/raspberry-pi-gpio.html</id><summary type="html">&lt;p&gt;GPIO，通用型之输入输出（General Purpose I/O）的简称。树莓派内核中已经编译自带了 GPIO 的驱动，可以直接使用第三方函数库来进行编程。&lt;/p&gt;
&lt;p&gt;比较常用的第三方函数库有：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python GPIO&lt;/li&gt;
&lt;li&gt;wiringPi&lt;/li&gt;
&lt;li&gt;BCM2835 C Library&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="model-b-40-pin-gpio"&gt;
&lt;h2&gt;树莓派 3 Model B 的 40 Pin GPIO 编号&lt;/h2&gt;
&lt;img alt="树莓派 3 Model B 的 40 Pin GPIO" src="https://www.element14.com/community/servlet/JiveServlet/previewBody/73950-102-10-339300/pi3_gpio.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="gpio-led"&gt;
&lt;h2&gt;使用 GPIO 接口控制 LED 闪烁&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;硬件清单&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;树莓派 3 Model B x1。本人机子出自 Element14，GPIO 请参考上图。&lt;/li&gt;
&lt;li&gt;LED 发光二极管 x1。&lt;/li&gt;
&lt;li&gt;母头杜邦线 x2。这些材料在国内很容易买到的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;原理说明 …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;GPIO，通用型之输入输出（General Purpose I/O）的简称。树莓派内核中已经编译自带了 GPIO 的驱动，可以直接使用第三方函数库来进行编程。&lt;/p&gt;
&lt;p&gt;比较常用的第三方函数库有：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python GPIO&lt;/li&gt;
&lt;li&gt;wiringPi&lt;/li&gt;
&lt;li&gt;BCM2835 C Library&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="model-b-40-pin-gpio"&gt;
&lt;h2&gt;树莓派 3 Model B 的 40 Pin GPIO 编号&lt;/h2&gt;
&lt;img alt="树莓派 3 Model B 的 40 Pin GPIO" src="https://www.element14.com/community/servlet/JiveServlet/previewBody/73950-102-10-339300/pi3_gpio.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="gpio-led"&gt;
&lt;h2&gt;使用 GPIO 接口控制 LED 闪烁&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;硬件清单&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;树莓派 3 Model B x1。本人机子出自 Element14，GPIO 请参考上图。&lt;/li&gt;
&lt;li&gt;LED 发光二极管 x1。&lt;/li&gt;
&lt;li&gt;母头杜邦线 x2。这些材料在国内很容易买到的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;原理说明&lt;/h3&gt;
&lt;p&gt;LED 发光二极管有一长一短两根针脚。长的针脚接正极（GPIO 有 3.3V 或 5V 的高电平针脚输出），较短的针脚接 GND 形成电位差产生电流流动从而点亮 LED。
本示例没有直接连接正极端，而是连接到一个 GPIO 针脚上。最后通过程序控制 GPIO 口的电位高低状态即可控制LED的亮（GPIO口设置为高电平）或灭（GPIO口设置为低电平）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;硬件连接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;面包版图&lt;/p&gt;
&lt;img alt="Use Raspberry pi 3 GPIO control LED to blink" src="images/raspberry_pi_3_gpio_led_bb.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;PCB 连接图：&lt;/p&gt;
&lt;img alt="PCB diag" src="images/raspberry_pi_3_gpio_led_pcb.png" /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;代码示例&lt;/h3&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RPi.GPIO&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;GPIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="c1"&gt;# 指定 GPIO 口的选定模式为 GPIO 引脚编号模式（而非主板编号模式）&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setmode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BCM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 指定 GPIO15（就是 LED 长针连接的 GPIO 针脚）的模式为输出模式&lt;/span&gt;
&lt;span class="c1"&gt;# 如果上面 GPIO 口的选定模式指定为主板模式的话，这里就应该指定8号而不是15号&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 循环10次&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 最后清理 GPIO 口&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleanup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="GPIO"></category><category term="RaspberryPi"></category></entry><entry><title>bash shell 学习</title><link href="https://magicalboy.com/bash-shell.html" rel="alternate"></link><published>2016-05-17T10:25:00+08:00</published><updated>2016-05-17T10:25:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-17:/bash-shell.html</id><summary type="html">&lt;p&gt;shell 是程序员经常需要用到的东西，特别是 bash 脚本。如果不知道什么是 shell 和 脚本语言，请参考：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/Unix_shell"&gt;什么是 shell？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/脚本语言"&gt;脚本语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单来说， shell 是可以接受用户输入命令的程序，比如 Windows 下的命令行。&lt;/p&gt;
&lt;p&gt;而脚本语言可以理解为不需要编译，直接解释运行的语言。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;换行与注释&lt;/h2&gt;
&lt;p&gt;1. bash 在解析字符的时候，对待“;”跟看见回车是一样的
1. 注释符号为 “#”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;设计哲学&lt;/h2&gt;
&lt;p&gt;一切皆表达式。&lt;/p&gt;
&lt;p&gt;根据表达式的定义，任何表达式都必须有一个值。而 shell 在执行任何东西（不仅是命令）的时候都会有一个返回值。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在 bash 编程中，返回值取值范围：&lt;em&gt;0-255&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;跟 C 语言含义相反， bash 中 0 为真 …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;shell 是程序员经常需要用到的东西，特别是 bash 脚本。如果不知道什么是 shell 和 脚本语言，请参考：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/Unix_shell"&gt;什么是 shell？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/脚本语言"&gt;脚本语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单来说， shell 是可以接受用户输入命令的程序，比如 Windows 下的命令行。&lt;/p&gt;
&lt;p&gt;而脚本语言可以理解为不需要编译，直接解释运行的语言。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;换行与注释&lt;/h2&gt;
&lt;p&gt;1. bash 在解析字符的时候，对待“;”跟看见回车是一样的
1. 注释符号为 “#”&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;设计哲学&lt;/h2&gt;
&lt;p&gt;一切皆表达式。&lt;/p&gt;
&lt;p&gt;根据表达式的定义，任何表达式都必须有一个值。而 shell 在执行任何东西（不仅是命令）的时候都会有一个返回值。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在 bash 编程中，返回值取值范围：&lt;em&gt;0-255&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;跟 C 语言含义相反， bash 中 0 为真（true），非 0 为假（false）&lt;/li&gt;
&lt;li&gt;使用关键字 $? 来查看上一个执行命令的返回值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bananapi@lemaker ~ $ ls
Home
bananapi@lemaker ~ $ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;
bananapi@lemaker ~ $ ls /don
ls: cannot access /don: No such file or directory
bananapi@lemaker ~ $ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="m"&gt;2&lt;/span&gt;
bananapi@lemaker ~ $ don
-bash: don: &lt;span class="nb"&gt;command&lt;/span&gt; not found
bananapi@lemaker ~ $ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="m"&gt;127&lt;/span&gt;
bananapi@lemaker ~ $ ls don&lt;span class="p"&gt;|&lt;/span&gt;wc -l
ls: cannot access don: No such file or directory
&lt;span class="m"&gt;0&lt;/span&gt;
bananapi@lemaker ~ $ &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="if"&gt;
&lt;h2&gt;if 分支结构&lt;/h2&gt;
&lt;p&gt;组成一个语言的必要两种语法结构是分支结构和循环结构。作为一个编程语言， bash 也给我们提供了分支结构，其中最常用的就是 &lt;em&gt;if&lt;/em&gt;：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; list&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; list&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; list&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; list&lt;span class="p"&gt;;&lt;/span&gt; ... &lt;span class="k"&gt;else&lt;/span&gt; list&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;if 语法中后面最常用的命令就是 []&lt;/strong&gt;，也是 bash 新手容易写错的地方：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#正确的写法&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$ret&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
＃错读的写法
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$ret&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#实际上 [] 是一个内建命令，等同于 test 命令&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;$ret&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt;
$ &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; is a shell &lt;span class="nb"&gt;builtin&lt;/span&gt;
bananapi@lemaker ~ $ &lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="nb"&gt;test&lt;/span&gt; is a shell &lt;span class="nb"&gt;builtin&lt;/span&gt;

&lt;span class="c1"&gt;#所以上面的 if 语句也可以写成：&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="nv"&gt;$ret&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="while-until"&gt;
&lt;h2&gt;while until 循环结构&lt;/h2&gt;
&lt;p&gt;语法结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; list-1&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; list-2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="k"&gt;until&lt;/span&gt; list-1&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; list-2&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;while&lt;/strong&gt; 实例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;#注意变量声明时＝号左右不能有空格！&lt;/span&gt;
&lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; -le &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;
&lt;span class="c1"&gt;#这里的 $[] 里面没有空格分隔，因为它并不是个 shell 命令，而是特殊字符，$[] 可以得到一个算数运算的值&lt;/span&gt;
&lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$count&lt;/span&gt;+1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;until&lt;/strong&gt; 实例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;

&lt;span class="k"&gt;until&lt;/span&gt; ! &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; -le &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;
    &lt;span class="c1"&gt;#这个运算只支持整数&lt;/span&gt;
    &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$count&lt;/span&gt;+1&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="case"&gt;
&lt;h2&gt;case 分支结构&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;case&lt;/strong&gt; 和 &lt;strong&gt;for&lt;/strong&gt; 它们所判断的不再是“表达式”是否为真，而是去匹配字符串。case 分支的语法结构：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; word in &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="o"&gt;[(]&lt;/span&gt; pattern &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; pattern &lt;span class="o"&gt;]&lt;/span&gt; ... &lt;span class="o"&gt;)&lt;/span&gt; list &lt;span class="p"&gt;;;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; ... &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

 &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt; in
     don&lt;span class="p"&gt;|&lt;/span&gt;jerry&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt;
     &lt;span class="p"&gt;;;&lt;/span&gt;
     *&lt;span class="o"&gt;)&lt;/span&gt;
     &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;get out!&amp;quot;&lt;/span&gt;
     &lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;程序保存到文件 &lt;strong&gt;case.sh&lt;/strong&gt; ，执行结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sh &lt;span class="k"&gt;case&lt;/span&gt;.sh
get out!

$ sh &lt;span class="k"&gt;case&lt;/span&gt;.sh don
hello don!
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="for"&gt;
&lt;h2&gt;for 循环结构&lt;/h2&gt;
&lt;p&gt;暂无&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="bash"></category><category term="shell"></category></entry><entry><title>exFAT 文件格式支持</title><link href="https://magicalboy.com/raspbian-exfat-support.html" rel="alternate"></link><published>2016-05-16T14:40:00+08:00</published><updated>2016-05-16T14:40:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-16:/raspbian-exfat-support.html</id><summary type="html">&lt;p&gt;exFAT (Extended File Allocation Table) 是一种较适合于闪存的文件系统，微软公司开发。&lt;/p&gt;
&lt;p&gt;基本上所有 Windows 系统，以及 OS X 和部分 Linux、Android 操作系统都支持这种文件系统格式。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为什么要使用 exFAT&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持拷贝文件大于 4 GB&lt;/li&gt;
&lt;li&gt;兼容性好，方便在不同设备上插拔拷贝数据&lt;/li&gt;
&lt;li&gt;部分大容量内存卡购买回来默认使用的就是这种格式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何让部分操作系统支持 exFAT？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="raspberry-pi-raspbian"&gt;
&lt;h2&gt;Raspberry Pi (RASPBIAN)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install exfat-fuse
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完成后，重新插拔内存卡即可自动加载出来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="android"&gt;
&lt;h2&gt;Android&lt;/h2&gt;
&lt;p&gt;暂无&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;exFAT (Extended File Allocation Table) 是一种较适合于闪存的文件系统，微软公司开发。&lt;/p&gt;
&lt;p&gt;基本上所有 Windows 系统，以及 OS X 和部分 Linux、Android 操作系统都支持这种文件系统格式。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为什么要使用 exFAT&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持拷贝文件大于 4 GB&lt;/li&gt;
&lt;li&gt;兼容性好，方便在不同设备上插拔拷贝数据&lt;/li&gt;
&lt;li&gt;部分大容量内存卡购买回来默认使用的就是这种格式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何让部分操作系统支持 exFAT？&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="raspberry-pi-raspbian"&gt;
&lt;h2&gt;Raspberry Pi (RASPBIAN)&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install exfat-fuse
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完成后，重新插拔内存卡即可自动加载出来。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="android"&gt;
&lt;h2&gt;Android&lt;/h2&gt;
&lt;p&gt;暂无&lt;/p&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="Raspbian"></category><category term="exFAT"></category></entry><entry><title>Pelican No module named html_parser</title><link href="https://magicalboy.com/pelican-no-module-named-html_parser.html" rel="alternate"></link><published>2016-04-22T14:40:00+08:00</published><updated>2016-04-22T14:40:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-04-22:/pelican-no-module-named-html_parser.html</id><summary type="html">&lt;p class="first last"&gt;在 OS X 上解决 No module named html_parser 问题。&lt;/p&gt;
</summary><content type="html">&lt;img alt="pelican logo" src="http://docs.getpelican.com/en/3.2/_static/pelican.png" /&gt;
&lt;p&gt;错误消息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;from six.moves.html_parser import HTMLParser&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;ImportError: No module named html_parser&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;环境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pelican版本： &lt;a class="reference external" href="http://docs.getpelican.com/en/3.6.3/index.html"&gt;Pelican 3.6.3&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;OS X 环境：El Capitan 10.11.4，Pyton 2.7.x&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;$ pip uninstall pelican&lt;/li&gt;
&lt;li&gt;$ brew install python&lt;/li&gt;
&lt;li&gt;$ which python # should show /usr/local/bin/python&lt;/li&gt;
&lt;li&gt;$ python -V # should show Python 2.7.10&lt;/li&gt;
&lt;li&gt;$ pip install pelican&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;via &lt;a class="reference external" href="http://stackoverflow.com/a/26737768/1457771"&gt;python - Error using pelican-quickstart &amp;quot;No module named html_parser&amp;quot; - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="pelican"></category></entry><entry><title>OpenWrt CC SS 配置</title><link href="https://magicalboy.com/openwrt-cc-ss.html" rel="alternate"></link><published>2015-12-01T00:00:00+08:00</published><updated>2016-01-09T21:40:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2015-12-01:/openwrt-cc-ss.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OpenWRT 版本：Chaos Calmer 15.05&lt;/li&gt;
&lt;li&gt;OpenWRT 内核：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# opkg files kernel&lt;/span&gt;
Package kernel &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.18.20-1-7bed08fa9c06eb8089e82c200340ec66&lt;span class="o"&gt;)&lt;/span&gt; is installed on root and has the following files:
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使用 root 登录 ssh&lt;/li&gt;
&lt;li&gt;下载合适的预编译 &lt;a class="reference external" href="http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/2.4.1-6f44d53/ar71xx/"&gt;安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上传到 &lt;tt class="docutils literal"&gt;/tmp&lt;/tt&gt; 目录&lt;/li&gt;
&lt;li&gt;执行安装命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cks-libev-spec &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.4.1-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Installing ipset &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.24-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;OpenWRT 版本：Chaos Calmer 15.05&lt;/li&gt;
&lt;li&gt;OpenWRT 内核：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# opkg files kernel&lt;/span&gt;
Package kernel &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.18.20-1-7bed08fa9c06eb8089e82c200340ec66&lt;span class="o"&gt;)&lt;/span&gt; is installed on root and has the following files:
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使用 root 登录 ssh&lt;/li&gt;
&lt;li&gt;下载合适的预编译 &lt;a class="reference external" href="http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/2.4.1-6f44d53/ar71xx/"&gt;安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上传到 &lt;tt class="docutils literal"&gt;/tmp&lt;/tt&gt; 目录&lt;/li&gt;
&lt;li&gt;执行安装命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cks-libev-spec &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.4.1-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Installing ipset &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.24-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/ipset_6.24-1_ar71xx.ipk.
Installing kmod-ipt-ipset &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.18.20-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/kmod-ipt-ipset_3.18.20-1_ar71xx.ipk.
Installing kmod-nfnetlink &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.18.20-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/kmod-nfnetlink_3.18.20-1_ar71xx.ipk.
Installing libmnl &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.0.3-2&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/libmnl_1.0.3-2_ar71xx.ipk.
Installing iptables-mod-tproxy &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.4.21-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/iptables-mod-tproxy_1.4.21-1_ar71xx.ipk.
Installing kmod-ipt-tproxy &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.18.20-1&lt;span class="o"&gt;)&lt;/span&gt; to root...
Downloading http://mirrors.ustc.edu.cn/openwrt/chaos_calmer/15.05/ar71xx/generic/packages/base/kmod-ipt-tproxy_3.18.20-1_ar71xx.ipk.
Configuring kmod-nfnetlink.
Configuring kmod-ipt-ipset.
Configuring libmnl.
Configuring ipset.
Configuring kmod-ipt-tproxy.
failed to find a module named nf_tproxy_core
Configuring iptables-mod-tproxy.
Configuring shadowsocks-libev-spec.
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;程序配置：/etc/init.d/shadowsocks&lt;/li&gt;
&lt;li&gt;服务配置：/var/etc/shadowsocks.json，格式如下&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="s2"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;X.X.X.X&amp;quot;&lt;/span&gt;,
      &lt;span class="s2"&gt;&amp;quot;server_port&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;443&amp;quot;&lt;/span&gt;,
      &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;,
      &lt;span class="s2"&gt;&amp;quot;local_port&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;1080&amp;quot;&lt;/span&gt;,
      &lt;span class="s2"&gt;&amp;quot;method&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;rc4-md5&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Linux"></category><category term="OpenWrt"></category></entry><entry><title>CocoaPods 使用</title><link href="https://magicalboy.com/cocoapods-usage.html" rel="alternate"></link><published>2015-05-30T10:02:00+08:00</published><updated>2015-05-30T10:02:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2015-05-30:/cocoapods-usage.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://cocoapods.org/"&gt;CocoaPods&lt;/a&gt; 是 Objective-C 和 Swift 项目的依赖管理平台，而且已经拥有庞大的库，帮助我们优雅地扩大项目规模。&lt;/p&gt;
&lt;p&gt;后来又出了一个 &lt;a class="reference external" href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;，使用 Swift 实现的一个更简单的 Cocoa 依赖管理工具。由于 Carthage 仅支持动态 framework，所以必须要求 iOS 8 以及以上才能够使用，所以，这个以后再了解。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="os-x-yosemite"&gt;
&lt;h2&gt;OS X Yosemite 上安装&lt;/h2&gt;
&lt;p&gt;使用 gem 安装：&lt;em&gt;$ sudo gem install cocoapods&lt;/em&gt;
前提是你已经安装好了 Gem — 一个 &lt;strong&gt;复杂&lt;/strong&gt; 的 Ruby 语言包管理器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode"&gt;
&lt;h2&gt;在 Xcode 项目中使用&lt;/h2&gt;
&lt;p&gt;很简单，在项目根目录新建一个 &lt;em&gt;Podfile …&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://cocoapods.org/"&gt;CocoaPods&lt;/a&gt; 是 Objective-C 和 Swift 项目的依赖管理平台，而且已经拥有庞大的库，帮助我们优雅地扩大项目规模。&lt;/p&gt;
&lt;p&gt;后来又出了一个 &lt;a class="reference external" href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;，使用 Swift 实现的一个更简单的 Cocoa 依赖管理工具。由于 Carthage 仅支持动态 framework，所以必须要求 iOS 8 以及以上才能够使用，所以，这个以后再了解。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="os-x-yosemite"&gt;
&lt;h2&gt;OS X Yosemite 上安装&lt;/h2&gt;
&lt;p&gt;使用 gem 安装：&lt;em&gt;$ sudo gem install cocoapods&lt;/em&gt;
前提是你已经安装好了 Gem — 一个 &lt;strong&gt;复杂&lt;/strong&gt; 的 Ruby 语言包管理器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode"&gt;
&lt;h2&gt;在 Xcode 项目中使用&lt;/h2&gt;
&lt;p&gt;很简单，在项目根目录新建一个 &lt;em&gt;Podfile&lt;/em&gt; 的纯文本文件，加上自己需要的库（可以先查找，比如 &lt;em&gt;pod search AFNetworking&lt;/em&gt;）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;platform :ios, &lt;span class="s1"&gt;&amp;#39;8.0&amp;#39;&lt;/span&gt;
use_frameworks!

target &lt;span class="s1"&gt;&amp;#39;MyApp&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;AFNetworking&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.5&amp;#39;&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;ORStackView&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.0&amp;#39;&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;SwiftyJSON&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.1&amp;#39;&lt;/span&gt;
end
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后执行 &lt;em&gt;$ pod install&lt;/em&gt;。
安装完成后，注意打开的是项目的 workspace 文件：&lt;em&gt;$ open App.xcworkspace&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;最后，直接在代码里使用：&lt;em&gt;#import &amp;lt;Reachability/Reachability.h&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pod"&gt;
&lt;h2&gt;创建自己的 Pod&lt;/h2&gt;
&lt;p&gt;在实际项目中，我们会经常修改第三方框架的代码。或者直接共享自己的作品。方法也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pod spec create Peanut
$ vi Peanut.podspec
$ pod spec lint Peanut.podspec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CocoaPods 是基于 Github 开发的，实践上，我们一般将 Github 上第三方的库 fork 过来，然后修改测试，创建并提交自己的 Podspec：&lt;em&gt;pod trunk push NAME.podspec&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;最后在引入的项目中的 Podfile 更新版本，使用 &lt;em&gt;$ pod update --verbose&lt;/em&gt; 更新。&lt;/p&gt;
&lt;p&gt;更详细的开发工作流请参考 &lt;a class="reference external" href="https://guides.cocoapods.org/contributing/contribute-to-cocoapods.html"&gt;The Development Workflow&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;参考资料&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://guides.cocoapods.org/making/specs-and-specs-repo.html"&gt;Specs and the Specs Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>Android 教程第一周</title><link href="https://magicalboy.com/android_coursera_part1_week1.html" rel="alternate"></link><published>2014-12-13T19:20:00+08:00</published><updated>2014-12-13T19:20:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2014-12-13:/android_coursera_part1_week1.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id3"&gt;简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#overview" id="id4"&gt;OverView（概述）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;简介&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Coursera 的课程： &lt;a class="reference external" href="https://class.coursera.org/androidpart1-011/lecture"&gt;Programming Mobile Applications for Android Handheld Systems: Part 1&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;讲师： &lt;em&gt;Dr. Adam Porter&lt;/em&gt; 教授。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="overview"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;OverView（概述）&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;课程主要内容：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;手持系统介绍，未来发展趋势分析，以及这门课程的由来。&lt;/li&gt;
&lt;li&gt;自我介绍（很厉害的一个人物）。以及学习这门课程需要哪些准备。&lt;/li&gt;
&lt;li&gt;课程组织。&lt;/li&gt;
&lt;li&gt;课程主题。分两个部分，每部分为四周。&lt;/li&gt;
&lt;li&gt;Amazone 合作的福利。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id3"&gt;简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#overview" id="id4"&gt;OverView（概述）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;简介&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Coursera 的课程： &lt;a class="reference external" href="https://class.coursera.org/androidpart1-011/lecture"&gt;Programming Mobile Applications for Android Handheld Systems: Part 1&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;讲师： &lt;em&gt;Dr. Adam Porter&lt;/em&gt; 教授。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="overview"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;OverView（概述）&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;课程主要内容：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;手持系统介绍，未来发展趋势分析，以及这门课程的由来。&lt;/li&gt;
&lt;li&gt;自我介绍（很厉害的一个人物）。以及学习这门课程需要哪些准备。&lt;/li&gt;
&lt;li&gt;课程组织。&lt;/li&gt;
&lt;li&gt;课程主题。分两个部分，每部分为四周。&lt;/li&gt;
&lt;li&gt;Amazone 合作的福利。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>Apple WatchKit 下载试玩</title><link href="https://magicalboy.com/apple-watchkit-hello-world.html" rel="alternate"></link><published>2014-11-19T14:50:00+08:00</published><updated>2014-11-19T14:50:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2014-11-19:/apple-watchkit-hello-world.html</id><summary type="html">&lt;p&gt;随着 Xcode 6.2 Beta 的更新发布，苹果公司开放了
&lt;a class="reference external" href="https://developer.apple.com/watchkit/"&gt;WatchKit&lt;/a&gt;，赶紧尝鲜下载玩玩。&lt;/p&gt;
&lt;div class="section" id="watchkit-apps"&gt;
&lt;h2&gt;创建 WatchKit Apps&lt;/h2&gt;
&lt;p&gt;WatchKit 提供三种条件来扩展 iPhone app：WatchKit Apps、Glances 以及
Actionable Notifications。这些类型都必须依赖于已经存在的 iOS
应用而存在。所以在创建新 WatchKit 应用的时候在 Xcode
的创建新项目中是找不到的，而是作为已经存在的 iOS 项目的新 Target
来创建。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[gallery ids=&amp;quot;43255,43249&amp;quot;]&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;创建完成之后整个的项目结构是这样的：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2014/11/watchkit_xcode.png"&gt;&lt;img alt="watchkit_xcode" class="aligncenter wp-image-43250 size-medium" src="http://magicalboy.com/wp-content/uploads/2014/11/watchkit_xcode-300x187.png" style="width: 300px; height: 187px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="apple-watch"&gt;
&lt;h2&gt;Apple Watch模拟器&lt;/h2&gt;
&lt;p&gt;Apple Watch 显示屏是方形的，有两种尺寸：38 mm 和
42mm …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;随着 Xcode 6.2 Beta 的更新发布，苹果公司开放了
&lt;a class="reference external" href="https://developer.apple.com/watchkit/"&gt;WatchKit&lt;/a&gt;，赶紧尝鲜下载玩玩。&lt;/p&gt;
&lt;div class="section" id="watchkit-apps"&gt;
&lt;h2&gt;创建 WatchKit Apps&lt;/h2&gt;
&lt;p&gt;WatchKit 提供三种条件来扩展 iPhone app：WatchKit Apps、Glances 以及
Actionable Notifications。这些类型都必须依赖于已经存在的 iOS
应用而存在。所以在创建新 WatchKit 应用的时候在 Xcode
的创建新项目中是找不到的，而是作为已经存在的 iOS 项目的新 Target
来创建。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[gallery ids=&amp;quot;43255,43249&amp;quot;]&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;创建完成之后整个的项目结构是这样的：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2014/11/watchkit_xcode.png"&gt;&lt;img alt="watchkit_xcode" class="aligncenter wp-image-43250 size-medium" src="http://magicalboy.com/wp-content/uploads/2014/11/watchkit_xcode-300x187.png" style="width: 300px; height: 187px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="apple-watch"&gt;
&lt;h2&gt;Apple Watch模拟器&lt;/h2&gt;
&lt;p&gt;Apple Watch 显示屏是方形的，有两种尺寸：38 mm 和
42mm，对应的分辨率为：312 × 390、272 x 340。可以在 iOS Simulator &amp;gt;
Hardware &amp;gt; External Displays 中找到打开。&lt;/p&gt;
&lt;p&gt;[gallery ids=&amp;quot;43251,43252&amp;quot;]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;应用架构&lt;/h2&gt;
&lt;p&gt;简单体验了一下，Apple Watch 使用的是&amp;nbsp; WatchKit
框架，WKInterfaceController 相当于 UIKit 的
UIViewController，代表一个屏幕上显示的视图。UI元素也和 iOS
的相似，WKInterfaceGroup
用来定义布局，水平还是垂直，还可以定义边距，背景颜色或图片。WKInterfaceTable
可以理解为 UITableView 精简版，用来展示动态内容。WKInterfaceMap
更是精简，只是不可交互的快照，点击会打开 Maps
App。整体运行框架见下图，由图此可见，Apple Watch
应用不能独立存在，必须和&amp;nbsp; iOS App 相互作用运行。&lt;/p&gt;
&lt;p&gt;[gallery ids=&amp;quot;43258,43256&amp;quot;]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/xcode/downloads/"&gt;Xcode - Downloads - Apple
Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/watchkit/"&gt;WatchKit - Apple
Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://devstreaming.apple.com/videos/watch/Getting_Started_With_Watchkit/0720/prog_index.m3u8"&gt;View the Getting Started with WatchKit
video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Apple"></category><category term="Watch"></category></entry><entry><title>从 Baidu 免费下载高质量的 MP3 音乐</title><link href="https://magicalboy.com/download-mp3-music-from-baidu-for-free.html" rel="alternate"></link><published>2014-11-19T09:42:00+08:00</published><updated>2014-11-19T09:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2014-11-19:/download-mp3-music-from-baidu-for-free.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;百度音乐（&lt;a class="reference external" href="http://music.baidu.com/"&gt;http://music.baidu.com/&lt;/a&gt;）大家一定不会陌生，百度音乐盒（&lt;a class="reference external" href="http://play.baidu.com/"&gt;http://play.baidu.com/&lt;/a&gt;）可以在线听音乐，可惜需要
Adobe Flash 支持。而且在线听的音乐质量比不上下载回来听好。如果需要下载
mp3 音乐，Baidu 默认只对标准品质（128 kbps）提供免费下载，下载高质量的
mp3 音乐会提示开通它家的
VIP。在这里我想介绍如何绕过这个限制来下载更高品质的 mp3 音乐。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="baidu_mp3_download" class="aligncenter wp-image-43245 size-full" src="http://magicalboy.com/wp-content/uploads/2014/11/baidu_mp3_download.png" style="width: 785px; height: 337px;" /&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;方法其实很简单，先将 Adobe Flash
插件禁用，从音乐盒里面进行下载，会提示从云音乐下载，点击立即去下载，会跳转到
&lt;strong&gt;http://yinyueyun.baidu.com/?download=&amp;amp;pst=naga&amp;amp;fr …&lt;/strong&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;百度音乐（&lt;a class="reference external" href="http://music.baidu.com/"&gt;http://music.baidu.com/&lt;/a&gt;）大家一定不会陌生，百度音乐盒（&lt;a class="reference external" href="http://play.baidu.com/"&gt;http://play.baidu.com/&lt;/a&gt;）可以在线听音乐，可惜需要
Adobe Flash 支持。而且在线听的音乐质量比不上下载回来听好。如果需要下载
mp3 音乐，Baidu 默认只对标准品质（128 kbps）提供免费下载，下载高质量的
mp3 音乐会提示开通它家的
VIP。在这里我想介绍如何绕过这个限制来下载更高品质的 mp3 音乐。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="baidu_mp3_download" class="aligncenter wp-image-43245 size-full" src="http://magicalboy.com/wp-content/uploads/2014/11/baidu_mp3_download.png" style="width: 785px; height: 337px;" /&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;方法&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;方法其实很简单，先将 Adobe Flash
插件禁用，从音乐盒里面进行下载，会提示从云音乐下载，点击立即去下载，会跳转到
&lt;strong&gt;http://yinyueyun.baidu.com/?download=&amp;amp;pst=naga&amp;amp;fr=&lt;/strong&gt;。如截图，可以选择除无损品质之外的
MP3 文件下载。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="mp3_download_selection" class="aligncenter wp-image-43246 size-full" src="http://magicalboy.com/wp-content/uploads/2014/11/mp3_download_selection.png" style="width: 388px; height: 251px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;不知道这么做会不会有版权的问题&lt;/p&gt;
&lt;/div&gt;
</content><category term="MP3"></category><category term="音乐"></category></entry><entry><title>TestFlight 笔记</title><link href="https://magicalboy.com/testflight.html" rel="alternate"></link><published>2014-10-15T16:34:00+08:00</published><updated>2014-10-15T16:34:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2014-10-15:/testflight.html</id><summary type="html">&lt;div&gt;&lt;p&gt;这里要说的不是 testflightapp.com，而是被苹果收购后，在 iTunes Connect
上面的那个 TestFlight。并且 testflightapp.com 某此功能都被停掉了，比如
Team 的 SDK 已经不能再申请使用。&lt;/p&gt;
&lt;/div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;TestFlight 是什么&lt;/h2&gt;
&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;使用 TestFlight Beta Testing，将预发布版的 app
分发给测试者来收集反馈，做好发布到 App Store 的准备。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight Beta Testing 是可选的，还是可以直接提交 app 给 App Store
审核。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight 是免费的，容易使用，发布到 App Store 之前的改善工具。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight 目前仅支持 …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div&gt;&lt;p&gt;这里要说的不是 testflightapp.com，而是被苹果收购后，在 iTunes Connect
上面的那个 TestFlight。并且 testflightapp.com 某此功能都被停掉了，比如
Team 的 SDK 已经不能再申请使用。&lt;/p&gt;
&lt;/div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;TestFlight 是什么&lt;/h2&gt;
&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;使用 TestFlight Beta Testing，将预发布版的 app
分发给测试者来收集反馈，做好发布到 App Store 的准备。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight Beta Testing 是可选的，还是可以直接提交 app 给 App Store
审核。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight 是免费的，容易使用，发布到 App Store 之前的改善工具。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;p&gt;TestFlight 目前仅支持 iOS 应用，一个开发者用户同时能够对 10 个 apps 启用
TestFlight Beta Testing。&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="itunes-connect"&gt;
&lt;h2&gt;在 iTunes Connect 设置预发布版本应用测试的步骤：&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;如果是新应用则需要先创建。&lt;/li&gt;
&lt;li&gt;生成新的 App Store Distribution profile。&lt;/li&gt;
&lt;li&gt;上传 app 的二进制文件。&lt;/li&gt;
&lt;li&gt;增加应用描述和针对此版本的测试内容。&lt;/li&gt;
&lt;li&gt;发布应用给内部测试者。&lt;/li&gt;
&lt;li&gt;从测试者中获取反馈。&lt;/li&gt;
&lt;li&gt;处理这些反馈，提交新版本。&lt;/li&gt;
&lt;li&gt;完成测试，提交应用到审核，或关闭测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;下面说说以上这些步骤操作的实践过程遇到的问题：&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;直接使用发布证书打包，按平时提交 App Store 的步骤上传要发布的包即可。&lt;/li&gt;
&lt;li&gt;给应用分配内部测试者的时候，必须是 iTunes Connect 用户，而且必须将
Internal Tester 开头打开才能在 Prerelease-&amp;gt;Internal Tester 的 Testers
列表中看到。&lt;/li&gt;
&lt;li&gt;必须至少有一个 Tester，打开 TestFlight Beta Testing 开关才会有效。&lt;/li&gt;
&lt;li&gt;邀请会通过邮件发送，必须在 iOS 设备上操作，会自动打开 TestFlight
来下载安装测试的 app。&lt;/li&gt;
&lt;li&gt;Tester 的状态（&amp;quot;Status&amp;quot;）没有像文档中所说的当用户下载了
app，状态会变成 &amp;quot;Testing&amp;quot;。原文：&amp;quot;When they download the app, their
status changes to Testing&amp;quot;。&lt;/li&gt;
&lt;li&gt;在 TestFlight-&amp;gt;Testers 的列表中，测试者的 Installed Devices
有时会变成空。&lt;/li&gt;
&lt;li&gt;从测试用户获取反馈这个也有问题，测试过程中崩溃的信息没有能够反馈到指定的
Feedback Email。&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;/div&gt;&lt;p&gt;除了 Internal Testers 之外，还有一个 External
Testers。&lt;strong&gt;像普通应用一样需要先提交审核，通过后才会发布测试&lt;/strong&gt;。[STRIKEOUT:可惜目前还未开放，开放之后]最多可以邀请1000个非开发组成员进行测试，值得期待的一个功能。&lt;/p&gt;
&lt;p&gt;总之 TestFlight 被苹果收购之后，随着新版的 iTunes Connect
一起推出，目前应该还在进一步开发整合中，多少会有些小问题，不久应该会有更新。不过，TestFlight
的类似功能 Google Play Developer Console 早就已经实现了哦。&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;p&gt;最后需要注意的是 TestFlight is iOS 8 only!&lt;/p&gt;
&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考连接：&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/app-store/Testflight/"&gt;https://developer.apple.com/app-store/Testflight/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html#//apple_ref/doc/uid/TP40011225-CH35-SW2"&gt;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/BetaTestingTheApp.html#//apple_ref/doc/uid/TP40011225-CH35-SW2&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
</content><category term="App Store"></category><category term="iTunes Connect"></category><category term="TestFlight"></category></entry><entry><title>新版 iTunes Connect 提交 App 遇到的问题</title><link href="https://magicalboy.com/new-itunes-connect.html" rel="alternate"></link><published>2014-09-09T15:33:00+08:00</published><updated>2014-09-09T15:33:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2014-09-09:/new-itunes-connect.html</id><summary type="html">&lt;p&gt;随着 Apple 将其 OS X Yosemite 更新到扁平化风格后，&lt;a class="reference external" href="https://itunesconnect.apple.com"&gt;iTunes
Connect&lt;/a&gt; 终于也被拍扁了。除了 UI
扁平化外，也改进了用户体验，能够快速切换到其它功能，并且新增了
Prerelease 项。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今天在为 app
发布新版本的时候发现，其流程和以往有所不同。增加新版本在一个页面上完成，之后就是使用工具提交要发布app的二进制包。这里有一个小的更新，可以选择账户里面所有的app进行上传。问题是上传完发布包后，点
&amp;quot;Submit for Review&amp;quot; 会有错误提示：&amp;quot;You must choose a build.&amp;quot;。&lt;/div&gt;
&lt;div class="line"&gt;同时又发现没有地方可以选择一个编译版本来发布，是不是令人很郁闷啊。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题原因&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;原来，我们提交上传的包被移到 Prerelease
下了。而且这里也有原因说明：&amp;quot;After builds are uploaded …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;随着 Apple 将其 OS X Yosemite 更新到扁平化风格后，&lt;a class="reference external" href="https://itunesconnect.apple.com"&gt;iTunes
Connect&lt;/a&gt; 终于也被拍扁了。除了 UI
扁平化外，也改进了用户体验，能够快速切换到其它功能，并且新增了
Prerelease 项。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;遇到的问题&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今天在为 app
发布新版本的时候发现，其流程和以往有所不同。增加新版本在一个页面上完成，之后就是使用工具提交要发布app的二进制包。这里有一个小的更新，可以选择账户里面所有的app进行上传。问题是上传完发布包后，点
&amp;quot;Submit for Review&amp;quot; 会有错误提示：&amp;quot;You must choose a build.&amp;quot;。&lt;/div&gt;
&lt;div class="line"&gt;同时又发现没有地方可以选择一个编译版本来发布，是不是令人很郁闷啊。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题原因&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;原来，我们提交上传的包被移到 Prerelease
下了。而且这里也有原因说明：&amp;quot;After builds are uploaded thye will go
through a processing status before they can be
used.&amp;quot;，意思是上传的编译包在能够使用之前必须经过处理状态。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_43221&amp;quot; align=&amp;quot;alignleft&amp;quot;
width=&amp;quot;878&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2014/09/new_itunes_connect_prerelease.png"&gt;&lt;img alt="Prerelease" class="size-full wp-image-43221" src="http://magicalboy.com/wp-content/uploads/2014/09/屏幕快照-2014-09-09-下午3.13.19.png" style="width: 878px; height: 456px;" /&gt;&lt;/a&gt; the new iTunes Connect Prerelease
tab[/caption]&lt;/p&gt;
&lt;p&gt;一旦状态改变会收到邮件通知和问题警告具体说明。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;等，没错，就是等处理状态完成，大概十来分钟左右。有在快下班才发布版本习惯的同学要注意咯。然后就可以在
Build 栏下点击加号来选择版本，点击 &amp;quot;Submit for Review&amp;quot;
来进入最后的发布页面，Prepare for Submission。Advertising Identifier
(IDFA) 和版权等选项在这里选择。最后点提交来完成发布。&lt;/p&gt;
&lt;p&gt;新版本的 iTunes Connect 还可以让用户在新版 app
等待审核的时候修改编辑所有信息，方便开发者。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;2014年09月16日更新&lt;/h2&gt;
&lt;p&gt;更详细的流程请查看：&lt;a class="reference external" href="https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Chapters/About.html"&gt;iTunes Connect Developer
Guide&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Apple"></category><category term="iTunes Connect"></category></entry><entry><title>开始使用 Auto Layout</title><link href="https://magicalboy.com/start-using-auto-layout.html" rel="alternate"></link><published>2014-09-05T11:19:00+08:00</published><updated>2014-09-05T11:19:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2014-09-05:/start-using-auto-layout.html</id><summary type="html">&lt;p&gt;首先看看苹果官网提供的 iOS 设备版本使用统计情况。&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_43216&amp;quot; align=&amp;quot;aligncenter&amp;quot;
width=&amp;quot;205&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2014/09/chart-8-10-14.png"&gt;&lt;img alt="2014年8月24日期间" class="wp-image-43216 size-full" src="http://magicalboy.com/wp-content/uploads/2014/09/chart-8-10-14.png" style="width: 205px; height: 220px;" /&gt;&lt;/a&gt; 91% 的设备正在使用 iOS 7[/caption]&lt;/p&gt;
&lt;p&gt;苹果应用程序商店（App
Store）7天内数据来测量结果：根据2014年8月24日期间测量的数据显示，91%
的设备正在使用 iOS 7.&lt;/p&gt;
&lt;p&gt;Apple 将于9月9日发布新的 iPhone 设备和新的 iOS
8。由于屏幕分辨率多样化，不能再像以前使用绝对布局。苹果的自动布局技术始于
iOS 6， iOS 7 之后也有所改进。从这个统计数据中看到，iOS 6 只占不到
1%，大家可以放心地将项目最低支持到 iOS 6
了。对于开发者来说，幸福是不是来得太突然了啊。&lt;/p&gt;
&lt;p&gt;最新 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;首先看看苹果官网提供的 iOS 设备版本使用统计情况。&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_43216&amp;quot; align=&amp;quot;aligncenter&amp;quot;
width=&amp;quot;205&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2014/09/chart-8-10-14.png"&gt;&lt;img alt="2014年8月24日期间" class="wp-image-43216 size-full" src="http://magicalboy.com/wp-content/uploads/2014/09/chart-8-10-14.png" style="width: 205px; height: 220px;" /&gt;&lt;/a&gt; 91% 的设备正在使用 iOS 7[/caption]&lt;/p&gt;
&lt;p&gt;苹果应用程序商店（App
Store）7天内数据来测量结果：根据2014年8月24日期间测量的数据显示，91%
的设备正在使用 iOS 7.&lt;/p&gt;
&lt;p&gt;Apple 将于9月9日发布新的 iPhone 设备和新的 iOS
8。由于屏幕分辨率多样化，不能再像以前使用绝对布局。苹果的自动布局技术始于
iOS 6， iOS 7 之后也有所改进。从这个统计数据中看到，iOS 6 只占不到
1%，大家可以放心地将项目最低支持到 iOS 6
了。对于开发者来说，幸福是不是来得太突然了啊。&lt;/p&gt;
&lt;p&gt;最新 iOS 设备版本使用统计情况请查看苹果官网：&lt;a class="reference external" href="https://developer.apple.com/support/appstore/"&gt;App Store Distribution -
Support - Apple
Developer&lt;/a&gt;&lt;/p&gt;
</content><category term="iOS"></category><category term="iPhone"></category></entry><entry><title>ADB 使用</title><link href="https://magicalboy.com/adb.html" rel="alternate"></link><published>2014-01-08T00:00:00+08:00</published><updated>2016-09-20T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2014-01-08:/adb.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#adb-mac-os" id="id3"&gt;ADB 找不到设备（Mac OS）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#lg-vs450" id="id4"&gt;LG VS450&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="adb-mac-os"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;ADB 找不到设备（Mac OS）&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;主要针对国内一些小厂商（杂牌机），&lt;a class="reference external" href="https://developer.android.com/tools/device.html#VendorIds"&gt;Google USB Vendor IDs&lt;/a&gt; 列表上没有的设备。&lt;/p&gt;
&lt;p&gt;简单来说，就是将 Vendor ID 添加到 ~/.android/adb_usb.ini，然后重启 adb：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;配置好 adb 环境，开启手机上的 USB Debug 模式。&lt;/li&gt;
&lt;li&gt;将手机通过USB连接到Mac。&lt;/li&gt;
&lt;li&gt;打开系统信息（点击左上的苹果，按住Option会显示），找到如图所示的手机设备，复制厂商ID。&lt;/li&gt;
&lt;li&gt;在终端输入 $ echo 0x1782 &amp;gt;&amp;gt; ~/.android/adb_usb.ini。&lt;/li&gt;
&lt;li&gt;重启 adb …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#adb-mac-os" id="id3"&gt;ADB 找不到设备（Mac OS）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#lg-vs450" id="id4"&gt;LG VS450&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id5"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="adb-mac-os"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;ADB 找不到设备（Mac OS）&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;主要针对国内一些小厂商（杂牌机），&lt;a class="reference external" href="https://developer.android.com/tools/device.html#VendorIds"&gt;Google USB Vendor IDs&lt;/a&gt; 列表上没有的设备。&lt;/p&gt;
&lt;p&gt;简单来说，就是将 Vendor ID 添加到 ~/.android/adb_usb.ini，然后重启 adb：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;配置好 adb 环境，开启手机上的 USB Debug 模式。&lt;/li&gt;
&lt;li&gt;将手机通过USB连接到Mac。&lt;/li&gt;
&lt;li&gt;打开系统信息（点击左上的苹果，按住Option会显示），找到如图所示的手机设备，复制厂商ID。&lt;/li&gt;
&lt;li&gt;在终端输入 $ echo 0x1782 &amp;gt;&amp;gt; ~/.android/adb_usb.ini。&lt;/li&gt;
&lt;li&gt;重启 adb：$ ./adb kill-server ; ./adb devices。&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="厂商ID" src="images/usb_vender_id.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ./adb kill-server &lt;span class="p"&gt;;&lt;/span&gt; ./adb devices
* daemon not running. starting it now on port &lt;span class="m"&gt;5037&lt;/span&gt; *
* daemon started successfully *
List of devices attached
&lt;span class="m"&gt;19761202&lt;/span&gt;    device
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="lg-vs450"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;LG VS450&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;请选择 &lt;cite&gt;Internet connection via modeem&lt;/cite&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;参考&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/7135999/adb-not-finding-my-device-phone-macos-x/7136003#7136003"&gt;https://stackoverflow.com/questions/7135999/adb-not-finding-my-device-phone-macos-x/7136003#7136003&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/a/24317563"&gt;http://stackoverflow.com/a/24317563&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Android"></category></entry><entry><title>Xcode 5.0 下载，安装，使用</title><link href="https://magicalboy.com/xcode-5-0.html" rel="alternate"></link><published>2013-09-30T12:02:00+08:00</published><updated>2013-09-30T12:02:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-09-30:/xcode-5-0.html</id><summary type="html">&lt;p&gt;Xcode 5.0 是一个大版本，改变自然也多，支持我的 iPhone5s 和 iOS7.0
开发必须的工具。另外也支持 64bit app 开发，还有支持 OS X Mavericks
开发，TDD，Continuous Integration，自动化配置等。改进方面有界面 Flat
化，可视化调试，静态分析，代码管理等。 具体请见 &lt;a class="reference external" href="https://developer.apple.com/technologies/tools/whats-new.html"&gt;What’s New in Xcode
5&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Xcode 5.0 下载&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Xcode 5.0 正式版发布于2013年9月18日（美国当地时间），可以从Mac
Store上下载安装，免费。前提条件上是 …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Xcode 5.0 是一个大版本，改变自然也多，支持我的 iPhone5s 和 iOS7.0
开发必须的工具。另外也支持 64bit app 开发，还有支持 OS X Mavericks
开发，TDD，Continuous Integration，自动化配置等。改进方面有界面 Flat
化，可视化调试，静态分析，代码管理等。 具体请见 &lt;a class="reference external" href="https://developer.apple.com/technologies/tools/whats-new.html"&gt;What’s New in Xcode
5&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Xcode 5.0 下载&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Xcode 5.0 正式版发布于2013年9月18日（美国当地时间），可以从Mac
Store上下载安装，免费。前提条件上是，系统版本必须 Mountain Lion 10.8.5
及以上，否则：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="Xcode5.0_OSX10.8.5_Error" class="alignleft size-full wp-image-43202" src="http://magicalboy.com/wp-content/uploads/2013/09/Xcode5.0_OSX10.8.5_Error.png" style="width: 749px; height: 227px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;如果想保留之前旧版本的Xcode，比如Xcode4.6，建议下载DMG。下载地址：&lt;a class="reference external" href="https://developer.apple.com/downloads/index"&gt;https://developer.apple.com/downloads/index&lt;/a&gt;.action#。需要登录。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="Xcode5.0_dmg" class="alignleft size-full wp-image-43201" src="http://magicalboy.com/wp-content/uploads/2013/09/Xcode5.0_dmg.png" style="width: 851px; height: 298px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Xcode 5.0 安装&lt;/h2&gt;
&lt;p&gt;下载好DMG安装包后，打开会发现 Xcode 以 app
的形式发布，直接复制到本地磁盘即可，比如 ~/Development 下，与之前版本的
Xcode 路径不同即可。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;Xcode 5.0 使用&lt;/h2&gt;
&lt;p&gt;这里说一下初步使用情况。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Code Signing 增加了 Provisioning
Profile，真机调试的时候要注意先选择对应的Profile，再选选
Identify，否则会找不到。&lt;/li&gt;
&lt;li&gt;旧项目升级问题，如果项目代码用到 SVN 1.7 之前版本来管理，会提示升级到
1.7，升级后，旧的Xcode就识别不了啦。&lt;/li&gt;
&lt;li&gt;与旧项目兼容问题，主要是指项目中的 XIB 文件，在 Xcode 5.0
中会自动升级，只要你打开过。升级后的 XIB 在旧的 Xcode
打不开，重要的是有些 XIB 升级后，布局乱了，主要是坐标混乱。。&lt;/li&gt;
&lt;li&gt;不支持 4.3 模拟器，项目Target却允许支持到
4.3，估计还支持真机调试（未测试）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;技术升级太快，一下子就 iOS 7, Xcode 5
了，得勇于面对新事物，快速学习新的知识才不被落后啊，一起努力吧，求交流。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iPhone"></category><category term="iPhone5s"></category><category term="Xcode"></category><category term="Xcode5"></category></entry><entry><title>打波路线</title><link href="https://magicalboy.com/ball.html" rel="alternate"></link><published>2013-08-27T09:52:00+08:00</published><updated>2013-08-27T09:52:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-08-27:/ball.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://maps.google.com/maps?f=d&amp;amp;source=embed&amp;amp;saddr=%E4%B8%AD%E5%9B%BD%E5%B9%BF%E4%B8%9C%E7%9C%81%E6%B7%B1%E5%9C%B3%E5%8D%97%E5%B1%B1%E5%8C%BA%E7%B2%A4%E6%B5%B7%E9%97%A8%E6%9D%91&amp;amp;daddr=22.53132913890972,114.00854341685772+to:22.534603704503745,114.0135433897376+to:22.53820272608151,114.02827039361+to:%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2,+%E4%B8%AD%E5%9B%BD%E5%B9%BF%E4%B8%9C%E7%9C%81%E6%B7%B1%E5%9C%B3%E5%B8%82%E7%A6%8F%E7%94%B0%E5%8C%BA%E6%96%B0%E9%97%BB%E8%B7%AF74%E5%8F%B7%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2+%E9%82%AE%E6%94%BF%E7%BC%96%E7%A0%81:+518034&amp;amp;geocode=FYfOVwEdxZrKBinxAw6eGu4DNDH6fvKFfoWzzQ%3BFQHNVwEd36HLBilnj8I_fPEDNDFg48OE4Vh--g%3BFcvZVwEdZ7XLBikXnvxv2PMDNDH8qOBLFv_FCA%3BFdrnVwEd7u7LBinxVIzV5vMDNDGh7IjsMXQJGQ%3BFSL1VwEdPSXMBim97E6v8PMDNDGmCuRJKHgX2Q&amp;amp;aq=0&amp;amp;oq=%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2&amp;amp;sll=22.536936,114.026703&amp;amp;sspn=0.006778,0.011362&amp;amp;hl=zh&amp;amp;dirflg=w&amp;amp;mra=dpe&amp;amp;mrsp=3&amp;amp;sz=17&amp;amp;via=1,2,3&amp;amp;ie=UTF8&amp;amp;ll=22.536609,114.022304&amp;amp;spn=0.006778,0.011362&amp;amp;t=m"&gt;查看大图&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://maps.google.com/maps?f=d&amp;amp;source=embed&amp;amp;saddr=%E4%B8%AD%E5%9B%BD%E5%B9%BF%E4%B8%9C%E7%9C%81%E6%B7%B1%E5%9C%B3%E5%8D%97%E5%B1%B1%E5%8C%BA%E7%B2%A4%E6%B5%B7%E9%97%A8%E6%9D%91&amp;amp;daddr=22.53132913890972,114.00854341685772+to:22.534603704503745,114.0135433897376+to:22.53820272608151,114.02827039361+to:%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2,+%E4%B8%AD%E5%9B%BD%E5%B9%BF%E4%B8%9C%E7%9C%81%E6%B7%B1%E5%9C%B3%E5%B8%82%E7%A6%8F%E7%94%B0%E5%8C%BA%E6%96%B0%E9%97%BB%E8%B7%AF74%E5%8F%B7%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2+%E9%82%AE%E6%94%BF%E7%BC%96%E7%A0%81:+518034&amp;amp;geocode=FYfOVwEdxZrKBinxAw6eGu4DNDH6fvKFfoWzzQ%3BFQHNVwEd36HLBilnj8I_fPEDNDFg48OE4Vh--g%3BFcvZVwEdZ7XLBikXnvxv2PMDNDH8qOBLFv_FCA%3BFdrnVwEd7u7LBinxVIzV5vMDNDGh7IjsMXQJGQ%3BFSL1VwEdPSXMBim97E6v8PMDNDGmCuRJKHgX2Q&amp;amp;aq=0&amp;amp;oq=%E5%92%8C%E5%B9%B3%E5%8C%BB%E9%99%A2&amp;amp;sll=22.536936,114.026703&amp;amp;sspn=0.006778,0.011362&amp;amp;hl=zh&amp;amp;dirflg=w&amp;amp;mra=dpe&amp;amp;mrsp=3&amp;amp;sz=17&amp;amp;via=1,2,3&amp;amp;ie=UTF8&amp;amp;ll=22.536609,114.022304&amp;amp;spn=0.006778,0.011362&amp;amp;t=m"&gt;查看大图&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>iOS 平铺图像</title><link href="https://magicalboy.com/ios-pattern-image.html" rel="alternate"></link><published>2013-08-05T14:38:00+08:00</published><updated>2013-08-05T14:38:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-08-05:/ios-pattern-image.html</id><summary type="html">&lt;p&gt;iOS SDK 里面有没有类似于 HTML 中的 background-repeat
属性，使图像重复平铺呢？&lt;/p&gt;
&lt;p&gt;我大苹果当然有啦，那就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;(UIColor *)colorWithPatternImage:(UIImage *)image&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用也很简单：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt;viewDidLoad &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;super viewDidLoad&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  UIImage *patternImage &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;UIImage imageNamed:&amp;#64;&lt;span class="s2"&gt;&amp;quot;pattern.png&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  self.view.backgroundColor &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;UIColor colorWithPatternImage:patternImage&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;平铺效果：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image0" src="http://www.bobmccune.com/wp-content/uploads/2011/03/pattern_to_view.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;平铺可以减少图片资源所占用的app空间，重复利用资源。&lt;/p&gt;
&lt;p&gt;原文：&lt;a class="reference external" href="http://www.bobmccune.com/2011/03/08/ios-101-pattern-images/"&gt;《iOS 101: Pattern
Images》&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;iOS SDK 里面有没有类似于 HTML 中的 background-repeat
属性，使图像重复平铺呢？&lt;/p&gt;
&lt;p&gt;我大苹果当然有啦，那就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;(UIColor *)colorWithPatternImage:(UIImage *)image&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用也很简单：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt;viewDidLoad &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;super viewDidLoad&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  UIImage *patternImage &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;UIImage imageNamed:&amp;#64;&lt;span class="s2"&gt;&amp;quot;pattern.png&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  self.view.backgroundColor &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;UIColor colorWithPatternImage:patternImage&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;平铺效果：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image0" src="http://www.bobmccune.com/wp-content/uploads/2011/03/pattern_to_view.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;平铺可以减少图片资源所占用的app空间，重复利用资源。&lt;/p&gt;
&lt;p&gt;原文：&lt;a class="reference external" href="http://www.bobmccune.com/2011/03/08/ios-101-pattern-images/"&gt;《iOS 101: Pattern
Images》&lt;/a&gt;&lt;/p&gt;
</content><category term="iOS"></category></entry><entry><title>CoreData 轻量更新</title><link href="https://magicalboy.com/coredata-auto-light-migration.html" rel="alternate"></link><published>2013-07-29T11:35:00+08:00</published><updated>2013-07-29T11:35:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-07-29:/coredata-auto-light-migration.html</id><summary type="html">&lt;p&gt;项目中使用了CoreData框架，肯定会有更新Model结构后发生应用崩溃的情况：&lt;/p&gt;
&lt;blockquote&gt;
*** Terminating app due to uncaught exception
'NSInternalInconsistencyException', reason: 'This
NSPersistentStoreCoordinator has no persistent stores. It cannot
perform a save operation.'&lt;/blockquote&gt;
&lt;p&gt;Apple
提供有关的专题文档来说明如何处理这一情况（详见后面的参考连接），这里简单提供快速解决方法。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;设置数据库的自动迁移选项。（具体见注释说明）&lt;/li&gt;
&lt;li&gt;增加Model版本，修改Model。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;参考连接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CoreDataVersioning/Articles/Introduction.html"&gt;Core Data Model Versioning and Data Migration Programming
Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://brainwashinc.wordpress.com/2010/01/18/iphone-coredata-automatic-light-migration/"&gt;iPhone CoreData Automatic Light
Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1018155/what-do-i-have-to-do-to-get-core-data-to-automatically-migrate-models"&gt;What do I have …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;项目中使用了CoreData框架，肯定会有更新Model结构后发生应用崩溃的情况：&lt;/p&gt;
&lt;blockquote&gt;
*** Terminating app due to uncaught exception
'NSInternalInconsistencyException', reason: 'This
NSPersistentStoreCoordinator has no persistent stores. It cannot
perform a save operation.'&lt;/blockquote&gt;
&lt;p&gt;Apple
提供有关的专题文档来说明如何处理这一情况（详见后面的参考连接），这里简单提供快速解决方法。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;设置数据库的自动迁移选项。（具体见注释说明）&lt;/li&gt;
&lt;li&gt;增加Model版本，修改Model。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;参考连接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/CoreDataVersioning/Articles/Introduction.html"&gt;Core Data Model Versioning and Data Migration Programming
Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://brainwashinc.wordpress.com/2010/01/18/iphone-coredata-automatic-light-migration/"&gt;iPhone CoreData Automatic Light
Migration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1018155/what-do-i-have-to-do-to-get-core-data-to-automatically-migrate-models"&gt;What do I have to do to get Core Data to automatically migrate
models?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="CoreData"></category><category term="iOS"></category></entry><entry><title>禁用 Firefox 自动增加 WWW</title><link href="https://magicalboy.com/disable-firefox-auto-adding-www.html" rel="alternate"></link><published>2013-06-25T10:49:00+08:00</published><updated>2013-06-25T10:49:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-06-25:/disable-firefox-auto-adding-www.html</id><summary type="html">&lt;p&gt;每次输入一个玉米，Firefox
都会自动为你输入的玉米前增加www前缀。比如输入本站玉米
magicalboy.com，回车之后请求的地址就变成了 www.magicalboy.com。&lt;/p&gt;
&lt;p&gt;如何取消这一功能，输入 &lt;a class="reference external" href="about:config%20"&gt;about:config&lt;/a&gt;，然后搜索
fixup，双击 browser.fixup.alternate.enabled 将其默认值改为 false 即可。&lt;/p&gt;
&lt;p&gt;具体参考官网资料：&lt;a class="reference external" href="https://support.mozilla.org/en-US/kb/search-web-address-bar?redirectlocale=en-US&amp;amp;redirectslug=Location+bar+search#w_domain-guessing"&gt;Domain
Guessing&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;每次输入一个玉米，Firefox
都会自动为你输入的玉米前增加www前缀。比如输入本站玉米
magicalboy.com，回车之后请求的地址就变成了 www.magicalboy.com。&lt;/p&gt;
&lt;p&gt;如何取消这一功能，输入 &lt;a class="reference external" href="about:config%20"&gt;about:config&lt;/a&gt;，然后搜索
fixup，双击 browser.fixup.alternate.enabled 将其默认值改为 false 即可。&lt;/p&gt;
&lt;p&gt;具体参考官网资料：&lt;a class="reference external" href="https://support.mozilla.org/en-US/kb/search-web-address-bar?redirectlocale=en-US&amp;amp;redirectslug=Location+bar+search#w_domain-guessing"&gt;Domain
Guessing&lt;/a&gt;&lt;/p&gt;
</content><category term="Firefox"></category></entry><entry><title>Mountain Lion 升级到 10.8.4 后每次运行 iOS Simulator 必崩</title><link href="https://magicalboy.com/10-8-4-and-the-ios-simulator.html" rel="alternate"></link><published>2013-06-21T14:18:00+08:00</published><updated>2013-06-21T14:18:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-06-21:/10-8-4-and-the-ios-simulator.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;最近遇到一个比较Egg Pain的问题，某日无意重启了一下顺便更新升级了
Mountain Lion 到 10.8.4，之后每次在 Xcode 4.6 重复运行 iOS
Simulator，app 必崩！&lt;/p&gt;
&lt;p&gt;好吧，开始我也以为是项目问题，一直对码农的代码质量没什么信心。后来在
Xcode 新建一个 Single App
模板的空项目发现问题仍然存在。什么强制清理，重启啊都试过了无果。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;这时候应该 Google 一下了，结果找到一篇 &lt;a class="reference external" href="http://www.tuaw.com/2013/06/05/devjuice-10-8-4-and-the-ios-simulator/"&gt;DevJuice: 10.8.4 and the iOS
Simulator | TUAW - The Unofficial Apple
Weblog&lt;/a&gt;，按上面所说的将
Debugger …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;最近遇到一个比较Egg Pain的问题，某日无意重启了一下顺便更新升级了
Mountain Lion 到 10.8.4，之后每次在 Xcode 4.6 重复运行 iOS
Simulator，app 必崩！&lt;/p&gt;
&lt;p&gt;好吧，开始我也以为是项目问题，一直对码农的代码质量没什么信心。后来在
Xcode 新建一个 Single App
模板的空项目发现问题仍然存在。什么强制清理，重启啊都试过了无果。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;这时候应该 Google 一下了，结果找到一篇 &lt;a class="reference external" href="http://www.tuaw.com/2013/06/05/devjuice-10-8-4-and-the-ios-simulator/"&gt;DevJuice: 10.8.4 and the iOS
Simulator | TUAW - The Unofficial Apple
Weblog&lt;/a&gt;，按上面所说的将
Debugger 由 LLDB 改为 GDB，问题解决：&lt;/p&gt;
&lt;blockquote&gt;
Update your scheme by selecting Product &amp;gt; Scheme &amp;gt; Edit Scheme, and
choose the GDB debugger for your debug scheme.&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>iOS7 初体验</title><link href="https://magicalboy.com/ios7-first-experience.html" rel="alternate"></link><published>2013-06-12T12:48:00+08:00</published><updated>2013-06-12T12:48:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-06-12:/ios7-first-experience.html</id><summary type="html">&lt;p&gt;今年苹果 WWDC 2013 上推出了新的iOS系统
iOS7。最大的特点是UI全新设计，向扁平风格靠齐。看得还不过瘾，于是上官网下载了
iOS 7 beta 来体验一番。&lt;/p&gt;
&lt;div class="section" id="ios-7-beta"&gt;
&lt;h2&gt;iOS 7 beta&lt;/h2&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Posted: June 10, 2013&lt;/div&gt;
&lt;div class="line"&gt;Build: 11A4372q&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;文件名：ios_7_beta__iphone_5_model_a1429__11a4372q.dmg&lt;/div&gt;
&lt;div class="line"&gt;打开后：iPhone5,2_7.0_11A4372q_Restore.ipsw&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;根据自己的机型下载相应的固件，如何&lt;a class="reference external" href="https://support.apple.com/kb/HT3939?viewlocale=zh_TW&amp;amp;locale=zh_TW#iPhone5"&gt;辨識 iPhone
機型&lt;/a&gt;，还有&lt;a class="reference external" href="https://www.apple.com/iphone/LTE/"&gt;这里&lt;/a&gt;，LTE没有中国大陆，只有HK。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;升级过程&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;安装过程很简单，打开iTunes
11，按Shift+恢复（Mac上为Option+恢复）打开相应的 ipsw
文件即可 …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今年苹果 WWDC 2013 上推出了新的iOS系统
iOS7。最大的特点是UI全新设计，向扁平风格靠齐。看得还不过瘾，于是上官网下载了
iOS 7 beta 来体验一番。&lt;/p&gt;
&lt;div class="section" id="ios-7-beta"&gt;
&lt;h2&gt;iOS 7 beta&lt;/h2&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Posted: June 10, 2013&lt;/div&gt;
&lt;div class="line"&gt;Build: 11A4372q&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;文件名：ios_7_beta__iphone_5_model_a1429__11a4372q.dmg&lt;/div&gt;
&lt;div class="line"&gt;打开后：iPhone5,2_7.0_11A4372q_Restore.ipsw&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;根据自己的机型下载相应的固件，如何&lt;a class="reference external" href="https://support.apple.com/kb/HT3939?viewlocale=zh_TW&amp;amp;locale=zh_TW#iPhone5"&gt;辨識 iPhone
機型&lt;/a&gt;，还有&lt;a class="reference external" href="https://www.apple.com/iphone/LTE/"&gt;这里&lt;/a&gt;，LTE没有中国大陆，只有HK。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;升级过程&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;安装过程很简单，打开iTunes
11，按Shift+恢复（Mac上为Option+恢复）打开相应的 ipsw
文件即可，手机端不用操作，开着就行。但建议先备份资料，即使升级后不会资料不会自动删除。&lt;/div&gt;
&lt;div class="line"&gt;[gallery ids=&amp;quot;43132,43166,43133&amp;quot;]&lt;/div&gt;
&lt;div class="line"&gt;这里我遇到一个问题，升级完成后卡在这个Hello界面，点击无反应，只能按电源键打开或关闭屏幕。后来只好使用iTunes恢复之前配置，自动重启后跳过这些设置。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;多图欣赏&lt;/h2&gt;
&lt;p&gt;[gallery
ids=&amp;quot;43150,43153,43157,43134,43145,43135,43138,43139,43162,43140,43141,43142,43143,43144,43146,43147,43148,43149,43151,43152,43159,43154,43155,43156,43158,43160,43161&amp;quot;]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;嗯，感觉还行吧，以上就是初步玩了下截的图，有很多细节没来得及写上。操作总体来说很流畅，暂未出现卡顿现像。但在后台播放音乐同时，在App
Store输入搜索时出来一次自动恢复，即恢复到上锁的界面，一下子的事情。这是iOS7的第一个Beta版本，Bug
肯定会有不少的，想玩的同学要做好心理准备。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="iOS7"></category><category term="iPhone"></category></entry><entry><title>Samsung GT-I9082 刷机（多图）</title><link href="https://magicalboy.com/samsung-gt-i9082-rom.html" rel="alternate"></link><published>2013-05-18T13:16:00+08:00</published><updated>2013-05-18T13:16:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-05-18:/samsung-gt-i9082-rom.html</id><summary type="html">&lt;p&gt;朋友在公司手机拍卖上入了一台i9082，嗯，这是一台5&amp;quot;屏，分辨率为480 x 800
(WVGA)的手机，&lt;a class="reference external" href="http://www.samsung.com/tw/support/model/GT-I9082EWABRI-techspecs"&gt;详细参数点这里&lt;/a&gt;。。当然这手机不是为我而买的，我只负责将里面的
Android OS 刷掉换为有中文语言的。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用 odin3 刷机，旧版本会报 &amp;quot;There is no memory&amp;quot; 错误。&lt;/div&gt;
&lt;div class="line"&gt;刷的是台版的 ROM（GT-I9082-BRI-I9082ZTAMA5），网上随便找的。。&lt;/div&gt;
&lt;div class="line"&gt;不说了，详细看图，三星的塑料机v5&lt;/div&gt;
&lt;div class="line"&gt;[gallery
ids=&amp;quot;43113,43114,43115,43116,43117,43118,43119,43120,43121,43122,43123,43124&amp;quot;]&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;朋友在公司手机拍卖上入了一台i9082，嗯，这是一台5&amp;quot;屏，分辨率为480 x 800
(WVGA)的手机，&lt;a class="reference external" href="http://www.samsung.com/tw/support/model/GT-I9082EWABRI-techspecs"&gt;详细参数点这里&lt;/a&gt;。。当然这手机不是为我而买的，我只负责将里面的
Android OS 刷掉换为有中文语言的。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用 odin3 刷机，旧版本会报 &amp;quot;There is no memory&amp;quot; 错误。&lt;/div&gt;
&lt;div class="line"&gt;刷的是台版的 ROM（GT-I9082-BRI-I9082ZTAMA5），网上随便找的。。&lt;/div&gt;
&lt;div class="line"&gt;不说了，详细看图，三星的塑料机v5&lt;/div&gt;
&lt;div class="line"&gt;[gallery
ids=&amp;quot;43113,43114,43115,43116,43117,43118,43119,43120,43121,43122,43123,43124&amp;quot;]&lt;/div&gt;
&lt;/div&gt;
</content><category term="Android"></category><category term="刷机"></category></entry><entry><title>ASIHTTPRequest 数据压缩使用</title><link href="https://magicalboy.com/asihttprequest-gzip-decompression.html" rel="alternate"></link><published>2013-05-09T13:33:00+08:00</published><updated>2013-05-09T13:33:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-05-09:/asihttprequest-gzip-decompression.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ASIHTTPRequest的官网上声称，其原作者已经不再对其进行维护和更新了，但
ASIHTTPRequest 仍然是众多码农的首选 HTTP Request
框架。ASI的特点有很多：容易使用，功能强大，文档齐全，整合了基于 REST
(GET / POST / PUT / DELETE)
服务，下载进度，断点续传，缓存机制等等。更多特性请参考
&lt;a class="reference external" href="http://allseeing-i.com/ASIHTTPRequest/"&gt;http://allseeing-i.com/ASIHTTPRequest/&lt;/a&gt;。这篇文章主要介绍ASI的数据压缩使用。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="asihttprequestgzip"&gt;
&lt;h2&gt;在ASIHTTPRequest中使用gzip&lt;/h2&gt;
&lt;pre class="code shell literal-block"&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;IBAction&lt;span class="o"&gt;)&lt;/span&gt;grabURL:&lt;span class="o"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;)&lt;/span&gt;sender
&lt;span class="o"&gt;{&lt;/span&gt;
  NSURL *url &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSURL URLWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;http://www.diaoser.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  ASIHTTPRequest *request &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;ASIHTTPRequest requestWithURL:url&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  // 默认为YES, 你可以设定它为NO来禁用gzip压缩
  &lt;span class="o"&gt;[&lt;/span&gt;request setAllowCompressedResponse …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ASIHTTPRequest的官网上声称，其原作者已经不再对其进行维护和更新了，但
ASIHTTPRequest 仍然是众多码农的首选 HTTP Request
框架。ASI的特点有很多：容易使用，功能强大，文档齐全，整合了基于 REST
(GET / POST / PUT / DELETE)
服务，下载进度，断点续传，缓存机制等等。更多特性请参考
&lt;a class="reference external" href="http://allseeing-i.com/ASIHTTPRequest/"&gt;http://allseeing-i.com/ASIHTTPRequest/&lt;/a&gt;。这篇文章主要介绍ASI的数据压缩使用。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="asihttprequestgzip"&gt;
&lt;h2&gt;在ASIHTTPRequest中使用gzip&lt;/h2&gt;
&lt;pre class="code shell literal-block"&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;IBAction&lt;span class="o"&gt;)&lt;/span&gt;grabURL:&lt;span class="o"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;)&lt;/span&gt;sender
&lt;span class="o"&gt;{&lt;/span&gt;
  NSURL *url &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSURL URLWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;http://www.diaoser.com&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  ASIHTTPRequest *request &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;ASIHTTPRequest requestWithURL:url&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  // 默认为YES, 你可以设定它为NO来禁用gzip压缩
  &lt;span class="o"&gt;[&lt;/span&gt;request setAllowCompressedResponse:YES&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;request startSynchronous&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  BOOL *dataWasCompressed &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request isResponseCompressed&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 响应是否被gzip压缩过？
  NSData *compressedResponse &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request rawResponseData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 压缩的数据
  NSData *uncompressedData &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request responseData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 解压缩后的数据
  NSString *response &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request responseString&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; // 解压缩后的字符串
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;当allowCompressedResponse
设置为YES时，ASIHTTPRequest将向request中增加一个Accept-Encoding头，表示我们可以接收gzip压缩过的数据。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gzip"&gt;
&lt;h2&gt;手动解压gzip数据&lt;/h2&gt;
&lt;p&gt;有时需要对压缩的gzip经过解密处理才能进行解压缩，这时候必须由自己来处理解压工作。根据ASI的更新日志，我们可以使用ASIDataCompressor和ASIDataDecompressor进行gzip格式的数据压缩和解压。&lt;/p&gt;
&lt;blockquote&gt;
As part of the work on this, I’ve taken the gzip-functionality out
of ASIHTTPRequest and put it into two separate helper classes,
ASIDataCompressor and ASIDataDecompressor.&lt;/blockquote&gt;
&lt;p&gt;具体使用方法：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSData *uncompressData &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([&lt;/span&gt;request isResponseCompressed&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        NSData *rawData &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request rawResponseData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        // 解密处理
        NSData *newData &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;self decryptionData:rawData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        // 解压处理
        NSError *error &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nv"&gt;uncompressData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;ASIDataDecompressor uncompressData:newData error:&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;error&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;//&lt;span class="o"&gt;[&lt;/span&gt;NSData uncompressZippedData:newData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;error&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            DLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;uncompressData error:%&amp;#64;&amp;quot;&lt;/span&gt;, error.localizedDescription&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;uncompressData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;request responseData&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="gziprequest"&gt;
&lt;h2&gt;使用gzip压缩request数据&lt;/h2&gt;
&lt;p&gt;1.0.3版本的新特性就是gzip压缩request数据。使用这个特性，你可以通过设置shouldCompressRequestBody
为YES来使你的程序压缩POST/PUT的内容，默认值为NO。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;查看ASIHTTPRequest版本&lt;/h2&gt;
&lt;pre class="code shell literal-block"&gt;
// 一般在 ASIHTTPRequest.m 第26, 27行，内容如下
// Automatically &lt;span class="nb"&gt;set&lt;/span&gt; on build
NSString *ASIHTTPRequestVersion &lt;span class="o"&gt;=&lt;/span&gt; &amp;#64;&lt;span class="s2"&gt;&amp;quot;v1.8.1-61 2011-09-19&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;引用资料&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/pokeb/asi-http-request"&gt;pokeb/asi-http-request ·
GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://allseeing-i.com/ASIHTTPRequest/Changelog"&gt;ASIHTTPRequest
Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.dreamingwish.com/dream-2011/asihttprequest-data-compression.html"&gt;ASIHTTPRequest-数据压缩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="ASI"></category><category term="ASIHTTPRequest"></category><category term="gzip"></category></entry><entry><title>一直担心的问题发生了</title><link href="https://magicalboy.com/webfaction-is-good.html" rel="alternate"></link><published>2013-04-22T20:25:00+08:00</published><updated>2013-04-22T20:25:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-04-22:/webfaction-is-good.html</id><summary type="html">&lt;p&gt;一直担心的问题发生了，所有在同一服务器（Webfaction）托管下的网站访问异常，具体情况如下。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;症状表现&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;网站请求超时&lt;/li&gt;
&lt;li&gt;请求部分数据断开，只能看到标题了&lt;/li&gt;
&lt;li&gt;请求部分数据断开，加载到内容了，但没css样式&lt;/li&gt;
&lt;li&gt;刚好请求完就断开，再访问都是请求超时&lt;/li&gt;
&lt;li&gt;首次ping玉米正常，打开网站后再去ping，超时&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;迁移主机，之前迁移过一次，USA2Asia&lt;/li&gt;
&lt;li&gt;购买独立IP，5美刀一个月。这方法不错，但超出目前经济预算&lt;/li&gt;
&lt;li&gt;联系主机提供商，请求更换IP。目前就是采用这途径解决了问题&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;Webfaction 的员工态度很好的，效率高，至少令本 diaoser
感受到了什么是人性化服务。引用几段他们的回复：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please note that this is not an issue on our end. We will,
nonetheless …&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;一直担心的问题发生了，所有在同一服务器（Webfaction）托管下的网站访问异常，具体情况如下。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;症状表现&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;网站请求超时&lt;/li&gt;
&lt;li&gt;请求部分数据断开，只能看到标题了&lt;/li&gt;
&lt;li&gt;请求部分数据断开，加载到内容了，但没css样式&lt;/li&gt;
&lt;li&gt;刚好请求完就断开，再访问都是请求超时&lt;/li&gt;
&lt;li&gt;首次ping玉米正常，打开网站后再去ping，超时&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;迁移主机，之前迁移过一次，USA2Asia&lt;/li&gt;
&lt;li&gt;购买独立IP，5美刀一个月。这方法不错，但超出目前经济预算&lt;/li&gt;
&lt;li&gt;联系主机提供商，请求更换IP。目前就是采用这途径解决了问题&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;Webfaction 的员工态度很好的，效率高，至少令本 diaoser
感受到了什么是人性化服务。引用几段他们的回复：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please note that this is not an issue on our end. We will,
nonetheless, do everything we can to help you resolve the problem.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;If you need further assistance then please do not hesitate to
contact us again.&lt;/p&gt;
&lt;p&gt;Sincerely,&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Valentin I.&lt;/div&gt;
&lt;div class="line"&gt;WebFaction Support&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="webfaction"></category><category term="请求超时"></category></entry><entry><title>xcodebuild 命令用法</title><link href="https://magicalboy.com/xcodebuild-usage.html" rel="alternate"></link><published>2013-04-18T15:35:00+08:00</published><updated>2013-04-18T15:35:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-04-18:/xcodebuild-usage.html</id><summary type="html">&lt;p&gt;xcodebuild 是什么，&lt;tt class="docutils literal"&gt;$ man xcodebuild&lt;/tt&gt;：&lt;/p&gt;
&lt;blockquote&gt;
xcodebuild -- build Xcode projects and workspaces&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;xcodebuild 基本使用&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看帮助：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-help&lt;/span&gt;&lt;/tt&gt;，或者随便输入一个不存在的选项：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-fuck&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看用法：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-usage&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看已安装 sdk 列表：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-showsdks&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看当前 Xcode 版本：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-version&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看 xcodebuild 目录：&lt;tt class="docutils literal"&gt;$ &lt;span class="pre"&gt;xcode-select&lt;/span&gt; &lt;span class="pre"&gt;-print-path&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看项目配置：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-showBuildSettings&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;编译项目：&lt;tt class="docutils literal"&gt;$ xcodebuild&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;xcodebuild 具体用法&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;编译普通项目：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
xcodebuild -configuration &lt;span class="s2"&gt;&amp;quot;Release&amp;quot;&lt;/span&gt; -arch &lt;span class="s2"&gt;&amp;quot;armv7 armv7s …&lt;/span&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;xcodebuild 是什么，&lt;tt class="docutils literal"&gt;$ man xcodebuild&lt;/tt&gt;：&lt;/p&gt;
&lt;blockquote&gt;
xcodebuild -- build Xcode projects and workspaces&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;xcodebuild 基本使用&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看帮助：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-help&lt;/span&gt;&lt;/tt&gt;，或者随便输入一个不存在的选项：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-fuck&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看用法：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-usage&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看已安装 sdk 列表：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-showsdks&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看当前 Xcode 版本：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-version&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看 xcodebuild 目录：&lt;tt class="docutils literal"&gt;$ &lt;span class="pre"&gt;xcode-select&lt;/span&gt; &lt;span class="pre"&gt;-print-path&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;查看项目配置：&lt;tt class="docutils literal"&gt;$ xcodebuild &lt;span class="pre"&gt;-showBuildSettings&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;编译项目：&lt;tt class="docutils literal"&gt;$ xcodebuild&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;xcodebuild 具体用法&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;编译普通项目：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
xcodebuild -configuration &lt;span class="s2"&gt;&amp;quot;Release&amp;quot;&lt;/span&gt; -arch &lt;span class="s2"&gt;&amp;quot;armv7 armv7s&amp;quot;&lt;/span&gt; -target &lt;span class="s2"&gt;&amp;quot;Diaoser&amp;quot;&lt;/span&gt; -sdk iphoneos &lt;span class="nv"&gt;CODE_SIGN_IDENTITY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iPhone Distribution: Diao Ser&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;GCC_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;com.apple.compilers.llvm.clang.1_0&amp;quot;&lt;/span&gt; -project Diaoser.xcodeproj
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;编译包含子项目的项目：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
xcodebuild -workspace Diaoser.xcodeproj/project.xcworkspace -scheme Diaoser  -configuration &lt;span class="s2"&gt;&amp;quot;Release&amp;quot;&lt;/span&gt; -arch &lt;span class="s2"&gt;&amp;quot;armv7 armv7s&amp;quot;&lt;/span&gt; -sdk iphoneos &lt;span class="nv"&gt;CODE_SIGN_IDENTITY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iPhone Distribution: Diao Ser&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;CONFIGURATION_BUILD_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'OUTPUT_DIRECTORY'&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html"&gt;xcodebuild(1) OS X Manual
Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/openbakery/iOS-Build-Scripts"&gt;openbakery/iOS-Build-Scripts ·
GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Xcode"></category><category term="xcodebuild"></category></entry><entry><title>Objective C 中的nil，Nil，NULL和NSNull理解</title><link href="https://magicalboy.com/null-value-in-objective-c.html" rel="alternate"></link><published>2013-04-16T10:26:00+08:00</published><updated>2013-04-16T10:26:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-04-16:/null-value-in-objective-c.html</id><summary type="html">&lt;p&gt;ObjC
里面的几个空值符号经常会差点把我搞死，这些基础的东西一点要弄清楚才行，以提高码农的基本素质。&lt;/p&gt;
&lt;div class="section" id="nil"&gt;
&lt;h2&gt;nil&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;nil 是 ObjC 对象的字面空值，对应 id 类型的对象，或者使用 &amp;#64;interface
声明的 ObjC 对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;例如：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSString *someString &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
NSURL *someURL &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
id &lt;span class="nv"&gt;someObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anotherObject&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; nil&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="k"&gt;do&lt;/span&gt; something
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;定义：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// objc.h
&lt;span class="c1"&gt;#ifndef nil
# if __has_feature(cxx_nullptr)
#   define nil nullptr
# else
#   define nil __DARWIN_NULL
# endif
#endif
&lt;/span&gt;
// __DARWIN_NULL …&lt;/pre&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;ObjC
里面的几个空值符号经常会差点把我搞死，这些基础的东西一点要弄清楚才行，以提高码农的基本素质。&lt;/p&gt;
&lt;div class="section" id="nil"&gt;
&lt;h2&gt;nil&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;nil 是 ObjC 对象的字面空值，对应 id 类型的对象，或者使用 &amp;#64;interface
声明的 ObjC 对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;例如：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSString *someString &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
NSURL *someURL &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
id &lt;span class="nv"&gt;someObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;anotherObject&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; nil&lt;span class="o"&gt;)&lt;/span&gt; // &lt;span class="k"&gt;do&lt;/span&gt; something
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;定义：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// objc.h
&lt;span class="c1"&gt;#ifndef nil
# if __has_feature(cxx_nullptr)
#   define nil nullptr
# else
#   define nil __DARWIN_NULL
# endif
#endif
&lt;/span&gt;
// __DARWIN_NULL in _types.h

&lt;span class="c1"&gt;#define __DARWIN_NULL ((void *)0)&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- nil-1: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Nil&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Nil 是 ObjC 类类型的书面空值，对应 Class 类型对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;例如：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Class &lt;span class="nv"&gt;someClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Nil&lt;span class="p"&gt;;&lt;/span&gt;
Class &lt;span class="nv"&gt;anotherClass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSString class&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;定义声明和 nil 是差不多的，值相同：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// objc.h
&lt;span class="c1"&gt;#ifndef Nil
# if __has_feature(cxx_nullptr)
#   define Nil nullptr
# else
#   define Nil __DARWIN_NULL
# endif
#endif&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="null"&gt;
&lt;h2&gt;NULL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;NULL 是任意的 C 指针空值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;例如：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
int *pointerToInt &lt;span class="o"&gt;=&lt;/span&gt; NULL&lt;span class="p"&gt;;&lt;/span&gt;
char *pointerToChar &lt;span class="o"&gt;=&lt;/span&gt; NULL&lt;span class="p"&gt;;&lt;/span&gt;
struct TreeNode *rootNode &lt;span class="o"&gt;=&lt;/span&gt; NULL&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;定义：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// in stddef.h

&lt;span class="c1"&gt;#define NULL ((void*)0)&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="nsnull"&gt;
&lt;h2&gt;NSNull&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;NSNull 是一个代表空值的类，是一个 ObjC
对象。实际上它只有一个单例方法：+[NSNull
null]，一般用于表示集合中值为空的对象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;例子说明：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// 因为 nil 被用来用为集合结束的标志，所以 nil 不能存储在 Foundation 集合里。
NSArray *array &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSArray arrayWithObjects:&amp;#64;&lt;span class="s2"&gt;&amp;quot;one&amp;quot;&lt;/span&gt;, &amp;#64;&lt;span class="s2"&gt;&amp;quot;two&amp;quot;&lt;/span&gt;, nil&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// 错误的使用
NSMutableDictionary *dict &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSMutableDictionary dictionary&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;dict setObject:nil forKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;someKey&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

// 正确的使用
NSMutableDictionary *dict &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSMutableDictionary dictionary&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;dict setObject:&lt;span class="o"&gt;[&lt;/span&gt;NSNull null&lt;span class="o"&gt;]&lt;/span&gt; forKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;someKey&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;定义：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
/*   NSNull.h
    Copyright &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="m"&gt;1994&lt;/span&gt;-2012, Apple Inc. All rights reserved.
*/

&lt;span class="c1"&gt;#import &amp;lt;Foundation/NSObject.h&amp;gt;
&lt;/span&gt;
&amp;#64;interface NSNull : NSObject &amp;lt;NSCopying, NSSecureCoding&amp;gt;

+ &lt;span class="o"&gt;(&lt;/span&gt;NSNull *&lt;span class="o"&gt;)&lt;/span&gt;null&lt;span class="p"&gt;;&lt;/span&gt;

&amp;#64;end
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="nil-nsnil"&gt;
&lt;h2&gt;NIL 或 NSNil&lt;/h2&gt;
&lt;p&gt;ObjC 不存在这两个符号！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;p&gt;虽然 nil, Nil, NULL
的值相同，理解它们之间的书面意义才重要，让代码更加明确，增加可读性。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/5908936/iphonedifference-between-nil-nil-and-null"&gt;Difference between nil,NIL and null - Stack
Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/NumbersandValues/Articles/Null.html"&gt;Topics for Cocoa: Using
Null.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="null"></category><category term="Objective-C"></category></entry><entry><title>理解 Android 应用退出</title><link href="https://magicalboy.com/how-to-exit-android-app.html" rel="alternate"></link><published>2013-04-10T17:42:00+08:00</published><updated>2013-04-10T17:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-04-10:/how-to-exit-android-app.html</id><summary type="html">&lt;p&gt;今天我又学了一下 Android 开发，了解如何退出一个 Android 程序。&lt;/p&gt;
&lt;p&gt;Android
没有退出应用程序的API，所谓退出是指关闭此应用的进程。要彻底关闭一个
App，应该到设置-&amp;gt;应用程序管理中强制关闭。类似于 iOS 设备双击 Home
按钮，持续按住应用至出现关闭提示来关闭。内存控们的至爱 ：）&lt;/p&gt;
&lt;p&gt;所以退出一个 Android app，只需要清理 Activity
，令它生命周期结束，并返回手机主界面，其余的让 OS
来处理吧。下面是一段用于普通 Android OS 退出代码：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Intent &lt;span class="nv"&gt;intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Intent&lt;span class="o"&gt;(&lt;/span&gt;Intent.ACTION_MAIN&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
intent.addCategory&lt;span class="o"&gt;(&lt;/span&gt;Intent.CATEGORY_HOME&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
intent.setFlags&lt;span class="o"&gt;(&lt;/span&gt;Intent.FLAG_ACTIVITY_NEW_TASK&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
startActivity&lt;span class="o"&gt;(&lt;/span&gt;intent …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;今天我又学了一下 Android 开发，了解如何退出一个 Android 程序。&lt;/p&gt;
&lt;p&gt;Android
没有退出应用程序的API，所谓退出是指关闭此应用的进程。要彻底关闭一个
App，应该到设置-&amp;gt;应用程序管理中强制关闭。类似于 iOS 设备双击 Home
按钮，持续按住应用至出现关闭提示来关闭。内存控们的至爱 ：）&lt;/p&gt;
&lt;p&gt;所以退出一个 Android app，只需要清理 Activity
，令它生命周期结束，并返回手机主界面，其余的让 OS
来处理吧。下面是一段用于普通 Android OS 退出代码：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Intent &lt;span class="nv"&gt;intent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; new Intent&lt;span class="o"&gt;(&lt;/span&gt;Intent.ACTION_MAIN&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
intent.addCategory&lt;span class="o"&gt;(&lt;/span&gt;Intent.CATEGORY_HOME&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
intent.setFlags&lt;span class="o"&gt;(&lt;/span&gt;Intent.FLAG_ACTIVITY_NEW_TASK&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
startActivity&lt;span class="o"&gt;(&lt;/span&gt;intent&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

finish&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;参考资料：Google &amp;quot;android exit&amp;quot;&lt;/p&gt;
&lt;p&gt;== finish() ==&lt;/p&gt;
</content><category term="Android"></category><category term="iOS"></category></entry><entry><title>内嵌 UIWebView 设置</title><link href="https://magicalboy.com/embeduiwebview-setting.html" rel="alternate"></link><published>2013-03-29T10:28:00+08:00</published><updated>2013-03-29T10:28:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-03-29:/embeduiwebview-setting.html</id><summary type="html">&lt;p&gt;在实际项目中会使用内嵌的 Web app，比如 HTML5 什么的现在很火啊。嵌入的
web app 还是需要一番调整才有更好的显示和体验效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;直接上代码，详见注释：&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code shell literal-block"&gt;
// 将页面缩放到 webView 大小
webView.scalesPageToFit &lt;span class="o"&gt;=&lt;/span&gt; YES&lt;span class="p"&gt;;&lt;/span&gt;
// 禁止多点触控事件
webView.multipleTouchEnabled &lt;span class="o"&gt;=&lt;/span&gt; NO&lt;span class="p"&gt;;&lt;/span&gt;

// UIWebView 的 scrollView 属性仅 iOS &lt;span class="m"&gt;5&lt;/span&gt;.0+ 支持
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([&lt;/span&gt;webView respondsToSelector:&amp;#64;selector&lt;span class="o"&gt;(&lt;/span&gt;scrollView&lt;span class="o"&gt;)])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    webView.scrollView.bounces &lt;span class="o"&gt;=&lt;/span&gt; NO&lt;span class="p"&gt;;&lt;/span&gt;    // 禁止拖动
    webView.scrollView.delegate &lt;span class="o"&gt;=&lt;/span&gt; self&lt;span class="p"&gt;;&lt;/span&gt; // 设置代理
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;id subview in …&lt;/pre&gt;</summary><content type="html">&lt;p&gt;在实际项目中会使用内嵌的 Web app，比如 HTML5 什么的现在很火啊。嵌入的
web app 还是需要一番调整才有更好的显示和体验效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;直接上代码，详见注释：&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code shell literal-block"&gt;
// 将页面缩放到 webView 大小
webView.scalesPageToFit &lt;span class="o"&gt;=&lt;/span&gt; YES&lt;span class="p"&gt;;&lt;/span&gt;
// 禁止多点触控事件
webView.multipleTouchEnabled &lt;span class="o"&gt;=&lt;/span&gt; NO&lt;span class="p"&gt;;&lt;/span&gt;

// UIWebView 的 scrollView 属性仅 iOS &lt;span class="m"&gt;5&lt;/span&gt;.0+ 支持
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([&lt;/span&gt;webView respondsToSelector:&amp;#64;selector&lt;span class="o"&gt;(&lt;/span&gt;scrollView&lt;span class="o"&gt;)])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    webView.scrollView.bounces &lt;span class="o"&gt;=&lt;/span&gt; NO&lt;span class="p"&gt;;&lt;/span&gt;    // 禁止拖动
    webView.scrollView.delegate &lt;span class="o"&gt;=&lt;/span&gt; self&lt;span class="p"&gt;;&lt;/span&gt; // 设置代理
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;id subview in webView.subviews&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([[&lt;/span&gt;subview class&lt;span class="o"&gt;]&lt;/span&gt; isSubclassOfClass:&lt;span class="o"&gt;[&lt;/span&gt;UIScrollView class&lt;span class="o"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            UIScrollView *s &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;UIScrollView *&lt;span class="o"&gt;)&lt;/span&gt;subview&lt;span class="p"&gt;;&lt;/span&gt;
            s.bounces &lt;span class="o"&gt;=&lt;/span&gt; NO&lt;span class="p"&gt;;&lt;/span&gt;    // 禁止拖动
            s.delegate &lt;span class="o"&gt;=&lt;/span&gt; self&lt;span class="p"&gt;;&lt;/span&gt; // 设置代理
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

// 禁止双击放大或缩小
- &lt;span class="o"&gt;(&lt;/span&gt;UIView *&lt;span class="o"&gt;)&lt;/span&gt;viewForZoomingInScrollView:&lt;span class="o"&gt;(&lt;/span&gt;UIScrollView *&lt;span class="o"&gt;)&lt;/span&gt;scrollView &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
</content><category term="iOS"></category><category term="UIWebView"></category></entry><entry><title>iOS App 中使用的标识符</title><link href="https://magicalboy.com/using-identifiers-in-your-apps.html" rel="alternate"></link><published>2013-03-26T22:11:00+08:00</published><updated>2013-03-26T22:11:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-03-26:/using-identifiers-in-your-apps.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;2013年03月21日，苹果强势地在 &lt;a class="reference external" href="https://developer.apple.com/news/index.php?id=3212013a"&gt;News and Announcements for Apple
Developers&lt;/a&gt;
通告开发者们在应用中使用新的标识符（Identifier），为了避免碰不必要的钉子，应该去了解了解。&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/using_identifier.png"&gt;&lt;img alt="using_identifier" class="alignleft size-full wp-image-43069" src="http://magicalboy.com/wp-content/uploads/2013/03/using_identifier.png" style="width: 640px; height: 403px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="uniqueidentifier"&gt;
&lt;h2&gt;uniqueIdentifier 属性&lt;/h2&gt;
&lt;p&gt;UIDevice 类的 uniqueIdentifier 方法早在 iOS 5.0
时已宣布过期，现在苹果正式通知开发者，从 2013年05月01日开始，App Store
将不再接受新的应用或更新的应用使用 UUID。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// UIDevice.h
&amp;#64;property&lt;span class="o"&gt;(&lt;/span&gt;nonatomic,readonly,retain&lt;span class="o"&gt;)&lt;/span&gt; NSString    *uniqueIdentifier  NS_DEPRECATED_IOS&lt;span class="o"&gt;(&lt;/span&gt;2_0, 5_0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  // a string unique to each device based on various hardware …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;2013年03月21日，苹果强势地在 &lt;a class="reference external" href="https://developer.apple.com/news/index.php?id=3212013a"&gt;News and Announcements for Apple
Developers&lt;/a&gt;
通告开发者们在应用中使用新的标识符（Identifier），为了避免碰不必要的钉子，应该去了解了解。&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/using_identifier.png"&gt;&lt;img alt="using_identifier" class="alignleft size-full wp-image-43069" src="http://magicalboy.com/wp-content/uploads/2013/03/using_identifier.png" style="width: 640px; height: 403px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="uniqueidentifier"&gt;
&lt;h2&gt;uniqueIdentifier 属性&lt;/h2&gt;
&lt;p&gt;UIDevice 类的 uniqueIdentifier 方法早在 iOS 5.0
时已宣布过期，现在苹果正式通知开发者，从 2013年05月01日开始，App Store
将不再接受新的应用或更新的应用使用 UUID。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// UIDevice.h
&amp;#64;property&lt;span class="o"&gt;(&lt;/span&gt;nonatomic,readonly,retain&lt;span class="o"&gt;)&lt;/span&gt; NSString    *uniqueIdentifier  NS_DEPRECATED_IOS&lt;span class="o"&gt;(&lt;/span&gt;2_0, 5_0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  // a string unique to each device based on various hardware info.

// 获取设备的唯一标识符，以后不能再使用
NSString *uuids &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;UIDevice currentDevice&lt;span class="o"&gt;]&lt;/span&gt; uniqueIdentifier&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;uuid:%&amp;#64;&amp;quot;&lt;/span&gt;, uuids&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;替代方法&lt;/h2&gt;
&lt;p&gt;有两种，一是苹果提供的方法。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使用 NSUUID 中的 UUIDString ,或 ASIdentifierManager 中的
advertisingIdentifier 来代替。注意 ASIdentifierManager 属于
AdSupport.framework 的。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code shell literal-block"&gt;
// UIDevice.h
&amp;#64;property&lt;span class="o"&gt;(&lt;/span&gt;nonatomic,readonly,retain&lt;span class="o"&gt;)&lt;/span&gt; NSUUID      *identifierForVendor NS_AVAILABLE_IOS&lt;span class="o"&gt;(&lt;/span&gt;6_0&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      // a UUID that may be used to uniquely identify the device, same across apps from a single vendor.

// NSUUID, iOS &lt;span class="m"&gt;6&lt;/span&gt;.0 +
/* Return a string description of the UUID, such as &lt;span class="s2"&gt;&amp;quot;E621E1F8-C36C-495A-93FC-0C247A3E6E5F&amp;quot;&lt;/span&gt; */
- &lt;span class="o"&gt;(&lt;/span&gt;NSString *&lt;span class="o"&gt;)&lt;/span&gt;UUIDString&lt;span class="p"&gt;;&lt;/span&gt;

// ASIdentifierManager.h, iOS &lt;span class="m"&gt;6&lt;/span&gt;.0 +
&amp;#64;property &lt;span class="o"&gt;(&lt;/span&gt;nonatomic,readonly&lt;span class="o"&gt;)&lt;/span&gt; NSUUID *advertisingIdentifier&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;OpenUDID（&lt;a class="reference external" href="https://github.com/ylechelle/OpenUDID"&gt;https://github.com/ylechelle/OpenUDID&lt;/a&gt;），一个通用，持久的
iOS UDID 解决方案。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/library/ios/#documentation/uikit/reference/UIDevice_Class/DeprecationAppendix/AppendixADeprecatedAPI.html"&gt;Deprecated UIDevice
Methods&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="UDID"></category></entry><entry><title>Xcode4.6 中整合 zxing 库</title><link href="https://magicalboy.com/install-zxing-in-xcode-4.html" rel="alternate"></link><published>2013-03-26T13:50:00+08:00</published><updated>2013-03-26T13:50:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-03-26:/install-zxing-in-xcode-4.html</id><summary type="html">&lt;p&gt;zxing（&lt;a class="reference external" href="http://code.google.com/p/zxing/"&gt;http://code.google.com/p/zxing/&lt;/a&gt;）是一个开源，支持多平台的 1d/2d
条形码扫描库。同类的应用有 zbar，zbar
支持生成条形码功能，使用简单，就是识别率没有 zxing 好。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;zxing 源码：221.16 MiB&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/zxing/zxing"&gt;https://github.com/zxing/zxing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zxing.googlecode.com/svn/trunk/"&gt;http://zxing.googlecode.com/svn/trunk/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Xcode 4.6&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;整合到项目&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;首先，打开 “zxing/iphone/ZXingWidget/” ，将 ZXingWidget.xcodeproj
文件拖放到你的 …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;zxing（&lt;a class="reference external" href="http://code.google.com/p/zxing/"&gt;http://code.google.com/p/zxing/&lt;/a&gt;）是一个开源，支持多平台的 1d/2d
条形码扫描库。同类的应用有 zbar，zbar
支持生成条形码功能，使用简单，就是识别率没有 zxing 好。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;准备&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;zxing 源码：221.16 MiB&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/zxing/zxing"&gt;https://github.com/zxing/zxing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zxing.googlecode.com/svn/trunk/"&gt;http://zxing.googlecode.com/svn/trunk/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Xcode 4.6&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;整合到项目&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;首先，打开 “zxing/iphone/ZXingWidget/” ，将 ZXingWidget.xcodeproj
文件拖放到你的 Xcode 项目的 “Project navigator” 栏。勾选上 “Copy
items”。&lt;/li&gt;
&lt;li&gt;然后将 ZXingWidget 作为项目的目标依赖。
&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/zxing_dependence.png"&gt;&lt;img alt="zxing_dependence" class="alignnone size-medium wp-image-43063" src="http://magicalboy.com/wp-content/uploads/2013/03/zxing_dependence-300x186.png" style="width: 300px; height: 186px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;接着将 ZXingWidget 静态库 (libZXingWidget.a) 连接到项目中。
&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/zxing_static_lib.png"&gt;&lt;img alt="zxing_static_lib" class="alignnone size-medium wp-image-43064" src="http://magicalboy.com/wp-content/uploads/2013/03/zxing_static_lib-300x175.png" style="width: 300px; height: 175px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;顺便加上以下 framework：&lt;ul&gt;
&lt;li&gt;AddressBook&lt;/li&gt;
&lt;li&gt;AddressBookUI&lt;/li&gt;
&lt;li&gt;AudioToolbox&lt;/li&gt;
&lt;li&gt;AVFoundation&lt;/li&gt;
&lt;li&gt;CoreMedia&lt;/li&gt;
&lt;li&gt;CoreVideo&lt;/li&gt;
&lt;li&gt;libiconv.dylib&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最后配置 header search path，好让 Xcode 能够找到 ZXingWidget
的头文件。
&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/zxing_header_path.png"&gt;&lt;img alt="zxing_header_path" class="alignnone size-medium wp-image-43065" src="http://magicalboy.com/wp-content/uploads/2013/03/zxing_header_path-300x103.png" style="width: 300px; height: 103px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="zxing"&gt;
&lt;h2&gt;使用 zxing&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;只要导入 “ZXingWidgetController.h” 和 “QRCodeReader.h”
即可使用。具体请参考 zxing/iphone/ScanTest 中的例子。&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;需要注意&lt;/strong&gt;的是使用 zxing 的文件必须使用 .mm 后缀名，因为他们使用了
zxing 这个 C++ 库。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;错误原因&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;出现找不到头文件，请将用到 zxing 的源文件扩展名是否已经改成.mm。&lt;/li&gt;
&lt;li&gt;Undefined symbols for architecture armv7s 错误，请把 zxing 的一个
build target 参数：“Build Active Architecture Only” 修改成 “NO”。&lt;/li&gt;
&lt;li&gt;No such file or directory，请检查 header search path 路径是否正确。&lt;/li&gt;
&lt;li&gt;zxing 编译出错，请检查编译器配置是否正确。
&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/jxPvG.png"&gt;&lt;img alt="jxPvG" class="alignnone size-medium wp-image-43066" src="http://magicalboy.com/wp-content/uploads/2013/03/jxPvG-300x118.png" style="width: 300px; height: 118px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;参考资料&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;zxing/iphone/README&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://yannickloriot.com/2011/04/how-to-install-zxing-in-xcode-4/"&gt;How to install ZXing in Xcode
4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/12665457/zxing-in-xcode-4-5-and-ios-6"&gt;zxing in xcode 4.5 and ios 6 - Stack
Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="iPhone"></category><category term="Xcode"></category><category term="zxing"></category><category term="二维码"></category></entry><entry><title>iOS更新到6.1.3</title><link href="https://magicalboy.com/ios-6-1-3-update.html" rel="alternate"></link><published>2013-03-20T09:32:00+08:00</published><updated>2013-03-20T09:32:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-03-20:/ios-6-1-3-update.html</id><summary type="html">&lt;p&gt;更新详情以下，越狱用户请勿手贱！&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0328.png"&gt;&lt;img alt="IMG_0328" class="alignnone size-medium wp-image-43056" src="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0328-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iPod touch 空间太小，更新个16.9MB的包至少需要662MB空间。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0327.png"&gt;&lt;img alt="IMG_0327" src="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0327-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外改进了日本&amp;quot;地图&amp;quot;，很容易让人联想到DiaoYuDiao。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;更新详情以下，越狱用户请勿手贱！&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0328.png"&gt;&lt;img alt="IMG_0328" class="alignnone size-medium wp-image-43056" src="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0328-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;iPod touch 空间太小，更新个16.9MB的包至少需要662MB空间。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0327.png"&gt;&lt;img alt="IMG_0327" src="http://magicalboy.com/wp-content/uploads/2013/03/IMG_0327-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;另外改进了日本&amp;quot;地图&amp;quot;，很容易让人联想到DiaoYuDiao。&lt;/p&gt;
</content><category term="iOS"></category></entry><entry><title>iOS6.1更新了</title><link href="https://magicalboy.com/ios6-1-update.html" rel="alternate"></link><published>2013-01-30T00:08:00+08:00</published><updated>2013-01-30T00:08:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2013-01-30:/ios6-1-update.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0269.png"&gt;&lt;img alt="iOS6.1 Update" src="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0269-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0270.png"&gt;&lt;img alt="Update Detail" src="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0270-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;1月29号发布的小更新，优化和细微调整。iOS升级当然少不了Xcode：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/Xcode_4.6.jpg"&gt;&lt;img alt="Xcode_4.6" src="http://magicalboy.com/wp-content/uploads/2013/01/Xcode_4.6-300x118.jpg" style="width: 300px; height: 118px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;快跟不上节奏了，科技与时俱进，码农要苦Ｂ了唉&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0269.png"&gt;&lt;img alt="iOS6.1 Update" src="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0269-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0270.png"&gt;&lt;img alt="Update Detail" src="http://magicalboy.com/wp-content/uploads/2013/01/IMG_0270-200x300.png" style="width: 200px; height: 300px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;1月29号发布的小更新，优化和细微调整。iOS升级当然少不了Xcode：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2013/01/Xcode_4.6.jpg"&gt;&lt;img alt="Xcode_4.6" src="http://magicalboy.com/wp-content/uploads/2013/01/Xcode_4.6-300x118.jpg" style="width: 300px; height: 118px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;快跟不上节奏了，科技与时俱进，码农要苦Ｂ了唉&lt;/p&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>2012总结</title><link href="https://magicalboy.com/2012-in-a-word.html" rel="alternate"></link><published>2012-12-31T18:15:00+08:00</published><updated>2012-12-31T18:15:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-12-31:/2012-in-a-word.html</id><summary type="html">&lt;p&gt;2012是无情的，就这么走了！&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2012是无情的，就这么走了！&lt;/p&gt;
</content><category term="2012"></category></entry><entry><title>UILabel behavior enable</title><link href="https://magicalboy.com/uilabel-behavior-enable.html" rel="alternate"></link><published>2012-08-08T12:22:00+08:00</published><updated>2012-08-08T12:22:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-08-08:/uilabel-behavior-enable.html</id><summary type="html">&lt;p&gt;UILabel 的 enabled 属性在文档中是这样描述的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The enabled state to use when drawing the label’s text.&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;Discussion&lt;/div&gt;
&lt;div class="line"&gt;This property determines only how the label is drawn. Disabled
text is dimmed somewhat to indicate it is not active. This
property is set to YES by default.&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如文档所说，UILabel 的 enabled 属性只是决定了 Label …&lt;/p&gt;</summary><content type="html">&lt;p&gt;UILabel 的 enabled 属性在文档中是这样描述的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The enabled state to use when drawing the label’s text.&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;Discussion&lt;/div&gt;
&lt;div class="line"&gt;This property determines only how the label is drawn. Disabled
text is dimmed somewhat to indicate it is not active. This
property is set to YES by default.&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如文档所说，UILabel 的 enabled 属性只是决定了 Label
的绘制方式，将它设置为 NO
将会使文本变暗，表示它没有激活，这时候向它设置颜色值是没有任何效果的。&lt;/p&gt;
&lt;p&gt;另外需要注意的是，虽然它的默认值为 YES，但在XIB中改变 UITableViewCell 的
Style 的时候，Title 或 SubTitle 的 Behavior 默认是不勾选的。&lt;/p&gt;
&lt;p&gt;EOF.&lt;/p&gt;
</content><category term="iOS"></category><category term="UILabel"></category></entry><entry><title>KVC 与 KVO 理解</title><link href="https://magicalboy.com/kvc_and_kvo.html" rel="alternate"></link><published>2012-06-07T11:22:00+08:00</published><updated>2012-06-07T11:22:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-06-07:/kvc_and_kvo.html</id><summary type="html">&lt;p&gt;KVC 与 KVO 是 Objective C
的关键概念，个人认为必须理解的东西，下面是实例讲解。&lt;/p&gt;
&lt;div class="section" id="key-value-coding-kvc"&gt;
&lt;h2&gt;Key-Value Coding (KVC)&lt;/h2&gt;
&lt;p&gt;KVC，即是指
&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/Reference/Reference.html#//apple_ref/occ/cat/NSKeyValueCoding"&gt;NSKeyValueCoding&lt;/a&gt;，一个非正式的
Protocol，提供一种机制来间接访问对象的属性。KVO 就是基于 KVC
实现的关键技术之一。&lt;/p&gt;
&lt;p&gt;一个对象拥有某些属性。比如说，一个 Person 对象有一个 name 和一个 address
属性。以 KVC 说法，Person 对象分别有一个 value 对应他的 name 和 address
的 key。 key
只是一个字符串，它对应的值可以是任意类型的对象。从最基础的层次上看，KVC
有两个方法：一个是设置 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;KVC 与 KVO 是 Objective C
的关键概念，个人认为必须理解的东西，下面是实例讲解。&lt;/p&gt;
&lt;div class="section" id="key-value-coding-kvc"&gt;
&lt;h2&gt;Key-Value Coding (KVC)&lt;/h2&gt;
&lt;p&gt;KVC，即是指
&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Protocols/NSKeyValueCoding_Protocol/Reference/Reference.html#//apple_ref/occ/cat/NSKeyValueCoding"&gt;NSKeyValueCoding&lt;/a&gt;，一个非正式的
Protocol，提供一种机制来间接访问对象的属性。KVO 就是基于 KVC
实现的关键技术之一。&lt;/p&gt;
&lt;p&gt;一个对象拥有某些属性。比如说，一个 Person 对象有一个 name 和一个 address
属性。以 KVC 说法，Person 对象分别有一个 value 对应他的 name 和 address
的 key。 key
只是一个字符串，它对应的值可以是任意类型的对象。从最基础的层次上看，KVC
有两个方法：一个是设置 key 的值，另一个是获取 key 的值。如下面的例子：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
void changeName&lt;span class="o"&gt;(&lt;/span&gt;Person *p, NSString *newName&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;

    // using the KVC accessor &lt;span class="o"&gt;(&lt;/span&gt;getter&lt;span class="o"&gt;)&lt;/span&gt; method
    NSString *originalName &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;p valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    // using the KVC  accessor &lt;span class="o"&gt;(&lt;/span&gt;setter&lt;span class="o"&gt;)&lt;/span&gt; method.
    &lt;span class="o"&gt;[&lt;/span&gt;p setValue:newName forKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;Changed %&amp;#64;'s name to: %&amp;#64;&amp;quot;&lt;/span&gt;, originalName, newName&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;现在，如果 Person 有另外一个 key 配偶（spouse），spouse 的 key
值是另一个 Person 对象，用 KVC 可以这样写：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
void logMarriage&lt;span class="o"&gt;(&lt;/span&gt;Person *p&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;

    // just using the accessor again, same as example above
    NSString *personsName &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;p valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    // this line is different, because it is using
    // a &lt;span class="s2"&gt;&amp;quot;key path&amp;quot;&lt;/span&gt; instead of a normal &lt;span class="s2"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;
    NSString *spousesName &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;p valueForKeyPath:&amp;#64;&lt;span class="s2"&gt;&amp;quot;spouse.name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;%&amp;#64; is happily married to %&amp;#64;&amp;quot;&lt;/span&gt;, personsName, spousesName&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;key 与 key pat 要区分开来，key 可以从一个对象中获取值，而 key path
可以将多个 key 用点号 &amp;quot;.&amp;quot; 分割连接起来，比如：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="o"&gt;[&lt;/span&gt;p valueForKeyPath:&amp;#64;&lt;span class="s2"&gt;&amp;quot;spouse.name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;相当于这样……&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="o"&gt;[[&lt;/span&gt;p valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;spouse&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;好了，以上是 KVC 的基本知识，接着看看 KVO。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="key-value-observing-kvo"&gt;
&lt;h2&gt;Key-Value Observing (KVO)&lt;/h2&gt;
&lt;p&gt;Key-Value Observing (KVO) 建立在 KVC 之上，它能够观察一个对象的 KVC key
path 值的变化。举个例子，用代码观察一个 person 对象的 address
变化，以下是实现的三个方法：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;watchPersonForChangeOfAddress: 实现观察&lt;/li&gt;
&lt;li&gt;observeValueForKeyPath:ofObject:change:context: 在被观察的 key path
的值变化时调用。&lt;/li&gt;
&lt;li&gt;dealloc 停止观察&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code shell literal-block"&gt;
static NSString *const &lt;span class="nv"&gt;KVO_CONTEXT_ADDRESS_CHANGED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &amp;#64;&lt;span class="s2"&gt;&amp;quot;KVO_CONTEXT_ADDRESS_CHANGED&amp;quot;&lt;/span&gt;

&amp;#64;implementation PersonWatcher

-&lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt; watchPersonForChangeOfAddress:&lt;span class="o"&gt;(&lt;/span&gt;Person *&lt;span class="o"&gt;)&lt;/span&gt;p
&lt;span class="o"&gt;{&lt;/span&gt;

    // this begins the observing
    &lt;span class="o"&gt;[&lt;/span&gt;p addObserver:self
        forKeyPath:&amp;#64;&lt;span class="s2"&gt;&amp;quot;address&amp;quot;&lt;/span&gt;
           options:0
           context:KVO_CONTEXT_ADDRESS_CHANGED&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    // keep a record of all the people being observed,
    // because we need to stop observing them in dealloc
    &lt;span class="o"&gt;[&lt;/span&gt;m_observedPeople addObject:p&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

// whenever an observed key path changes, this method will be called
- &lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt;observeValueForKeyPath:&lt;span class="o"&gt;(&lt;/span&gt;NSString *&lt;span class="o"&gt;)&lt;/span&gt;keyPath
                      ofObject:&lt;span class="o"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;)&lt;/span&gt;object
                        change:&lt;span class="o"&gt;(&lt;/span&gt;NSDictionary *&lt;span class="o"&gt;)&lt;/span&gt;change
                       context:&lt;span class="o"&gt;(&lt;/span&gt;void *&lt;span class="o"&gt;)&lt;/span&gt;context

&lt;span class="o"&gt;{&lt;/span&gt;
    // use the context to make sure this is a change in the address,
    // because we may also be observing other things
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;context&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; KVO_CONTEXT_ADDRESS_CHANGED&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        NSString *name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;object valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        NSString *address &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;object valueForKey:&amp;#64;&lt;span class="s2"&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;%&amp;#64; has a new address: %&amp;#64;&amp;quot;&lt;/span&gt;, name, address&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

-&lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt; dealloc&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;

    // must stop observing everything before this object is
    // deallocated, otherwise it will cause crashes
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Person *p in m_observedPeople&lt;span class="o"&gt;){&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt;p removeObserver:self forKeyPath:&amp;#64;&lt;span class="s2"&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;[&lt;/span&gt;m_observedPeople release&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;m_observedPeople&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;[&lt;/span&gt;super dealloc&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;

-&lt;span class="o"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;)&lt;/span&gt; init&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;super init&lt;span class="o"&gt;]){&lt;/span&gt;
        &lt;span class="nv"&gt;m_observedPeople&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSMutableArray new&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; self&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&amp;#64;end
&lt;/pre&gt;
&lt;p&gt;这就是 KVO 的作用，它通过 key path
观察对象的值，当值发生变化的时候会收到通知。&lt;/p&gt;
&lt;/div&gt;
</content><category term="Objective-C"></category></entry><entry><title>iPhone 近距离传感器的使用</title><link href="https://magicalboy.com/using_iphone_proximity_sensor.html" rel="alternate"></link><published>2012-05-25T14:18:00+08:00</published><updated>2012-05-25T14:18:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-05-25:/using_iphone_proximity_sensor.html</id><summary type="html">&lt;p&gt;在 iOS 中，并非所有 iOS 设备都拥有近距离传感器。这里介绍如何调用 iPhone
的距离传感器。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;使用近距离传感器&lt;/h2&gt;
&lt;p&gt;`
UIDevice &amp;lt;&lt;a class="reference external" href="https://developer.apple.com/library/ios/#documentation/uikit/reference/UIDevice_Class/Reference/UIDevice.html"&gt;https://developer.apple.com/library/ios/#documentation/uikit/reference/UIDevice_Class/Reference/UIDevice.html&lt;/a&gt;&amp;gt;`__
中有两个近距离传感器的属性：proximityMonitoringEnabled 和
proximityState。这两个属性都是 iOS 3.0 及以上才支持的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="proximitymonitoringenabled"&gt;
&lt;h2&gt;proximityMonitoringEnabled 属性&lt;/h2&gt;
&lt;blockquote&gt;
To determine if proximity monitoring is available, attempt to enable
it. If the value …&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;在 iOS 中，并非所有 iOS 设备都拥有近距离传感器。这里介绍如何调用 iPhone
的距离传感器。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;使用近距离传感器&lt;/h2&gt;
&lt;p&gt;`
UIDevice &amp;lt;&lt;a class="reference external" href="https://developer.apple.com/library/ios/#documentation/uikit/reference/UIDevice_Class/Reference/UIDevice.html"&gt;https://developer.apple.com/library/ios/#documentation/uikit/reference/UIDevice_Class/Reference/UIDevice.html&lt;/a&gt;&amp;gt;`__
中有两个近距离传感器的属性：proximityMonitoringEnabled 和
proximityState。这两个属性都是 iOS 3.0 及以上才支持的。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="proximitymonitoringenabled"&gt;
&lt;h2&gt;proximityMonitoringEnabled 属性&lt;/h2&gt;
&lt;blockquote&gt;
To determine if proximity monitoring is available, attempt to enable
it. If the value of the proximityState property remains NO,
proximity monitoring is not available.&lt;/blockquote&gt;
&lt;p&gt;要确定近距离传感器是否可用，可以尝试启用它，即
proximityMonitoringEnabled ＝
YES，如果设置的属性值仍然为NO，说明传感器不可用。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="proximitystate"&gt;
&lt;h2&gt;proximityState 属性&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;传感器已启动前提条件下，如果用户接近
近距离传感器，此时属性值为YES，并且屏幕已关闭（非休眠）。And vice
versa。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="notification"&gt;
&lt;h2&gt;Notification&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;UIDeviceProximityStateDidChangeNotification，当近距离传感器状态改变时发生。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="iPhone"></category><category term="近距离传感器"></category></entry><entry><title>iOS 获取 GPS 位置信息</title><link href="https://magicalboy.com/ios_gps_location.html" rel="alternate"></link><published>2012-05-25T11:42:00+08:00</published><updated>2012-05-25T11:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-05-25:/ios_gps_location.html</id><summary type="html">&lt;p&gt;在 iOS 平台上使用
&lt;a class="reference external" href="https://developer.apple.com/library/ios/#DOCUMENTATION/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html"&gt;CLLocationManager&lt;/a&gt;
获取 GPS 位置信息，比如经度，纬度，海拔高度等是很简单的事情。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;步骤&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;加入 CoreLocation.framework , 导入头文件。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="c1"&gt;#import &amp;lt;CoreLocation/CoreLocation.h&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在 AppDelegate.m 中加入检测是否启用位置服务功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;打开位置管理器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在 CLLocationManagerDelegate 中获取 GPS 位置信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="demo"&gt;
&lt;h2&gt;完整 Demo&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/donly/GPS_iOS"&gt;GPS_iOS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;在 iOS 平台上使用
&lt;a class="reference external" href="https://developer.apple.com/library/ios/#DOCUMENTATION/CoreLocation/Reference/CLLocationManager_Class/CLLocationManager/CLLocationManager.html"&gt;CLLocationManager&lt;/a&gt;
获取 GPS 位置信息，比如经度，纬度，海拔高度等是很简单的事情。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;步骤&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;加入 CoreLocation.framework , 导入头文件。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="c1"&gt;#import &amp;lt;CoreLocation/CoreLocation.h&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在 AppDelegate.m 中加入检测是否启用位置服务功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;打开位置管理器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在 CLLocationManagerDelegate 中获取 GPS 位置信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="demo"&gt;
&lt;h2&gt;完整 Demo&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/donly/GPS_iOS"&gt;GPS_iOS&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="GPS"></category><category term="iOS"></category></entry><entry><title>Objective C NSTimer 使用</title><link href="https://magicalboy.com/objective_c_nstimer_usage.html" rel="alternate"></link><published>2012-05-24T11:36:00+08:00</published><updated>2012-05-24T11:36:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-05-24:/objective_c_nstimer_usage.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/NSTimer_Class/Reference/NSTimer.html"&gt;NSTimer&lt;/a&gt; 的使用并不复杂，简单介绍在iOS开发中经常会用到的几种方式。&lt;/p&gt;
&lt;div class="section" id="nstimer"&gt;
&lt;h2&gt;创建 NSTimer&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Scheduled Timers &amp;amp; Using Selector&lt;/li&gt;
&lt;li&gt;Unscheduled Timers &amp;amp; Using Invocation&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1449035/how-do-i-use-nstimer"&gt;objective c - How do I use NSTimer - Stack
Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Timers/Timers.html"&gt;Timer Programming Topics: Introduction to
Timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Multithreading/Introduction/Introduction.html"&gt;Threading Programming
Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/Foundation/Classes/NSTimer_Class/Reference/NSTimer.html"&gt;NSTimer&lt;/a&gt; 的使用并不复杂，简单介绍在iOS开发中经常会用到的几种方式。&lt;/p&gt;
&lt;div class="section" id="nstimer"&gt;
&lt;h2&gt;创建 NSTimer&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Scheduled Timers &amp;amp; Using Selector&lt;/li&gt;
&lt;li&gt;Unscheduled Timers &amp;amp; Using Invocation&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1449035/how-do-i-use-nstimer"&gt;objective c - How do I use NSTimer - Stack
Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Timers/Timers.html"&gt;Timer Programming Topics: Introduction to
Timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Multithreading/Introduction/Introduction.html"&gt;Threading Programming
Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Objective-C"></category></entry><entry><title>HTC HD2 WIFI Error 解决方法</title><link href="https://magicalboy.com/htchd2-wifi-error-solution.html" rel="alternate"></link><published>2012-04-27T22:04:00+08:00</published><updated>2012-04-27T22:04:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-04-27:/htchd2-wifi-error-solution.html</id><summary type="html">&lt;p&gt;为了了解Android与WP7等手机移动操作系统特性，但又限于经济条件不可能买多台手机，因此年初入手了一台神机
&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/HTC_HD2"&gt;HTC HD2&lt;/a&gt;。马上刷上 Android
HTC Sense 3.5
Rom（来自&lt;a class="reference external" href="http://forum.xda-developers.com/showthread.php?t=1298188"&gt;XDA&lt;/a&gt;），感觉非常完美。直到现在已经使用两个月左右，突然出现WIFI启动不了，提示
WIFI Error。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="WIFI Error" src="https://lh3.googleusercontent.com/-E-hjEaCTdo4/T5o6LPrv-jI/AAAAAAAABGg/LN6Lg-ltIFs/s553/wifi_error.png" style="width: 266px; height: 442px;" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;上图：设置里面的无线与网络截屏。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="wifi error2" src="https://lh4.googleusercontent.com/-EL8Wwq2Cfkg/T5o6K-aH_mI/AAAAAAAABGc/I78HRKh-ukM/s553/wifi_error2.png" style="width: 266px; height: 442px;" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;上图：通知的控件显示截屏。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;寻找解决方法&lt;/h2&gt;
&lt;p&gt;刚开始以为是ROM或Radio等软件问题，花了不少时间折腾。因为还在保修期内，所以还是决定了返修处理。将问题具体情况写在纸条上，一定要说清楚。并和手机一起寄给卖家，邮费自付。然后关注机子的最新动态，每天要记得联系他们了解情况，不出两天他们就修好寄回来了，连邮费都是他们出。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题原因是什么&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;返修给修理师傅是修好了，但是什么原因导致WIFI
Error呢。问过他们得到的回答是手机字体库坏了，需要用专用的仪器刷，不需要换任何零件。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="聊天记录" src="https://lh5.googleusercontent.com/-djWwK-pErMw/T5qixBdDW7I/AAAAAAAABG0/lg1GpCCEl0M/s360/htc_hd2_contact_record.jpg" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;虽说可能是因刷机太多引起的，怎么可能阻止得了刷机的诱惑，何况也正是HD2的使命。生命在于折腾，目前已经愉快地用上&lt;a class="reference external" href="http://forum.xda-developers.com/showthread.php?t=1404993"&gt;CM7 …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;为了了解Android与WP7等手机移动操作系统特性，但又限于经济条件不可能买多台手机，因此年初入手了一台神机
&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/HTC_HD2"&gt;HTC HD2&lt;/a&gt;。马上刷上 Android
HTC Sense 3.5
Rom（来自&lt;a class="reference external" href="http://forum.xda-developers.com/showthread.php?t=1298188"&gt;XDA&lt;/a&gt;），感觉非常完美。直到现在已经使用两个月左右，突然出现WIFI启动不了，提示
WIFI Error。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="WIFI Error" src="https://lh3.googleusercontent.com/-E-hjEaCTdo4/T5o6LPrv-jI/AAAAAAAABGg/LN6Lg-ltIFs/s553/wifi_error.png" style="width: 266px; height: 442px;" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;上图：设置里面的无线与网络截屏。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="wifi error2" src="https://lh4.googleusercontent.com/-EL8Wwq2Cfkg/T5o6K-aH_mI/AAAAAAAABGc/I78HRKh-ukM/s553/wifi_error2.png" style="width: 266px; height: 442px;" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;上图：通知的控件显示截屏。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;寻找解决方法&lt;/h2&gt;
&lt;p&gt;刚开始以为是ROM或Radio等软件问题，花了不少时间折腾。因为还在保修期内，所以还是决定了返修处理。将问题具体情况写在纸条上，一定要说清楚。并和手机一起寄给卖家，邮费自付。然后关注机子的最新动态，每天要记得联系他们了解情况，不出两天他们就修好寄回来了，连邮费都是他们出。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题原因是什么&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;返修给修理师傅是修好了，但是什么原因导致WIFI
Error呢。问过他们得到的回答是手机字体库坏了，需要用专用的仪器刷，不需要换任何零件。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="聊天记录" src="https://lh5.googleusercontent.com/-djWwK-pErMw/T5qixBdDW7I/AAAAAAAABG0/lg1GpCCEl0M/s360/htc_hd2_contact_record.jpg" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;虽说可能是因刷机太多引起的，怎么可能阻止得了刷机的诱惑，何况也正是HD2的使命。生命在于折腾，目前已经愉快地用上&lt;a class="reference external" href="http://forum.xda-developers.com/showthread.php?t=1404993"&gt;CM7&lt;/a&gt;
:)&lt;/p&gt;
&lt;p&gt;附：&lt;a class="reference external" href="http://android.hd2roms.com/"&gt;HD2 ROM大全&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category><category term="HD2"></category><category term="HTC"></category><category term="WIFI"></category></entry><entry><title>Oops! Google App Engine 超出配额</title><link href="https://magicalboy.com/google_app_engine_over_quota.html" rel="alternate"></link><published>2012-04-22T12:14:00+08:00</published><updated>2012-04-22T12:14:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-04-22:/google_app_engine_over_quota.html</id><summary type="html">&lt;p&gt;昨天将GAE空间整理过后，今天访问出现 Over Quota &lt;strong&gt;503&lt;/strong&gt;
不能访问的问题。免费的服务果然是伤不起啊，但想一下，为什么之前就没有这问题呢，到&lt;a class="reference external" href="https://appengine.google.com/"&gt;管理控制台&lt;/a&gt;查看，原来
&lt;strong&gt;Frontend Instance Hours&lt;/strong&gt; 的 &lt;strong&gt;Daily Quota&lt;/strong&gt; 已经耗尽，超出配额。&lt;/p&gt;
&lt;div class="section" id="instance-hours"&gt;
&lt;h2&gt;什么是 Instance Hours&lt;/h2&gt;
&lt;blockquote&gt;
Instance Hours 对应于CPU Hours 而言的 先说CPU Hours: 一个请求,
如果耗费 0.1s, 那么计费时就按照 0.1s累计. 假设每天100K请求, 那么就是
100K*0.1s = 10Ks, 约2.8 CPU Hours. 而Instance Hours …&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;昨天将GAE空间整理过后，今天访问出现 Over Quota &lt;strong&gt;503&lt;/strong&gt;
不能访问的问题。免费的服务果然是伤不起啊，但想一下，为什么之前就没有这问题呢，到&lt;a class="reference external" href="https://appengine.google.com/"&gt;管理控制台&lt;/a&gt;查看，原来
&lt;strong&gt;Frontend Instance Hours&lt;/strong&gt; 的 &lt;strong&gt;Daily Quota&lt;/strong&gt; 已经耗尽，超出配额。&lt;/p&gt;
&lt;div class="section" id="instance-hours"&gt;
&lt;h2&gt;什么是 Instance Hours&lt;/h2&gt;
&lt;blockquote&gt;
Instance Hours 对应于CPU Hours 而言的 先说CPU Hours: 一个请求,
如果耗费 0.1s, 那么计费时就按照 0.1s累计. 假设每天100K请求, 那么就是
100K*0.1s = 10Ks, 约2.8 CPU Hours. 而Instance Hours
是指Instance的保持时间, 不管是否在处理请求 (这里的Instance
和Amazon的Micro Instance差不多) GAE的Instance数量是动态,
并且创建后通常会在空闲一段时间(15分钟?)后才释放 之前CPU
Hours对于小规模应用很合算, 基本不会超过6.5小时的免费限额
而现在新价格下, 虽然有24小时的Instance Hours,
但是一旦有突发大量请求, 一个Instance处理不过来的时候, 就会产生第二,
第三个Instance..., 于是就会有费用产生. 关键是,
GAE/Python目前不支持并发请求, 一个Instance只能顺序处理逐个请求,
于是对于并发请求很多的应用, 就会产生&amp;quot;惊人&amp;quot;的收费,
而真正的CPU使用率很低 简单来说, 之前CPU Hours惊人的便宜,
现在Instance Hours惊人的昂贵, 在没有支持并发请求的情况下.&lt;/blockquote&gt;
&lt;p&gt;引用自&lt;a class="reference external" href="http://www.v2ex.com/t/17891"&gt;Instance Hours
究竟是什么东西？&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="logs"&gt;
&lt;h2&gt;分析 Logs&lt;/h2&gt;
&lt;p&gt;为了找出哪个 &lt;strong&gt;Frontend Instance&lt;/strong&gt; 占用 &lt;strong&gt;Hours&lt;/strong&gt;
最多，翻查了一下日志，发现 &lt;strong&gt;/admin/wp_import&lt;/strong&gt; 所调用的次数最多。
&lt;img alt="import" src="https://lh3.googleusercontent.com/-KKU--IAshKE/T5PopLj_BCI/AAAAAAAABEU/X-yNHirWUzY/w597-h343-k/appengine_logs.png" /&gt; 这只是一个 Wordpress Import
插件，只能在后台调用而且只在导入文章时使用。排除 Robots.txt
没有设置，将此插件禁用依然调用，如上图。最后发现是任务队列干的好事。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="task-queues"&gt;
&lt;h2&gt;取消 Task Queues&lt;/h2&gt;
&lt;p&gt;在&lt;a class="reference external" href="https://appengine.google.com/"&gt;管理控制台&lt;/a&gt; Main -&amp;gt; Task Queues
查看有没有任务队列在运行。如果有，删掉 queue.yaml
文件或删除其中的某一任务，然后使用命令更新。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ appcfg.py update_queues myapp/
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="application-settings"&gt;
&lt;h2&gt;Application Settings&lt;/h2&gt;
&lt;p&gt;想想昨天还有一个改动的地方，在管理控制台的 &lt;strong&gt;Administration -&amp;gt;
Application Settings -&amp;gt; Performance&lt;/strong&gt;，将 &lt;strong&gt;Frontend Instance Class&lt;/strong&gt;
默认的 &lt;em&gt;F1(600MHz, 128MB)&lt;/em&gt; 更改为 &lt;em&gt;F4(2400MHz, 512MB)&lt;/em&gt;，按照提示 &amp;quot;&lt;em&gt;For
example an F2 consumes instance hours at twice the rate of an F1.&lt;/em&gt;&amp;quot;
所说，更改之后 &lt;strong&gt;instance hours&lt;/strong&gt; 消耗为原先的 4 倍。效果可想而知了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;一些建议&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;尽量在本地开发环境做测试，减少对服务器的 &lt;strong&gt;Request&lt;/strong&gt;，节省
&lt;strong&gt;instance hours&lt;/strong&gt; 。&lt;/li&gt;
&lt;li&gt;同样的目的，对静态文件的请求建议使用外链引用。&lt;/li&gt;
&lt;li&gt;优化程序代码，经常查看分析 &lt;strong&gt;Logs&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;减少在服务器处理比较消耗CPU资源的任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;处理好以上问题之后，等待 Quota 更新吧。 Quotas are reset every 24 hours.
Next reset: 4 hours。:) 其它参考资料：&lt;a class="reference external" href="http://blog.longwin.com.tw/2010/12/gae-billing-quota-status-2010/"&gt;Google App Engine
計費、配額、系統狀態
常用資料匯整&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="GAE"></category><category term="Google"></category></entry><entry><title>更新 Google App Engine 应用</title><link href="https://magicalboy.com/update_google_app_engine_applications.html" rel="alternate"></link><published>2012-04-21T05:53:00+08:00</published><updated>2012-04-21T05:53:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-04-21:/update_google_app_engine_applications.html</id><summary type="html">&lt;p&gt;又有一段时间没更新博客程序，博客所用的 &lt;a class="reference external" href="https://developers.google.com/appengine/docs/whatisgoogleappengine?hl=zh-CN"&gt;Google App
Engine&lt;/a&gt;（以下简称GAE）&lt;a class="reference external" href="https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python"&gt;Python
版本&lt;/a&gt;当前已经更新到
&lt;em&gt;1.6.4 - 2012-03-27&lt;/em&gt;。在更新的同时做一些简要的 GAE
使用笔记，以免下次又忘了去查文档。这里有官网详细的教程：&lt;a class="reference external" href="https://developers.google.com/appengine/docs/python/gettingstarted/?hl=zh-CN"&gt;使用入门：Python&lt;/a&gt;
。&lt;/p&gt;
&lt;div class="section" id="google-app-engine-python"&gt;
&lt;h2&gt;安装 Google App Engine（Python）&lt;/h2&gt;
&lt;p&gt;在Mac OS Lion 下安装完成后，第一次运行会有提示创建
Symlink。需要提供管理员权限，成功后会有提示。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Symlink Status

Symbolic links in /usr/local/bin have been created &lt;span class="k"&gt;for&lt;/span&gt; the following commands:

api_server.py …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;又有一段时间没更新博客程序，博客所用的 &lt;a class="reference external" href="https://developers.google.com/appengine/docs/whatisgoogleappengine?hl=zh-CN"&gt;Google App
Engine&lt;/a&gt;（以下简称GAE）&lt;a class="reference external" href="https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python"&gt;Python
版本&lt;/a&gt;当前已经更新到
&lt;em&gt;1.6.4 - 2012-03-27&lt;/em&gt;。在更新的同时做一些简要的 GAE
使用笔记，以免下次又忘了去查文档。这里有官网详细的教程：&lt;a class="reference external" href="https://developers.google.com/appengine/docs/python/gettingstarted/?hl=zh-CN"&gt;使用入门：Python&lt;/a&gt;
。&lt;/p&gt;
&lt;div class="section" id="google-app-engine-python"&gt;
&lt;h2&gt;安装 Google App Engine（Python）&lt;/h2&gt;
&lt;p&gt;在Mac OS Lion 下安装完成后，第一次运行会有提示创建
Symlink。需要提供管理员权限，成功后会有提示。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Symlink Status

Symbolic links in /usr/local/bin have been created &lt;span class="k"&gt;for&lt;/span&gt; the following commands:

api_server.py appcfg.py bulkload_client.py bulkloader.py dev_appserver.py gen_protorpc.py google_sql.py remote_api_shell.py

In addition, /usr/local/google_appengine points to the SDK.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;下载应用&lt;/h2&gt;
&lt;p&gt;上传与下载所使用工具为 appcfg.py，基本用法为：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
Usage: appcfg.py &lt;span class="o"&gt;[&lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;在终端输入 appcfg.py 可查看帮助，其中下载应用的 action（动作）为：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
download_app: Download a previously-uploaded app.
&lt;/pre&gt;
&lt;pre class="code shell literal-block"&gt;
Usage: appcfg.py &lt;span class="o"&gt;[&lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt; download_app -A app_id &lt;span class="o"&gt;[&lt;/span&gt; -V version &lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;options 应为账号地址，比如 &lt;a class="reference external" href="mailto:--email=example&amp;#64;magicalboy.com"&gt;--email=example&amp;#64;magicalboy.com&lt;/a&gt;。&lt;/div&gt;
&lt;div class="line"&gt;app_id 为应用ID名称，紧跟在 -A后面，比如 -A appname。&lt;/div&gt;
&lt;div class="line"&gt;-V 可选，因为在 app.yaml 中已经指定过了，如果在此指定，则会覆盖
app.yaml 中的 version 。&lt;/div&gt;
&lt;div class="line"&gt;为下载到本地保存的目录，该目录不能为空，否则报错：&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="code shell literal-block"&gt;
appcfg.py: error: Cannot download to path &lt;span class="s2"&gt;&amp;quot;./&amp;quot;&lt;/span&gt;: directory already exists and it isn&lt;span class="err"&gt;'&lt;/span&gt;t empty.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;上传应用&lt;/h2&gt;
&lt;p&gt;在修改完应用之后，准备提交更新时，这时往往需要更改一下 app.yaml
里面的版本号，以免上传后覆盖服务器上相同版本。以下是 app.yaml
文件的部分示例：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
application: myapp
version: &lt;span class="m"&gt;1&lt;/span&gt;-0-dev
runtime: python
api_version: &lt;span class="m"&gt;1&lt;/span&gt;
...
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;*版本说明符可以包含字母、数字和连字符。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;提交上传应用&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
appcfg.py --email&lt;span class="o"&gt;=&lt;/span&gt;example&amp;#64;magicalboy.com update myapp/
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;选择默认版本&lt;/h2&gt;
&lt;p&gt;为什么上传了修改后的应用却没有任何更新呢，在开发服务器上明明有更新的啊，怎么回事。别忘了上传之后还需要在&lt;a class="reference external" href="https://appengine.google.com/"&gt;管理控制台&lt;/a&gt;选择默认使用版本，在
My Applications 列表的 Current Version
列中可以看到当前使用版本。进入应用的 Main -&amp;gt; Versions 可以选择默认版本。&lt;/p&gt;
&lt;p&gt;如果选择后还是没有更新，可以尝试改变一下主题模板试试。&lt;/p&gt;
&lt;/div&gt;
</content><category term="GAE"></category><category term="Python"></category></entry><entry><title>如何在 Android 设备上截图</title><link href="https://magicalboy.com/how-to-take-screenshots-on-android-device.html" rel="alternate"></link><published>2012-04-08T10:23:00+08:00</published><updated>2012-04-08T10:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-04-08:/how-to-take-screenshots-on-android-device.html</id><summary type="html">&lt;p&gt;在苹果 iOS 设备上可以很轻松的使用 Home + Power
组合按键来截图，系统自带有此功能。但在 Android
系统上，没有类似系统自带的截图功能，肿么办？&lt;/p&gt;
&lt;p&gt;本文介绍如何使用 Dalvik Debug Monitor Server ( DDMS)
截图，它的特点有：免root， 免App，不影响程序运行性能，随时可截图。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;操作步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装 Android SDK，（Windows 用户可参考
&lt;a class="reference external" href="/android-dev-guid-for-windows.html"&gt;Android开发环境搭建（Windows篇）&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;在设置（Settings） &amp;gt; 应用程序（Applications） &amp;gt;
开发（Development）开启 USB 调试（USB Debugging）。&lt;/li&gt;
&lt;li&gt;连接 Android 设备，可通过 USB 或者 Wireless …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;在苹果 iOS 设备上可以很轻松的使用 Home + Power
组合按键来截图，系统自带有此功能。但在 Android
系统上，没有类似系统自带的截图功能，肿么办？&lt;/p&gt;
&lt;p&gt;本文介绍如何使用 Dalvik Debug Monitor Server ( DDMS)
截图，它的特点有：免root， 免App，不影响程序运行性能，随时可截图。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;操作步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装 Android SDK，（Windows 用户可参考
&lt;a class="reference external" href="/android-dev-guid-for-windows.html"&gt;Android开发环境搭建（Windows篇）&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;在设置（Settings） &amp;gt; 应用程序（Applications） &amp;gt;
开发（Development）开启 USB 调试（USB Debugging）。&lt;/li&gt;
&lt;li&gt;连接 Android 设备，可通过 USB 或者 Wireless ADB
(需要root，且反应稍慢)。&lt;/li&gt;
&lt;li&gt;打开 Android SDK 安装目录下的 /tools/ddms。&lt;/li&gt;
&lt;li&gt;在 Device 菜单选择 Screen capture... （Ctrl+S 或 Command +
S），就可以截图了，截屏后还可以进行刷新，旋转，复制到粘贴板或保存到本地等操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="ddms capture" src="https://lh4.googleusercontent.com/-Gmg3-48cE2k/T5UF89CcMKI/AAAAAAAABE8/2eM2t3qQaI8/s548/ddms_capture.png" /&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Android"></category><category term="截图"></category></entry><entry><title>iOS 开发教程，HelloWorld</title><link href="https://magicalboy.com/ios_helloworld.html" rel="alternate"></link><published>2012-03-31T14:47:00+08:00</published><updated>2012-03-31T14:47:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-03-31:/ios_helloworld.html</id><summary type="html">&lt;p&gt;为了方便大家入门iOS开发，写个简单的iOS项目让大家了解一下 iPhone, iPad
等应用程序是如何开发出来的。本文只是快速入门，不涉及 Objective C
语法讲解，Xcode 与 User Interface 使用等。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;开发环境&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mac OS X 10.7.3&lt;/li&gt;
&lt;li&gt;Xcode Version 4.3.2 (4E2002)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;开发流程&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;选择项目模板，Choose 'Empty Application' for your new project.
下一步。&lt;/li&gt;
&lt;li&gt;填写模板选项，项目名称 'HelloWorld'，下一步。&lt;/li&gt;
&lt;li&gt;选择项目工作空间，创建项目完成。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="hello-world"&gt;
&lt;h2&gt;编写Hello, world&lt;/h2&gt;
&lt;p&gt;由于新建的项目类型是 'Empty
Application'，所以是相当纯的 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;为了方便大家入门iOS开发，写个简单的iOS项目让大家了解一下 iPhone, iPad
等应用程序是如何开发出来的。本文只是快速入门，不涉及 Objective C
语法讲解，Xcode 与 User Interface 使用等。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;开发环境&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Mac OS X 10.7.3&lt;/li&gt;
&lt;li&gt;Xcode Version 4.3.2 (4E2002)&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;开发流程&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;选择项目模板，Choose 'Empty Application' for your new project.
下一步。&lt;/li&gt;
&lt;li&gt;填写模板选项，项目名称 'HelloWorld'，下一步。&lt;/li&gt;
&lt;li&gt;选择项目工作空间，创建项目完成。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="hello-world"&gt;
&lt;h2&gt;编写Hello, world&lt;/h2&gt;
&lt;p&gt;由于新建的项目类型是 'Empty
Application'，所以是相当纯的，窗口是空的。下面用纯 Objective C
代码的方式创建显示 'Hello, world' 的 UILabel。&lt;/p&gt;
&lt;p&gt;单击 AppDelegate.m 文件，在 application:didFinishLaunchingWithOptions:
方法的注释行&amp;quot;Override point for customization after application
launch.&amp;quot;下面键入以下代码。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// 创建一个Label
UILabel *helloLabel &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;UILabel alloc&lt;span class="o"&gt;]&lt;/span&gt; initWithFrame:CGRectMake&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;, &lt;span class="m"&gt;10&lt;/span&gt;, &lt;span class="m"&gt;200&lt;/span&gt;, &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;helloLabel setTextAlignment:UITextAlignmentCenter&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  // 设置Label文本对齐方式为居中
&lt;span class="o"&gt;[&lt;/span&gt;helloLabel setBackgroundColor:&lt;span class="o"&gt;[&lt;/span&gt;UIColor redColor&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   // 设置Label背景色为红色
&lt;span class="o"&gt;[&lt;/span&gt;helloLabel setText:&amp;#64;&lt;span class="s2"&gt;&amp;quot;Hello, world!!!&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  // 设置Label的文字
&lt;span class="o"&gt;[&lt;/span&gt;self.window addSubview:helloLabel&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    // 将Label这个View增加到窗口
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;选择模拟器运行（Command+R），你会看到结果：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image0" src="https://lh5.googleusercontent.com/-QRFojkmUZbA/T5u6hmYFyGI/AAAAAAAABHM/xuAv5Tou3os/s383/ios_hello_world_result.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xib"&gt;
&lt;h2&gt;使用XIB来实现以上效果&lt;/h2&gt;
&lt;p&gt;单击 &lt;em&gt;AppDelegate.h&lt;/em&gt; 文件，在 &lt;em&gt;UIWindow&lt;/em&gt; 前加入关键字 &lt;em&gt;IBOutlet&lt;/em&gt;。&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&amp;#64;property &lt;span class="o"&gt;(&lt;/span&gt;strong, nonatomic&lt;span class="o"&gt;)&lt;/span&gt; IBOutlet UIWindow *window&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;新建XIB文件，同样为了清楚整个创建过程，选择如处女般清纯的 Empty XIB
模板。&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="ios_user_interface" src="https://lh6.googleusercontent.com/-Y3zxn6GfyIA/T5u6koRebVI/AAAAAAAABHs/b85O08R1_8k/s732/ios_user_interface.png" style="width: 544px; height: 372px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;打开工具面板&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="xcode_utilities" src="https://lh3.googleusercontent.com/-erIt05OLPKY/T5u6jjjBwwI/AAAAAAAABHk/f2wIRX-Xd5c/s284/xcode_utilities.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;增加 XIB 对象&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;XIB对象包括所有UIView对象和UIViewController，NSObject等。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="ios_objects_library" src="https://lh6.googleusercontent.com/-lZxa-_BpZMM/T5u6hoG6eAI/AAAAAAAABHQ/5GmRUTnF260/s264/ios_objects_library.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;稍微配置一下参数&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="Xcode_helloworld_xib 配置" src="https://lh6.googleusercontent.com/-t6P2ExUTQ_g/T5u6imNsR4I/AAAAAAAABHU/HmepJdWnsf4/s903/Xcode_helloworld_xib.png" style="width: 821px; height: 226px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;修改 main.m&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
int main&lt;span class="o"&gt;(&lt;/span&gt;int argc, char *argv&lt;span class="o"&gt;[])&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &amp;#64;autoreleasepool &lt;span class="o"&gt;{&lt;/span&gt;
//        &lt;span class="k"&gt;return&lt;/span&gt; UIApplicationMain&lt;span class="o"&gt;(&lt;/span&gt;argc, argv, nil, NSStringFromClass&lt;span class="o"&gt;([&lt;/span&gt;AppDelegate class&lt;span class="o"&gt;]))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; UIApplicationMain&lt;span class="o"&gt;(&lt;/span&gt;argc, argv, nil, nil&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;修改 Info.plist&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在文件最后增加一行 Key 为 '&lt;em&gt;Main nib file base name'&lt;/em&gt;，Type 为
'String'，Value 为 '&lt;em&gt;Empty&lt;/em&gt;'，即对应 XIB 名称。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;详细请参考项目源码&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="/media/aglkb25seWNoYW5yDQsSBU1lZGlhGOqBAgw/HelloWorld.7z?a=download"&gt;HelloWorld&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有任何疑问或意见请留言。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;[20120428更新]&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;更新源码下载弹空白窗口问题。&lt;/li&gt;
&lt;li&gt;调整图片显示大小&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="helloworld"></category><category term="iOS"></category><category term="iPhone"></category><category term="Objective-C"></category></entry><entry><title>iOS 用户体验与界面设计学习</title><link href="https://magicalboy.com/ios_ue_and_ui_learning.html" rel="alternate"></link><published>2012-02-29T13:53:00+08:00</published><updated>2012-02-29T13:53:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2012-02-29:/ios_ue_and_ui_learning.html</id><summary type="html">&lt;p&gt;如何学习iOS用户体验与界面设计&lt;/p&gt;
&lt;p&gt;&lt;img alt="iPhoneLineUp" src="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/Art/iPhoneLineUp.jpg" style="width: 408px; height: 291px;" /&gt;&lt;/p&gt;
&lt;p&gt;Apple
公司有世界上最牛X的UI工程师，iOS内置的UI绝对值得开发人员学习。比如内置程序电话，邮件，通讯录，日历，相册等。&lt;/p&gt;
&lt;p&gt;不要一意追求自己的UI与众不同。最好遵从 Apple UI 设计规范 《&lt;a class="reference external" href="https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/Introduction/Introduction.html"&gt;iPhone
Human Interface
Guidelines&lt;/a&gt;》，简称HIG。&lt;/p&gt;
&lt;p&gt;如果不遵从HIG规范，用户需要学习新的操作方式，而付出代价。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="/media/aglkb25seWNoYW5yDQsSBU1lZGlhGLHqAQw/IMG_0002.PNG?a=download" style="width: 320px; height: 480px;" /&gt;&lt;/p&gt;
&lt;p&gt;聚焦是iPhone数据输入模式最大特点，键盘占据了屏幕很大空间，一次输入一个字段或一小组能在键盘上完全显示的字段是明智之举。&lt;/p&gt;
&lt;p&gt;这样看起来增加了用户的操作，但胜于较直观，简洁。“以尽可能少的精力和资源去完成尽可能大的生产率”，减少点击数并非最有效的设计。鼠标的发明是人机交互史上的一大革命，但是，多点触控操作更具有革命性。大幅降低学习曲线，减少从思考输出步骤，点击的低廉。手指就是输入设备，而且是最有效的。&lt;/p&gt;
&lt;p&gt;iPhone用户喜欢触感性的东西，都应有视觉反应，甚至可以不管有无实际功能。比如允许视图滑动，即使数据没有超出可视范围。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="/media/aglkb25seWNoYW5yDQsSBU1lZGlhGJnyAQw/IMG_0004.PNG" style="width: 320px; height: 480px;" /&gt;&lt;/p&gt;
&lt;p&gt;精致，用户可以感觉到应用微小的细节，UI设计的每一点都需要精雕细琢。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;如何学习iOS用户体验与界面设计&lt;/p&gt;
&lt;p&gt;&lt;img alt="iPhoneLineUp" src="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/Art/iPhoneLineUp.jpg" style="width: 408px; height: 291px;" /&gt;&lt;/p&gt;
&lt;p&gt;Apple
公司有世界上最牛X的UI工程师，iOS内置的UI绝对值得开发人员学习。比如内置程序电话，邮件，通讯录，日历，相册等。&lt;/p&gt;
&lt;p&gt;不要一意追求自己的UI与众不同。最好遵从 Apple UI 设计规范 《&lt;a class="reference external" href="https://developer.apple.com/library/ios/#documentation/UserExperience/Conceptual/MobileHIG/Introduction/Introduction.html"&gt;iPhone
Human Interface
Guidelines&lt;/a&gt;》，简称HIG。&lt;/p&gt;
&lt;p&gt;如果不遵从HIG规范，用户需要学习新的操作方式，而付出代价。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="/media/aglkb25seWNoYW5yDQsSBU1lZGlhGLHqAQw/IMG_0002.PNG?a=download" style="width: 320px; height: 480px;" /&gt;&lt;/p&gt;
&lt;p&gt;聚焦是iPhone数据输入模式最大特点，键盘占据了屏幕很大空间，一次输入一个字段或一小组能在键盘上完全显示的字段是明智之举。&lt;/p&gt;
&lt;p&gt;这样看起来增加了用户的操作，但胜于较直观，简洁。“以尽可能少的精力和资源去完成尽可能大的生产率”，减少点击数并非最有效的设计。鼠标的发明是人机交互史上的一大革命，但是，多点触控操作更具有革命性。大幅降低学习曲线，减少从思考输出步骤，点击的低廉。手指就是输入设备，而且是最有效的。&lt;/p&gt;
&lt;p&gt;iPhone用户喜欢触感性的东西，都应有视觉反应，甚至可以不管有无实际功能。比如允许视图滑动，即使数据没有超出可视范围。&lt;/p&gt;
&lt;p&gt;&lt;img alt="image2" src="/media/aglkb25seWNoYW5yDQsSBU1lZGlhGJnyAQw/IMG_0004.PNG" style="width: 320px; height: 480px;" /&gt;&lt;/p&gt;
&lt;p&gt;精致，用户可以感觉到应用微小的细节，UI设计的每一点都需要精雕细琢。&lt;/p&gt;
</content><category term="Apple"></category><category term="iOS"></category><category term="iPhone"></category></entry><entry><title>2011 EOF</title><link href="https://magicalboy.com/2011-big-events.html" rel="alternate"></link><published>2011-12-27T06:15:00+08:00</published><updated>2011-12-27T06:15:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-12-27:/2011-big-events.html</id><summary type="html">&lt;p&gt;今天是2011年最后一天。&lt;/p&gt;
&lt;p&gt;新年快乐，这是我的技术博客，今年很少更新，皆因生活和工作都发生了很大变化：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;09年由Web开发转至移动应用开发，一个人的路真不好走！&lt;/li&gt;
&lt;li&gt;10年，继续移动开发。不同的是4月离开了幸福城市珠海，来到远闻其名的SZ城市，都是海滨城市，环境较好。&lt;/li&gt;
&lt;li&gt;一直在复制，从未成功。小公司想做一个产品，不投资的人力资源，最终一无所有。谁都想又快又好，又便宜又好。&lt;/li&gt;
&lt;li&gt;如果有一天老板问你相不相信他，怎办——不要相信一个不肯给你加薪的老板，会认为你很重要，在他那至少没有钱重要！&lt;/li&gt;
&lt;li&gt;一同事离职，在家写iPad
Apps，好的话一天可赚100美刀，哥我有点凌乱啊，创意很重要。Appstore既能帮助别人，自己也能获得好处。&lt;/li&gt;
&lt;li&gt;博客合租主机到期，从此几乎弃之不理。直至有一天心血来潮，决定将博客搬到GAE这一想法实现，解决付费这一后顾之忧。&lt;/li&gt;
&lt;li&gt;博客搬到GAE后，顺便将之前在WordPress用的主题iBlog也移植了，当然数据也导出移过来了。开源世界是自由的，互联网也应该如此，可惜。。&lt;/li&gt;
&lt;li&gt;忙！找不到以前在珠海的那种悠闲的节奏，深圳速度究竟是快。有时间应该多到外面走走，摄影，拍MM等 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;今天是2011年最后一天。&lt;/p&gt;
&lt;p&gt;新年快乐，这是我的技术博客，今年很少更新，皆因生活和工作都发生了很大变化：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;09年由Web开发转至移动应用开发，一个人的路真不好走！&lt;/li&gt;
&lt;li&gt;10年，继续移动开发。不同的是4月离开了幸福城市珠海，来到远闻其名的SZ城市，都是海滨城市，环境较好。&lt;/li&gt;
&lt;li&gt;一直在复制，从未成功。小公司想做一个产品，不投资的人力资源，最终一无所有。谁都想又快又好，又便宜又好。&lt;/li&gt;
&lt;li&gt;如果有一天老板问你相不相信他，怎办——不要相信一个不肯给你加薪的老板，会认为你很重要，在他那至少没有钱重要！&lt;/li&gt;
&lt;li&gt;一同事离职，在家写iPad
Apps，好的话一天可赚100美刀，哥我有点凌乱啊，创意很重要。Appstore既能帮助别人，自己也能获得好处。&lt;/li&gt;
&lt;li&gt;博客合租主机到期，从此几乎弃之不理。直至有一天心血来潮，决定将博客搬到GAE这一想法实现，解决付费这一后顾之忧。&lt;/li&gt;
&lt;li&gt;博客搬到GAE后，顺便将之前在WordPress用的主题iBlog也移植了，当然数据也导出移过来了。开源世界是自由的，互联网也应该如此，可惜。。&lt;/li&gt;
&lt;li&gt;忙！找不到以前在珠海的那种悠闲的节奏，深圳速度究竟是快。有时间应该多到外面走走，摄影，拍MM等。令人欣慰的是，有佳人陪伴，并不空虚
; )&lt;/li&gt;
&lt;li&gt;还有必要做技术笔记吗，我想Google能给我想要的答案。&lt;/li&gt;
&lt;li&gt;Steve Jobs: 'Death is life's best invention'. Rest in peace!&lt;/li&gt;
&lt;li&gt;感觉自己开始老了，这也是事实。&lt;/li&gt;
&lt;li&gt;最后，我希望20121221这不是真的，相信大家都还有很多事情没做吧，抓紧时间全力地去Do了。新年快乐！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2011.12.31 六&lt;/p&gt;
&lt;p&gt;EOF&lt;/p&gt;
</content><category term="2011 总结"></category></entry><entry><title>Git 基本配置</title><link href="https://magicalboy.com/git-configuration.html" rel="alternate"></link><published>2011-10-27T13:59:00+08:00</published><updated>2011-10-27T13:59:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-10-27:/git-configuration.html</id><summary type="html">&lt;p&gt;之前写过一篇《&lt;a class="reference external" href="/git-getting-started"&gt;Git
使用入门&lt;/a&gt;》，主要简单地介绍 Git
和安装。现在这记录一下 Git 的基本配置，方便使用。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;用户信息&lt;/li&gt;
&lt;li&gt;文本编辑器&lt;/li&gt;
&lt;li&gt;差异分析工具&lt;/li&gt;
&lt;li&gt;自动高亮&lt;/li&gt;
&lt;li&gt;查看配置&lt;/li&gt;
&lt;li&gt;git配置文件&lt;ul&gt;
&lt;li&gt;/etc/gitconfig 对所有用户有效&lt;/li&gt;
&lt;li&gt;~/.gitconfig 对当前用户有效&lt;/li&gt;
&lt;li&gt;{工作目录}/.git/config 仅对当前项目有效&lt;/li&gt;
&lt;li&gt;$HOME 或者 C:Documents and Settings$USER 下的.gitconfig&lt;/li&gt;
&lt;li&gt;git安装目录下的/etc/gitconfig&lt;/li&gt;
&lt;li&gt;同上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;帮助与参数资料&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;p&gt;之前写过一篇《&lt;a class="reference external" href="/git-getting-started"&gt;Git
使用入门&lt;/a&gt;》，主要简单地介绍 Git
和安装。现在这记录一下 Git 的基本配置，方便使用。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;用户信息&lt;/li&gt;
&lt;li&gt;文本编辑器&lt;/li&gt;
&lt;li&gt;差异分析工具&lt;/li&gt;
&lt;li&gt;自动高亮&lt;/li&gt;
&lt;li&gt;查看配置&lt;/li&gt;
&lt;li&gt;git配置文件&lt;ul&gt;
&lt;li&gt;/etc/gitconfig 对所有用户有效&lt;/li&gt;
&lt;li&gt;~/.gitconfig 对当前用户有效&lt;/li&gt;
&lt;li&gt;{工作目录}/.git/config 仅对当前项目有效&lt;/li&gt;
&lt;li&gt;$HOME 或者 C:Documents and Settings$USER 下的.gitconfig&lt;/li&gt;
&lt;li&gt;git安装目录下的/etc/gitconfig&lt;/li&gt;
&lt;li&gt;同上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;帮助与参数资料&lt;/li&gt;
&lt;/ol&gt;
</content><category term="Git"></category></entry><entry><title>iOS 5 软件更新</title><link href="https://magicalboy.com/what-is-new-in-ios5.html" rel="alternate"></link><published>2011-10-21T05:59:00+08:00</published><updated>2011-10-21T05:59:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-10-21:/what-is-new-in-ios5.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;iOS 5 软件更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本更新增加了 200 多个新功能，其中包括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;通知&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 从任意屏幕的顶部向下推送，即可在“通知中心”集中查看所有通知。&lt;/p&gt;
&lt;p&gt;◦ 新收到的通知会短时间显示在屏幕顶部&lt;/p&gt;
&lt;p&gt;◦ 可从锁定的屏幕查看通知&lt;/p&gt;
&lt;p&gt;◦ 将通知应用程序图标从锁定的屏幕的左侧滑到右侧，即可直接前往该应用程序&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iMessage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 可与其他 5 位 iOS 5 用户收发不限量的文本信息、照片信息和视频信息。&lt;/p&gt;
&lt;p&gt;◦ 可查阅送达回执和已读回执来跟踪信息的状态&lt;/p&gt;
&lt;p&gt;◦ 群发信息和安全加密&lt;/p&gt;
&lt;p&gt;◦ 可在蜂窝网络和 Wi-Fi 中使用*&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;报刊杂志&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 在“主屏幕”上自动整理订阅的报纸杂志&lt;/p&gt;
&lt;p&gt;◦ 显示最新一期报纸杂志的封面&lt;/p&gt;
&lt;p&gt;◦ 在后台下载新一期报纸杂志&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;用“提醒事项”来管理待办事项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 与 iCloud、iCal 和 Outlook 同步&lt;/p&gt;
&lt;p&gt;◦ 在您离开或到达某一个位置时发送基于位置的提醒（适用于 iPhone 4S 和 iPhone …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;iOS 5 软件更新&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本更新增加了 200 多个新功能，其中包括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;通知&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 从任意屏幕的顶部向下推送，即可在“通知中心”集中查看所有通知。&lt;/p&gt;
&lt;p&gt;◦ 新收到的通知会短时间显示在屏幕顶部&lt;/p&gt;
&lt;p&gt;◦ 可从锁定的屏幕查看通知&lt;/p&gt;
&lt;p&gt;◦ 将通知应用程序图标从锁定的屏幕的左侧滑到右侧，即可直接前往该应用程序&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iMessage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 可与其他 5 位 iOS 5 用户收发不限量的文本信息、照片信息和视频信息。&lt;/p&gt;
&lt;p&gt;◦ 可查阅送达回执和已读回执来跟踪信息的状态&lt;/p&gt;
&lt;p&gt;◦ 群发信息和安全加密&lt;/p&gt;
&lt;p&gt;◦ 可在蜂窝网络和 Wi-Fi 中使用*&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;报刊杂志&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 在“主屏幕”上自动整理订阅的报纸杂志&lt;/p&gt;
&lt;p&gt;◦ 显示最新一期报纸杂志的封面&lt;/p&gt;
&lt;p&gt;◦ 在后台下载新一期报纸杂志&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;用“提醒事项”来管理待办事项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 与 iCloud、iCal 和 Outlook 同步&lt;/p&gt;
&lt;p&gt;◦ 在您离开或到达某一个位置时发送基于位置的提醒（适用于 iPhone 4S 和 iPhone 4）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;内建对 Twitter 的支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 只需在“设置”中登录一次，就可直接从“相机”、“照片”、“地图”、Safari 和 YouTube 发送推特信息&lt;/p&gt;
&lt;p&gt;◦ 可将位置信息添加到任何推特信息中&lt;/p&gt;
&lt;p&gt;◦ 在“通讯录”中显示 Twitter 个人资料中的图片和用户名&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了配备相机的设备中的相机功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ iPhone 4S、iPhone 4、iPhone 3GS 和 iPod touch（第四代）处于睡眠状态时，连按两次主屏幕按钮，即可快速调用相机&lt;/p&gt;
&lt;p&gt;◦ 可使用调高音量的按钮来进行拍摄&lt;/p&gt;
&lt;p&gt;◦ 拍照时可选用网格线来提供坐标参考&lt;/p&gt;
&lt;p&gt;◦ 在预览屏幕上捏合或张开手指可缩放图像&lt;/p&gt;
&lt;p&gt;◦ 可推送预览屏幕来查看相机胶卷中的照片&lt;/p&gt;
&lt;p&gt;◦ 轻按一下并按住可锁定聚焦和曝光，iPad 2 和 iPod touch（第四代）仅支持锁定曝光&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了配备相机的设备中的照片功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 裁减与旋转&lt;/p&gt;
&lt;p&gt;◦ 移除照片红眼&lt;/p&gt;
&lt;p&gt;◦ 轻按一下即可改善照片&lt;/p&gt;
&lt;p&gt;◦ 将照片整理成相簿&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了 Mail 功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 可将邮件的文本格式设置为粗体或斜体，或者给文本添加下划线&lt;/p&gt;
&lt;p&gt;◦ 可控制缩进级别&lt;/p&gt;
&lt;p&gt;◦ 可拖移地址栏中的名字以重新排列&lt;/p&gt;
&lt;p&gt;◦ 将邮件标记为有旗标&lt;/p&gt;
&lt;p&gt;◦ 同时将大量邮件标记为旗标、已读或未读&lt;/p&gt;
&lt;p&gt;◦ 自定邮件的提醒声音&lt;/p&gt;
&lt;p&gt;◦ S/MIME（安全多用途网际邮件扩充协议）&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;改进了日历功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ iPad 上的年视图，和 iPhone 与 iPod touch 上新的周视图&lt;/p&gt;
&lt;p&gt;◦ 轻按一下即可创建事件&lt;/p&gt;
&lt;p&gt;◦ 查看与添加事件附件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了 Game Center 功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 可将您的个人照片用于您的 Game Center 帐户&lt;/p&gt;
&lt;p&gt;◦ 对比您与朋友的总体成就得分&lt;/p&gt;
&lt;p&gt;◦ 通过交友推荐和朋友的朋友在 Game Center 结交新朋友&lt;/p&gt;
&lt;p&gt;◦ 通过自定的游戏推荐来发现新游戏&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iPad 2 和 iPhone 4S 上新增“AirPlay 镜像”功能&lt;/li&gt;
&lt;li&gt;适用于 iPad 的多任务手势&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 四指或五指捏合来前往“主屏幕”&lt;/p&gt;
&lt;p&gt;◦ 向上推送来显示多任务栏&lt;/p&gt;
&lt;p&gt;◦ 左右推送来切换应用程序&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用“设置助理”直接在设备上进行设置、激活和配置&lt;/li&gt;
&lt;li&gt;无需连线电脑共享网络，即可以无线方式更新软件&lt;/li&gt;
&lt;li&gt;支持 iCloud&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ iTunes 云服务&lt;/p&gt;
&lt;p&gt;◦ 照片流&lt;/p&gt;
&lt;p&gt;◦ 文档云服务&lt;/p&gt;
&lt;p&gt;◦ 可自动下载应用程序和图书，并保留购买历史记录&lt;/p&gt;
&lt;p&gt;◦ 备份&lt;/p&gt;
&lt;p&gt;◦ 通讯录、日历和邮件&lt;/p&gt;
&lt;p&gt;◦ 查找我的 iPhone&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;重新设计了 iPad 上的“音乐”应用程序&lt;/li&gt;
&lt;li&gt;每小时天气预报&lt;/li&gt;
&lt;li&gt;实时股票报价&lt;/li&gt;
&lt;li&gt;无线同步到 iTunes&lt;/li&gt;
&lt;li&gt;改善了键盘功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 可拆分 iPad 键盘&lt;/p&gt;
&lt;p&gt;◦ 提高了自动改正的准确性&lt;/p&gt;
&lt;p&gt;◦ 改进了中文和日文的输入法&lt;/p&gt;
&lt;p&gt;◦ 新的表情符号键盘&lt;/p&gt;
&lt;p&gt;◦ 新增用户词典，可用于自动改正&lt;/p&gt;
&lt;p&gt;◦ 可选择为常用字词创建可扩展的键盘输入码&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了辅助功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 在 iPhone 4S 和 iPhone 4 上，可选择在接收来电或收到提醒时闪烁 LED&lt;/p&gt;
&lt;p&gt;◦ 可在 iPhone 上自定来电的振动模式&lt;/p&gt;
&lt;p&gt;◦ 增加了新的界面，方便有行动障碍的用户通过专用的输入设备来使用 iOS&lt;/p&gt;
&lt;p&gt;◦ 可朗读选定的文本内容&lt;/p&gt;
&lt;p&gt;◦ 自定 VoiceOver 的元素标签&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增强了 Exchange ActiveSync&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;◦ 无线同步任务&lt;/p&gt;
&lt;p&gt;◦ 将邮件标记为有旗标、已读或未读&lt;/p&gt;
&lt;p&gt;◦ 加强了离线支持&lt;/p&gt;
&lt;p&gt;◦ 存储来自 GAL 服务的新联系人信息&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;新增 1,500 多个开发人员 API&lt;/li&gt;
&lt;li&gt;错误修复&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;与本软件更新兼容的产品：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iPhone 4S&lt;/li&gt;
&lt;li&gt;iPhone 4&lt;/li&gt;
&lt;li&gt;iPhone 3GS&lt;/li&gt;
&lt;li&gt;iPad 2&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iPod touch（第四代）&lt;/li&gt;
&lt;li&gt;iPod touch（第三代）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;* 可能要缴纳正常的运营商数据收费。iMessage 不可用时，信息将以 SMS
短信方式发送，可能要缴纳运营商信息收费。&lt;/p&gt;
&lt;p&gt;若要进一步了解本更新的安全性内容，请访问此网站：&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://support.apple.com/kb/HT1222?viewlocale=zh_CN"&gt;http://support.apple.com/kb/HT1222?viewlocale=zh_CN&lt;/a&gt;&lt;/p&gt;
</content><category term="iOS"></category></entry><entry><title>Git 使用入门</title><link href="https://magicalboy.com/git-getting-started.html" rel="alternate"></link><published>2011-09-22T14:26:00+08:00</published><updated>2011-09-22T14:26:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-09-22:/git-getting-started.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;一、Git简介&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="git logo" src="https://lh6.googleusercontent.com/-6bFWTOcHH4Y/TntG8fwhJWI/AAAAAAAAAJk/pu01j_uBeDo/s800/git.png" style="width: 214px; height: 81px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Git（Via &lt;a class="reference external" href="http://zh.wikipedia.org/wiki/Git"&gt;http://zh.wikipedia.org/wiki/Git&lt;/a&gt;）。当初 Linus Trovalds 开发
Git 是为了跟踪 Linux 内核的修改情况，Git 命名来自于&lt;/p&gt;
&lt;blockquote&gt;
“I'm an egotistical bastard, and I name all my projects after
myself. First Linux, now git.”&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;**
二、为什么使用Git**&lt;/div&gt;
&lt;div class="line"&gt;相信大家使用过传统的版本控制系统（Version Control System，VCS），比如
CVS，SVN（Subversion）等。这些都是老而笨重，采用集中式的 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;一、Git简介&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="git logo" src="https://lh6.googleusercontent.com/-6bFWTOcHH4Y/TntG8fwhJWI/AAAAAAAAAJk/pu01j_uBeDo/s800/git.png" style="width: 214px; height: 81px;" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Git（Via &lt;a class="reference external" href="http://zh.wikipedia.org/wiki/Git"&gt;http://zh.wikipedia.org/wiki/Git&lt;/a&gt;）。当初 Linus Trovalds 开发
Git 是为了跟踪 Linux 内核的修改情况，Git 命名来自于&lt;/p&gt;
&lt;blockquote&gt;
“I'm an egotistical bastard, and I name all my projects after
myself. First Linux, now git.”&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;**
二、为什么使用Git**&lt;/div&gt;
&lt;div class="line"&gt;相信大家使用过传统的版本控制系统（Version Control System，VCS），比如
CVS，SVN（Subversion）等。这些都是老而笨重，采用集中式的
VCS。相比之下，Git 有如下优势：&lt;/div&gt;
&lt;div class="line"&gt;1、分布式体系结构。（Distributed Version Control
System，DVCS），可完全断网离线工作，不受网络连接限制。&lt;/div&gt;
&lt;div class="line"&gt;2、分支与合并操作简单。&lt;/div&gt;
&lt;div class="line"&gt;3、兼容 SVN。如果公司同事坚持使用 SVN，也可以完全从 SVN
版本库中导入所有历史，并把在 Git 中的改动提交到 SVN。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;现越来越多有名的开源项目采用 Git 管理了，熟悉 Git
之后不会对它敬而远之，尽管 Github 上提供项目的下载链接。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;三、安装 Git （Widows 篇）&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;Git 为 POSIX 架构，本不支持Windows，有牛人制作了可在 Widows
运行的环境，整合版下载地址：&lt;a class="reference external" href="http://code.google.com/p/msysgit/downloads/list?can=3"&gt;http://code.google.com/p/msysgit/downloads/list?can=3&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;请放心下载，开源且官方推荐的。&lt;/div&gt;
&lt;div class="line"&gt;下载时请选择第一（.exe）或第二个（Portable）下载。下面以第二个
PortableGit-x.x.x-previewxxxxxxxx.7z 为例进行说明。&lt;/div&gt;
&lt;div class="line"&gt;Tips：千万不要解压到当前目录，应解压到一个文件夹下，因为该档案是没有带目录压缩的。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;1、解压完成后，剪切到软件安装的目录。&lt;/div&gt;
&lt;div class="line"&gt;2、配置以下环境变量：&lt;/div&gt;
&lt;div class="line"&gt;gitdir=c:portablegit&lt;/div&gt;
&lt;div class="line"&gt;path=%gitdir%cmd;%path%&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;四、快速入门&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;常用到的 Checkout 项目命令：&lt;/div&gt;
&lt;div class="line"&gt;git clone url.git&lt;/div&gt;
&lt;div class="line"&gt;配置：&lt;/div&gt;
&lt;div class="line"&gt;git config --global user.name &amp;quot;Donly Chan&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;git config --global user.email &lt;a class="reference external" href="mailto:donly&amp;#64;magicalboy.com"&gt;donly&amp;#64;magicalboy.com&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;帮助：&lt;/div&gt;
&lt;div class="line"&gt;git --help&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;五、更多&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;更多信息参见安装目录的 “README.portable”。&lt;/div&gt;
&lt;div class="line"&gt;Git 首页：&lt;a class="reference external" href="http://git-scm.com/"&gt;http://git-scm.com/&lt;/a&gt; （如打不开，请自行开盾）&lt;/div&gt;
&lt;div class="line"&gt;Gitbug 首页：&lt;a class="reference external" href="https://github.com/"&gt;https://github.com/&lt;/a&gt;，强烈推荐使用，可注册。&lt;/div&gt;
&lt;div class="line"&gt;Git 学习资源：&lt;a class="reference external" href="http://progit.org/book/zh/"&gt;http://progit.org/book/zh/&lt;/a&gt; （中文，入门推荐）&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;更新&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2012-05-23：&lt;a class="reference external" href="http://windows.github.com/"&gt;GitHub for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Git"></category></entry><entry><title>纪念即将逝去的青春</title><link href="https://magicalboy.com/about-lost-youth.html" rel="alternate"></link><published>2011-09-13T13:09:00+08:00</published><updated>2011-09-13T13:09:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-09-13:/about-lost-youth.html</id><summary type="html">&lt;p&gt;&lt;img alt="即将逝去的青春" class="aligncenter" src="https://lh4.googleusercontent.com/-IurF4a7lE08/T5UEamp2okI/AAAAAAAABE0/j2wNQbPDj1c/s435/the_young_days.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;作此文，谨以纪念即将逝去的青春..&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;img alt="即将逝去的青春" class="aligncenter" src="https://lh4.googleusercontent.com/-IurF4a7lE08/T5UEamp2okI/AAAAAAAABE0/j2wNQbPDj1c/s435/the_young_days.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;作此文，谨以纪念即将逝去的青春..&lt;/p&gt;
</content><category term="青春"></category></entry><entry><title>欢迎光临</title><link href="https://magicalboy.com/hello_world.html" rel="alternate"></link><published>2011-09-13T12:49:00+08:00</published><updated>2011-09-13T12:49:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-09-13:/hello_world.html</id><summary type="html">&lt;p&gt;欢迎光临MAGICALBOY. 这是我的第一篇博客.
您可以忽略这篇文章，开始您精彩的欣赏Blog之旅。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;欢迎光临MAGICALBOY. 这是我的第一篇博客.
您可以忽略这篇文章，开始您精彩的欣赏Blog之旅。&lt;/p&gt;
</content><category term="blog"></category><category term="MAGICALBOY"></category></entry><entry><title>苹果iOS4.3正式发布</title><link href="https://magicalboy.com/ios4-3-release.html" rel="alternate"></link><published>2011-03-10T02:30:00+08:00</published><updated>2011-03-10T02:30:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-03-10:/ios4-3-release.html</id><summary type="html">&lt;p&gt;2011-03-10，苹果iOS 4.3固件升级正式提供更新和下载。&lt;/p&gt;
&lt;p&gt;苹果官网地址：&lt;a class="reference external" href="http://www.apple.com/ios/"&gt;http://www.apple.com/ios/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="iOS4.3" src="http://images.apple.com/ipod/home/images/promobar_ios_20110302.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;苹果iOS4.3更新特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;为GSM网络iPhone4的无线热点功能（Personal Hotspot for iPhone 4）&lt;/li&gt;
&lt;li&gt;Safari浏览器性能增强（Safari Performance）&lt;/li&gt;
&lt;li&gt;家庭共享iTunes数据库（iTunes Home Sharing）&lt;/li&gt;
&lt;li&gt;无线点播功能增强（AirPlay Enhancements）&lt;/li&gt;
&lt;li&gt;自定义iPad侧开关功能（iPad Side Switch）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;苹果iOS 4.3版本支持设备包括&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iPhone 4（GSM/WCDMA版本）&lt;/li&gt;
&lt;li&gt;iPhone 3GS&lt;/li&gt;
&lt;li&gt;iPod touch3/4代&lt;/li&gt;
&lt;li&gt;iPad2（3月11日上市）&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;苹果iOS 4.3版本升级步骤 …&lt;/strong&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;2011-03-10，苹果iOS 4.3固件升级正式提供更新和下载。&lt;/p&gt;
&lt;p&gt;苹果官网地址：&lt;a class="reference external" href="http://www.apple.com/ios/"&gt;http://www.apple.com/ios/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="iOS4.3" src="http://images.apple.com/ipod/home/images/promobar_ios_20110302.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;苹果iOS4.3更新特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;为GSM网络iPhone4的无线热点功能（Personal Hotspot for iPhone 4）&lt;/li&gt;
&lt;li&gt;Safari浏览器性能增强（Safari Performance）&lt;/li&gt;
&lt;li&gt;家庭共享iTunes数据库（iTunes Home Sharing）&lt;/li&gt;
&lt;li&gt;无线点播功能增强（AirPlay Enhancements）&lt;/li&gt;
&lt;li&gt;自定义iPad侧开关功能（iPad Side Switch）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;苹果iOS 4.3版本支持设备包括&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iPhone 4（GSM/WCDMA版本）&lt;/li&gt;
&lt;li&gt;iPhone 3GS&lt;/li&gt;
&lt;li&gt;iPod touch3/4代&lt;/li&gt;
&lt;li&gt;iPad2（3月11日上市）&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;苹果iOS 4.3版本升级步骤：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="iTunes update" src="http://images.apple.com/ios/images/easy_bg_20110302.jpg" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;将设备与电脑连接，并启动iTunes；&lt;/li&gt;
&lt;li&gt;自动或手动检查设备版本更新；&lt;/li&gt;
&lt;li&gt;根据提示进行备份；&lt;/li&gt;
&lt;li&gt;阅读条款，进行下载更新（选择“仅下载”，后续步骤有变化）；&lt;/li&gt;
&lt;li&gt;升级后需要连接苹果官方进行验证，稍做等待；&lt;/li&gt;
&lt;li&gt;同步iTunes资料，升级完毕。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;以上新闻部分引用&lt;a class="reference external" href="http://www.cnbeta.com/articles/136775.htm"&gt;CNbeta&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;温馨的提示：破解越狱之类设备请不要更新&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>ObjectiveC 深浅拷贝学习</title><link href="https://magicalboy.com/objectivec-copy-and-mutablecopy.html" rel="alternate"></link><published>2011-03-09T04:13:00+08:00</published><updated>2011-03-09T04:13:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-03-09:/objectivec-copy-and-mutablecopy.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;在ObjC中，什么是深浅拷贝？&lt;/strong&gt;
深浅拷贝分别指深拷贝和浅拷贝，即mutableCopy和copy方法。
copy复制一个不可变对象，而mutableCopy复制一个mutable可变对象。
什么时候用到深浅拷贝？下面举几个例子说明。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;非容器类对象&lt;/h2&gt;
&lt;p&gt;如NSString，NSNumber等一类对象&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// 非容器类对象
NSString *str &lt;span class="o"&gt;=&lt;/span&gt; &amp;#64;&lt;span class="s2"&gt;&amp;quot;origin string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSString *strCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;str copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableString *mstrCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;str mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mstrCopy appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;??&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;查看内存可以发现，str和strCopy指向的是同一块内存区域，我们称之为弱引用（weak
reference）。而mstrCopy是真正的复制，系统为其分配了新内存空间，保存从str复制过来的字符串值。从最后一行代码中修改这些值而不影响str和strCopy中可证明。&lt;/p&gt;
&lt;p&gt;示例2：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSMutableString *mstr &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSMutableString stringWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSString *strCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mstr copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableString *mstrCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mstr copy …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;在ObjC中，什么是深浅拷贝？&lt;/strong&gt;
深浅拷贝分别指深拷贝和浅拷贝，即mutableCopy和copy方法。
copy复制一个不可变对象，而mutableCopy复制一个mutable可变对象。
什么时候用到深浅拷贝？下面举几个例子说明。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;非容器类对象&lt;/h2&gt;
&lt;p&gt;如NSString，NSNumber等一类对象&lt;/p&gt;
&lt;p&gt;示例1：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
// 非容器类对象
NSString *str &lt;span class="o"&gt;=&lt;/span&gt; &amp;#64;&lt;span class="s2"&gt;&amp;quot;origin string&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSString *strCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;str copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableString *mstrCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;str mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mstrCopy appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;??&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;查看内存可以发现，str和strCopy指向的是同一块内存区域，我们称之为弱引用（weak
reference）。而mstrCopy是真正的复制，系统为其分配了新内存空间，保存从str复制过来的字符串值。从最后一行代码中修改这些值而不影响str和strCopy中可证明。&lt;/p&gt;
&lt;p&gt;示例2：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSMutableString *mstr &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSMutableString stringWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;origin&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSString *strCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mstr copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableString *mstrCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mstr copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableString *mstrMCopy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mstr mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
//&lt;span class="o"&gt;[&lt;/span&gt;mstrCopy appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;1111&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
//error &lt;span class="o"&gt;[&lt;/span&gt;mstr appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;222&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mstrMCopy appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;333&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;以上四个对象所分配的内存都是不一样的。而且对于mstrCopy，它所指向的其实是一个imutable对象，是不可改变的，所以会出错。这点要注意，好好理解。
&lt;strong&gt;小结：&lt;/strong&gt; 对于非容器类对象，有：&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;如果对一个不可变对象复制，copy是指针复制，即浅拷贝；而mutableCopy则是对象复制，即深拷贝。（示例1）&lt;/li&gt;
&lt;li&gt;如果是对可变对象复制，都是深拷贝，但copy复制返回的对象是不可变的。（示例2）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;容器类对象深浅复制&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;img alt="Collections copy" src="http://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Collections/Art/CopyingCollections.jpg" style="width: 500px;" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;比如NSArray，NSDictionary等。对于容器类本身，上面讨论的结论也适用的，下面探讨的是复制后容器内对象的变化。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;示例3&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
/* copy返回不可变对象，mutablecopy返回可变对象 */
NSArray *array1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSArray arrayWithObjects:&amp;#64;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&amp;#64;&lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&amp;#64;&lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,nil&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSArray *arrayCopy1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;array1 copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //arrayCopy1是和array同一个NSArray对象（指向相同的对象），包括array里面的元素也是指向相同的指针
NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;array1 retain count: %d&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;array1 retainCount&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;array1 retain count: %d&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;arrayCopy1 retainCount&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSMutableArray *mArrayCopy1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;array1 mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; //mArrayCopy1是array1的可变副本，指向的对象和array1不同，但是其中的元素和array1中的元素指向的还是同一个对象。mArrayCopy1还可以修改自己的对象
&lt;span class="o"&gt;[&lt;/span&gt;mArrayCopy1 addObject:&amp;#64;&lt;span class="s2"&gt;&amp;quot;de&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;mArrayCopy1 removeObjectAtIndex:0&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;array1和arrayCopy1是指针复制，而mArrayCopy1是对象复制，符合前面示例1讨论的结论。mArrayCopy1可以改变其内的元素：删除或添加。但容器内的元素内容都是浅拷贝。&lt;/p&gt;
&lt;p&gt;示例4&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSArray *mArray1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSArray arrayWithObjects:&lt;span class="o"&gt;[&lt;/span&gt;NSMutableString stringWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,&amp;#64;&lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&amp;#64;&lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,nil&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;mArray1 retain count: %d&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;mArray1 retainCount&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSArray *mArrayCopy2 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mArray1 copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;mArray1 retain count: %d&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;mArray1 retainCount&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     // mArray1和mArrayCopy2指向同一对象，retain值+1。
NSMutableArray *mArrayMCopy1 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mArray1 mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSLog&lt;span class="o"&gt;(&lt;/span&gt;&amp;#64;&lt;span class="s2"&gt;&amp;quot;mArray1 retain count: %d&amp;quot;&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;mArray1 retainCount&lt;span class="o"&gt;])&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     //mArrayCopy2和mArray1指向的是不一样的对象，但是其中的元素都是一样的对象&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;mdash&lt;span class="p"&gt;;&amp;amp;&lt;/span&gt;mdash&lt;span class="p"&gt;;&lt;/span&gt;同一个指针      NSMutableString *testString &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;mArray1 objectAtIndex:0&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     //testString &lt;span class="o"&gt;=&lt;/span&gt; &amp;#64;&lt;span class="s2"&gt;&amp;quot;1a1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;//这样会改变testString的指针，其实是将&amp;#64;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;ldquo&lt;span class="p"&gt;;&lt;/span&gt;1a1&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;rdquo&lt;span class="p"&gt;;&lt;/span&gt;临时对象赋给了testString
&lt;span class="o"&gt;[&lt;/span&gt;testString appendString:&amp;#64;&lt;span class="s2"&gt;&amp;quot; tail&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;//这样以上三个数组的首元素都被改变了
&lt;/pre&gt;
&lt;p&gt;由此可见，对于容器而言，其元素对象始终是指针复制。如果需要元素对象也是对象复制，就需要实现深拷贝。&lt;a class="reference external" href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Collections/Articles/Copying.html"&gt;http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/Collections/Articles/Copying.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;示例5&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
NSArray *array &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSArray arrayWithObjects:&lt;span class="o"&gt;[&lt;/span&gt;NSMutableString stringWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;first&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,&lt;span class="o"&gt;[&lt;/span&gt;NSStringstringWithString:&amp;#64;&lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,&amp;#64;&lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,nil&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSArray *deepCopyArray&lt;span class="o"&gt;=[[&lt;/span&gt;NSArray alloc&lt;span class="o"&gt;]&lt;/span&gt; initWithArray: array copyItems: YES&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSArray* &lt;span class="nv"&gt;trueDeepCopyArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;NSKeyedUnarchiver unarchiveObjectWithData:&lt;span class="o"&gt;[&lt;/span&gt;NSKeyedArchiver archivedDataWithRootObject: array&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;trueDeepCopyArray是完全意义上的深拷贝，而deepCopyArray则不是，对于deepCopyArray内的不可变元素其还是指针复制。
或者我们自己实现深拷贝的方法。因为如果容器的某一元素是不可变的，那你复制完后该对象仍旧是不能改变的，因此只需要指针复制即可。除非你对容器内的元素重新赋值，否则指针复制即已足够。
举个例子，[[array
objectAtIndex:0]appendstring:&amp;#64;”sd”]后其他的容器内对象并不会受影响。[[array
objectAtIndex:1]和[[deepCopyArray
objectAtIndex:0]尽管是指向同一块内存，但是我们没有办法对其进行修改——因为它是不可改变的。所以指针复制已经足够。所以这并不是完全意义上的深拷贝。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;自己实现深拷贝的方法&lt;/h2&gt;
&lt;p&gt;NSDictionaryMutableDeepCopy.h&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&amp;#64;interface NSDictionary&lt;span class="o"&gt;(&lt;/span&gt;MutableDeepCopy&lt;span class="o"&gt;)&lt;/span&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;NSMutableDictionary *&lt;span class="o"&gt;)&lt;/span&gt;mutableDeepCopy&lt;span class="p"&gt;;&lt;/span&gt;
&amp;#64;end
&lt;/pre&gt;
&lt;p&gt;NSDictionaryMutableDeepCopy.m&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="c1"&gt;#import &amp;quot;NSDictionaryMutableDeepCopy.h&amp;quot;
&lt;/span&gt;&amp;#64;implementation NSDictionary&lt;span class="o"&gt;(&lt;/span&gt;MutableDeepCopy&lt;span class="o"&gt;)&lt;/span&gt;
- &lt;span class="o"&gt;(&lt;/span&gt;NSMutableDictionary *&lt;span class="o"&gt;)&lt;/span&gt;mutableDeepCopy &lt;span class="o"&gt;{&lt;/span&gt;
&amp;nbsp;NSMutableDictionary *ret &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;NSMutableDictionary alloc&lt;span class="o"&gt;]&lt;/span&gt;
&amp;nbsp;initWithCapacity:&lt;span class="o"&gt;[&lt;/span&gt;self count&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
NSArray *keys &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;self allKeys&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;id key in keys&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    id &lt;span class="nv"&gt;oneValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;self valueForKey:key&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    id &lt;span class="nv"&gt;oneCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; nil&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([&lt;/span&gt;oneValue respondsToSelector:&amp;#64;selector&lt;span class="o"&gt;(&lt;/span&gt;mutableDeepCopy&lt;span class="o"&gt;)])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
         &lt;span class="nv"&gt;oneCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;oneValue mutableDeepCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;([&lt;/span&gt;oneValue respondsToSelector:&amp;#64;selector&lt;span class="o"&gt;(&lt;/span&gt;mutableCopy&lt;span class="o"&gt;)])&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;oneCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;oneValue mutableCopy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;oneCopy&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; nil&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
         &lt;span class="nv"&gt;oneCopy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;oneValue copy&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;[&lt;/span&gt;ret setValue:oneCopy forKey:key&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; ret&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&amp;#64;end
&lt;/pre&gt;
&lt;p&gt;使用类别方法来实现。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;自定义对象&lt;/h2&gt;
&lt;p&gt;如果是我们定义的对象，那么我们自己要实现NSCopying,NSMutableCopying这样就能调用copy和mutablecopy了。举个例子：
&lt;tt class="docutils literal"&gt;&amp;#64;interface MyObj : NSObject {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; NSMutableString *name;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; NSString *imutableStr;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int age; } &amp;#64;property (nonatomic, retain) NSMutableString *name; &amp;#64;property (nonatomic, retain) NSString *imutableStr; &amp;#64;property (nonatomic) int age;&amp;nbsp;&amp;nbsp; &amp;#64;end&amp;nbsp;&amp;nbsp; &amp;#64;implementation MyObj &amp;#64;synthesize name; &amp;#64;synthesize age; &amp;#64;synthesize imutableStr; - (id)init {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (self = [super init])&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; self.name = [[NSMutableString alloc]init];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; self.imutableStr = [[NSString alloc]init];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; age = &lt;span class="pre"&gt;-1;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return self; }&amp;nbsp;&amp;nbsp; - (void)dealloc {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [name release];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [imutableStr release];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; [super dealloc]; } - &lt;span class="pre"&gt;(id)copyWithZone:(NSZone&lt;/span&gt; *)zone {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; MyObj *copy = &lt;span class="pre"&gt;[[[self&lt;/span&gt; class] allocWithZone:zone] init];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;name&lt;/span&gt; = [name copy];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;imutableStr&lt;/span&gt; = [imutableStr copy]; //&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;name&lt;/span&gt; = [name &lt;span class="pre"&gt;copyWithZone:zone];;&lt;/span&gt; //&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;imutableStr&lt;/span&gt; = [name &lt;span class="pre"&gt;copyWithZone:zone];//&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;age&lt;/span&gt; = age;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return copy; } - &lt;span class="pre"&gt;(id)mutableCopyWithZone:(NSZone&lt;/span&gt; *)zone {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; MyObj *copy = NSCopyObject(self, 0, zone);&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;name&lt;/span&gt; = [self.name mutableCopy];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;copy-&amp;gt;age&lt;/span&gt; = age;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return copy; } &amp;#64;end&lt;/tt&gt;
未完请继续讨论.. 本文参考了on my way的《&lt;a class="reference external" href="http://www.cnblogs.com/scorpiozj/archive/2011/01/25/1944496.html"&gt;ios
深浅拷贝学习&lt;/a&gt;》&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Objective-C"></category></entry><entry><title>Apple iPad2 正式发布</title><link href="https://magicalboy.com/apple-ipad2-release.html" rel="alternate"></link><published>2011-03-03T08:17:00+08:00</published><updated>2011-03-03T08:17:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-03-03:/apple-ipad2-release.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="%20http://zh.wikipedia.org/wiki/IPad_2"&gt;iPad
2&lt;/a&gt;是苹果公司设计开发并销售的第二代平板电脑，主要面向视听媒体，包括图书、期刊、电影、音乐、游戏和网络内容的平台。它的大小和重量介于市面上的智能手机和笔记本电脑之间。2011年3月2日上午10点（PST:18点），苹果公司在耶尔巴布埃纳艺术中心发布了这款产品。（Via
&lt;a class="reference external" href="http://zh.wikipedia.org/wiki/IPad_2"&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我喜欢的特点&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;大陆价格变化：(二代发布后 全部机型降价1100元)&lt;/div&gt;
&lt;div class="line"&gt;iPad2全球上市：3.11&lt;/div&gt;
&lt;div class="line"&gt;中国行货上市：日期未定&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;处理器：A5&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="Apple A5 CPU" src="%20http://images.apple.com/ipad/home/images/image_chip_20110302.png" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;苹果自行研发的A5处理器,双核心构架,图形处理能力是前代9倍。1.08GHz 双核
A5 专门设计的高性能低功耗系统级芯片。&lt;/div&gt;
&lt;div class="line"&gt;绘图: PowerVR SGX543MP (cores: 2-4)&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;屏幕：&lt;/div&gt;
&lt;div class="line"&gt;与一代相比没有任何改动&lt;/div&gt;
&lt;div class="line"&gt;屏幕尺寸：9.7英寸&lt;/div&gt;
&lt;div class="line"&gt;屏幕分辨率：1024×768&lt;/div&gt;
&lt;div class="line"&gt;特点：多点触摸LED背光IPS屏 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="%20http://zh.wikipedia.org/wiki/IPad_2"&gt;iPad
2&lt;/a&gt;是苹果公司设计开发并销售的第二代平板电脑，主要面向视听媒体，包括图书、期刊、电影、音乐、游戏和网络内容的平台。它的大小和重量介于市面上的智能手机和笔记本电脑之间。2011年3月2日上午10点（PST:18点），苹果公司在耶尔巴布埃纳艺术中心发布了这款产品。（Via
&lt;a class="reference external" href="http://zh.wikipedia.org/wiki/IPad_2"&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我喜欢的特点&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;大陆价格变化：(二代发布后 全部机型降价1100元)&lt;/div&gt;
&lt;div class="line"&gt;iPad2全球上市：3.11&lt;/div&gt;
&lt;div class="line"&gt;中国行货上市：日期未定&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;处理器：A5&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="Apple A5 CPU" src="%20http://images.apple.com/ipad/home/images/image_chip_20110302.png" /&gt;&lt;/div&gt;
&lt;div class="line"&gt;苹果自行研发的A5处理器,双核心构架,图形处理能力是前代9倍。1.08GHz 双核
A5 专门设计的高性能低功耗系统级芯片。&lt;/div&gt;
&lt;div class="line"&gt;绘图: PowerVR SGX543MP (cores: 2-4)&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;屏幕：&lt;/div&gt;
&lt;div class="line"&gt;与一代相比没有任何改动&lt;/div&gt;
&lt;div class="line"&gt;屏幕尺寸：9.7英寸&lt;/div&gt;
&lt;div class="line"&gt;屏幕分辨率：1024×768&lt;/div&gt;
&lt;div class="line"&gt;特点：多点触摸LED背光IPS屏，防指纹涂层&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;传感器：三轴陀螺仪(iPhone4加入的新技术,动作感应更逼真)&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;摄像头：&lt;/div&gt;
&lt;div class="line"&gt;前后双摄像头&lt;/div&gt;
&lt;div class="line"&gt;背面的摄像头可以录制30帧每秒的720p视频及声音,同时支持5倍数码变焦&lt;/div&gt;
&lt;div class="line"&gt;前置摄像头可以拍摄30帧每秒的标准VGA的视频与声音&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;iPad2外观：&lt;/div&gt;
&lt;div class="line"&gt;机身尺寸：241.2×185.7×8.8mm(更薄)&lt;/div&gt;
&lt;div class="line"&gt;重量：0.601千克Wi-Fi版;0.613千克(WCDMA);0.607千克(CDMA2000)&lt;/div&gt;
&lt;div class="line"&gt;颜色：黑色,白色(两种颜色将同时上市)&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;更多信息请参考以下：&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ipad.tgbus.com/zt/ipad-cs/iPadVSiPad2.shtml"&gt;iPad两代参数详尽地对比&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.apple.com/ipad/"&gt;Apple - iPad - All-new design. Video calls. HD video. And
more.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>iOS模拟器截图工具</title><link href="https://magicalboy.com/ios-simulator-screenshots.html" rel="alternate"></link><published>2011-03-03T07:13:00+08:00</published><updated>2011-03-03T07:13:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-03-03:/ios-simulator-screenshots.html</id><summary type="html">&lt;p&gt;在这里推荐一个使用非常简单的iOS模拟器或也叫iPhone模拟器截图工具：&lt;a class="reference external" href="http://www.curioustimes.de/iphonesimulatorcropper/"&gt;iOS-Simulator
Cropper&lt;/a&gt;。对那些使用不了系统自带的截图功能的用户很有帮助，而且还帮我们处理好模拟器边角等效果。
&lt;strong&gt;以下是iOS4模拟器截图效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Game Center" class="aligncenter" src="https://lh6.googleusercontent.com/-ry7--lTWSqI/TnGvWJ8I85I/AAAAAAAAAJQ/2iX69BqaTSk/s800/iOS4_game_center.png" /&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;软件界面：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image1" src="http://www.curioustimes.de/iphonesimulatorcropper/files/page10-bildschirmfoto-2011-02-25-um-16.20.23.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;简单介绍：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;iOS-Simulator Cropper目前版本Version
2.7.1，支持七种截图选项。其中包括最新的iPhone4，还有iPad等。最有特色的是teehan+lax效果啦。另外Drop
iOS
Screenshots功能是将和iPhone模拟器一样大小的图片拖到图标的位置，就可以生成想要的效果。iOS-Simulator
Cropper还支持命令行使用方式，有需要和有兴趣就去其官网参考，在这不多做介绍了。&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;在这里推荐一个使用非常简单的iOS模拟器或也叫iPhone模拟器截图工具：&lt;a class="reference external" href="http://www.curioustimes.de/iphonesimulatorcropper/"&gt;iOS-Simulator
Cropper&lt;/a&gt;。对那些使用不了系统自带的截图功能的用户很有帮助，而且还帮我们处理好模拟器边角等效果。
&lt;strong&gt;以下是iOS4模拟器截图效果：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Game Center" class="aligncenter" src="https://lh6.googleusercontent.com/-ry7--lTWSqI/TnGvWJ8I85I/AAAAAAAAAJQ/2iX69BqaTSk/s800/iOS4_game_center.png" /&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;软件界面：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image1" src="http://www.curioustimes.de/iphonesimulatorcropper/files/page10-bildschirmfoto-2011-02-25-um-16.20.23.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;简单介绍：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;iOS-Simulator Cropper目前版本Version
2.7.1，支持七种截图选项。其中包括最新的iPhone4，还有iPad等。最有特色的是teehan+lax效果啦。另外Drop
iOS
Screenshots功能是将和iPhone模拟器一样大小的图片拖到图标的位置，就可以生成想要的效果。iOS-Simulator
Cropper还支持命令行使用方式，有需要和有兴趣就去其官网参考，在这不多做介绍了。&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="iOS Simulator Cropper"></category><category term="工具"></category></entry><entry><title>iPhone/iPod 定位技术简介</title><link href="https://magicalboy.com/gps-in-iphone-ipod.html" rel="alternate"></link><published>2011-02-28T05:55:00+08:00</published><updated>2011-02-28T05:55:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-28:/gps-in-iphone-ipod.html</id><summary type="html">&lt;p&gt;最近在做一个iPhone地图相关的应用，在这介绍在iPhone或iPod
touch中几种定位技术，顺便做下笔记。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;蜂窝基站定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;所有的iPhone都可以蜂窝三角网定位（cellular
triangulation）。利用附近的蜂窝基站的信号强弱来确定当前位置，比如中国移动的GSM信号基站，中国联通的CDMA等。蜂窝基站越多，定位数据越可靠。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;GPS、A-GPS定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;从 iPhone 3G起，iPhone就装备了卫星 GPS
接收器。GPS接收器同样采用三角网定位法，不同的是它使用轨道卫星发射的无线信号，而不是蜂窝基站的信号。但还有一种情况，A-GPS定位，Assisted-GPS，即辅助全球卫星定位系统，它却利用蜂窝基站的手机信号来配合传统的GPS卫星信号来迅速定位。一般GPS使用太空中的24颗人造卫星来进行三角定位
，以获得经纬度坐标，通常需要一个可视天空的开放环境和至少3颗GPS卫星信号才能进行3D定位。AGPS则利用手机基站的信号，辅以连接远程服务器的方式下载卫星星历
(英语：Almanac
Data)，再配合传统的GPS卫星接受器，让定位的速度更快。（Via
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Assisted_GPS"&gt;Assisted_GPS&lt;/a&gt;）。这种定位可精确到5m左右。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="GPS定位原理" src="http://upload.wikimedia.org/wikipedia/commons/9/9c/ConstellationGPS.gif" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;WiFi三角网定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;在iPod Touch上，地理位置是通过WiFi三角网定位实现的。iPod
Touch查询包含WiFi路由器位置的数据库，并根据附近的WiFi路由器信号强度来确定当前位置。这种方法的误差最大 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;最近在做一个iPhone地图相关的应用，在这介绍在iPhone或iPod
touch中几种定位技术，顺便做下笔记。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;蜂窝基站定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;所有的iPhone都可以蜂窝三角网定位（cellular
triangulation）。利用附近的蜂窝基站的信号强弱来确定当前位置，比如中国移动的GSM信号基站，中国联通的CDMA等。蜂窝基站越多，定位数据越可靠。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;GPS、A-GPS定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;从 iPhone 3G起，iPhone就装备了卫星 GPS
接收器。GPS接收器同样采用三角网定位法，不同的是它使用轨道卫星发射的无线信号，而不是蜂窝基站的信号。但还有一种情况，A-GPS定位，Assisted-GPS，即辅助全球卫星定位系统，它却利用蜂窝基站的手机信号来配合传统的GPS卫星信号来迅速定位。一般GPS使用太空中的24颗人造卫星来进行三角定位
，以获得经纬度坐标，通常需要一个可视天空的开放环境和至少3颗GPS卫星信号才能进行3D定位。AGPS则利用手机基站的信号，辅以连接远程服务器的方式下载卫星星历
(英语：Almanac
Data)，再配合传统的GPS卫星接受器，让定位的速度更快。（Via
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Assisted_GPS"&gt;Assisted_GPS&lt;/a&gt;）。这种定位可精确到5m左右。&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="GPS定位原理" src="http://upload.wikimedia.org/wikipedia/commons/9/9c/ConstellationGPS.gif" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;WiFi三角网定位：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;在iPod Touch上，地理位置是通过WiFi三角网定位实现的。iPod
Touch查询包含WiFi路由器位置的数据库，并根据附近的WiFi路由器信号强度来确定当前位置。这种方法的误差最大，而且，如果附近没有已知的WiFi热点的话，将无法进行定位。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;三轴陀螺仪：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;三轴陀螺仪在定位时，与显示位置的地图结合使用来确定方向。因为三轴陀螺仪具有指南针的功能，但它处于静止时，任何形式的地理位置定位都不能提供方向，不管它有多准确的定位。&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>为iPhone Apps添加Splash屏显</title><link href="https://magicalboy.com/add-splash-screen-for-your-iphone-apps.html" rel="alternate"></link><published>2011-02-26T04:03:00+08:00</published><updated>2011-02-26T04:03:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-26:/add-splash-screen-for-your-iphone-apps.html</id><summary type="html">&lt;p&gt;我们打开iPhone
Apps时经常可看到一个欢迎页面，其实它就是一张全屏大小的图片，主要用来表示当前应用的名称，版权和正在加载这些信息。
为你自己的iPhone Apps添加Splash
Screen，有多种方法，在这就介绍最简单的吧。
准备好一张splash图片，全屏大小，命名为Default.png并保存到项目的Resources目录下。运行查看效果，这个图像在程序完全加载之前显示在屏幕上了。
Splash图像显示的时长跟你的程序大小有关，如果程序很快载入了，此图片就马上消失了，这有可能导致还没看清楚图像的内容。还有一种情况，有些程序需要加载的内容在服务器上，也不能准确地说图像消失就能显示或使用这个应用。
在这里还有一个简单的延长Splash屏显的时间。打开XXXAppDelegate.m，加入：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
...
- &lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt;applicationDidFinishLaunching:&lt;span class="o"&gt;(&lt;/span&gt;UIApplication *&lt;span class="o"&gt;)&lt;/span&gt;application &lt;span class="o"&gt;{&lt;/span&gt;
     //使splash screen 延长3秒消失
     &lt;span class="o"&gt;[&lt;/span&gt;NSThread sleepForTimeInterval:3.0&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;[&lt;/span&gt;window addSubview:navController.view&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;[&lt;/span&gt;window makeKeyAndVisible&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
...
&lt;/pre&gt;
&lt;p&gt;根据具体情况修改延时秒数可达到以假乱真的效果，很不错哦。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;我们打开iPhone
Apps时经常可看到一个欢迎页面，其实它就是一张全屏大小的图片，主要用来表示当前应用的名称，版权和正在加载这些信息。
为你自己的iPhone Apps添加Splash
Screen，有多种方法，在这就介绍最简单的吧。
准备好一张splash图片，全屏大小，命名为Default.png并保存到项目的Resources目录下。运行查看效果，这个图像在程序完全加载之前显示在屏幕上了。
Splash图像显示的时长跟你的程序大小有关，如果程序很快载入了，此图片就马上消失了，这有可能导致还没看清楚图像的内容。还有一种情况，有些程序需要加载的内容在服务器上，也不能准确地说图像消失就能显示或使用这个应用。
在这里还有一个简单的延长Splash屏显的时间。打开XXXAppDelegate.m，加入：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
...
- &lt;span class="o"&gt;(&lt;/span&gt;void&lt;span class="o"&gt;)&lt;/span&gt;applicationDidFinishLaunching:&lt;span class="o"&gt;(&lt;/span&gt;UIApplication *&lt;span class="o"&gt;)&lt;/span&gt;application &lt;span class="o"&gt;{&lt;/span&gt;
     //使splash screen 延长3秒消失
     &lt;span class="o"&gt;[&lt;/span&gt;NSThread sleepForTimeInterval:3.0&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;[&lt;/span&gt;window addSubview:navController.view&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;[&lt;/span&gt;window makeKeyAndVisible&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
...
&lt;/pre&gt;
&lt;p&gt;根据具体情况修改延时秒数可达到以假乱真的效果，很不错哦。&lt;/p&gt;
</content><category term="iOS"></category><category term="iPhone"></category></entry><entry><title>网页颜色RGB转换UIColor</title><link href="https://magicalboy.com/rgb2uicolor.html" rel="alternate"></link><published>2011-02-23T02:48:00+08:00</published><updated>2011-02-23T02:48:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-23:/rgb2uicolor.html</id><summary type="html">&lt;p&gt;在iPhone开发中遇到要使用网页颜色代码时，发现UIColor的引用文档中没有将网页颜色转换为RGB码值的方法，且UIColor中的RGB分别用0到1之间的数值来表示的，要将16进制的网页颜色代码#ff3245转换为UIColor中RGB值时会觉得有点麻烦。&lt;/p&gt;
&lt;p&gt;UIColor Class Reference中的方法&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html"&gt;–
initWithRed:green:blue:alpha:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html"&gt;+
colorWithRed:green:blue:alpha:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个方法都是使用指定的RGB值和alpha值来创建和返回一个颜色对象，不同的是第一个是实例方法，另一个是类方法。&lt;/p&gt;
&lt;p&gt;其实这只是进制之间的换算，在这里我在网上找了一个直接输入网页颜色RGB值转换UIColor代码的小JS应用：&lt;a class="reference external" href="http://magicalboy.com/apps/RGB2UIColor.html"&gt;RGB2UIcolor&lt;/a&gt;。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;在iPhone开发中遇到要使用网页颜色代码时，发现UIColor的引用文档中没有将网页颜色转换为RGB码值的方法，且UIColor中的RGB分别用0到1之间的数值来表示的，要将16进制的网页颜色代码#ff3245转换为UIColor中RGB值时会觉得有点麻烦。&lt;/p&gt;
&lt;p&gt;UIColor Class Reference中的方法&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html"&gt;–
initWithRed:green:blue:alpha:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIColor_Class/Reference/Reference.html"&gt;+
colorWithRed:green:blue:alpha:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两个方法都是使用指定的RGB值和alpha值来创建和返回一个颜色对象，不同的是第一个是实例方法，另一个是类方法。&lt;/p&gt;
&lt;p&gt;其实这只是进制之间的换算，在这里我在网上找了一个直接输入网页颜色RGB值转换UIColor代码的小JS应用：&lt;a class="reference external" href="http://magicalboy.com/apps/RGB2UIColor.html"&gt;RGB2UIcolor&lt;/a&gt;。&lt;/p&gt;
</content></entry><entry><title>在Xcode项目中读取plist文件</title><link href="https://magicalboy.com/read-plist-file-in-xcode.html" rel="alternate"></link><published>2011-02-22T02:37:00+08:00</published><updated>2011-02-22T02:37:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-22:/read-plist-file-in-xcode.html</id><summary type="html">&lt;p&gt;.plist(Property list)
文件即属性列表文件，类似于XML格式的一种配置文件，里面可保存序列化的对象。这种plist文件在Mac
OS X及相关产品中常见到，下面是在Xcode中如果读取或写入plist文件的示例。&lt;/p&gt;
&lt;div class="section" id="plist"&gt;
&lt;h2&gt;读取一般的plist文件&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;// 取得文件路径 ... NSString *plistPath = [[NSBundle mainBundle] &lt;span class="pre"&gt;pathForResource:&amp;#64;&amp;quot;Shopping-Info&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;ofType:&amp;#64;&amp;quot;plist&amp;quot;];&lt;/span&gt; // 读取到一个NSDictionary NSDictionary *dictionary = [[NSDictionary alloc] initWithContentsOfFile:plistPath]; // 读取到一个NSArray NSArray *array = [[NSArray alloc] initWithContentsOfFile:plistPath]; ...&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xxx-info-plistinfo-plist"&gt;
&lt;h2&gt;读取项目主配置文件xxx-Info.plist或Info.plist&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;... NSDictionary *dict = [[NSBundle mainBundle] infoDictionary]; NSString *URLString = [dict &lt;span class="pre"&gt;objectForKey:&amp;#64;&amp;quot;Bundle&lt;/span&gt; &lt;span class="pre"&gt;version&amp;quot;];&lt;/span&gt; ...&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;-EOF-&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;.plist(Property list)
文件即属性列表文件，类似于XML格式的一种配置文件，里面可保存序列化的对象。这种plist文件在Mac
OS X及相关产品中常见到，下面是在Xcode中如果读取或写入plist文件的示例。&lt;/p&gt;
&lt;div class="section" id="plist"&gt;
&lt;h2&gt;读取一般的plist文件&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;// 取得文件路径 ... NSString *plistPath = [[NSBundle mainBundle] &lt;span class="pre"&gt;pathForResource:&amp;#64;&amp;quot;Shopping-Info&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;ofType:&amp;#64;&amp;quot;plist&amp;quot;];&lt;/span&gt; // 读取到一个NSDictionary NSDictionary *dictionary = [[NSDictionary alloc] initWithContentsOfFile:plistPath]; // 读取到一个NSArray NSArray *array = [[NSArray alloc] initWithContentsOfFile:plistPath]; ...&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="xxx-info-plistinfo-plist"&gt;
&lt;h2&gt;读取项目主配置文件xxx-Info.plist或Info.plist&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;... NSDictionary *dict = [[NSBundle mainBundle] infoDictionary]; NSString *URLString = [dict &lt;span class="pre"&gt;objectForKey:&amp;#64;&amp;quot;Bundle&lt;/span&gt; &lt;span class="pre"&gt;version&amp;quot;];&lt;/span&gt; ...&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;-EOF-&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>移除iPhone图标中的光泽效果</title><link href="https://magicalboy.com/remove-shine-gloss-effect-on-iphone-icon.html" rel="alternate"></link><published>2011-02-16T03:55:00+08:00</published><updated>2011-02-16T03:55:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-16:/remove-shine-gloss-effect-on-iphone-icon.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在Xcode中为iPhone应用增加icon图标的时，Xcode默认会自动为图标圆角化，并在图标顶部增加闪耀光泽效果，就像下面这样：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/gloss-icon.png"&gt;&lt;img alt="gloss-icon" class="alignnone size-full wp-image-1083" src="http://magicalboy.com/wp-content/uploads/2011/02/gloss-icon.png" style="width: 236px; height: 91px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在图中我们可以与系统的Photos和Settings图标对比，很明显可看出增加的光泽效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;我们可以通过修改Info.plist文件来决定是否开启这样的效果，使用Xcode或文本编辑器打开项目中的XXX-Info.plist文件，增加以下代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;UIPrerenderedIcon&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;在Xcode中需使用&amp;quot;Souce Code&amp;quot;或&amp;quot;Plain
Text&amp;quot;方式打开才能看到并修改XML属性代码。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;或者直接在Xcode中打打开来修改，点击增加在下拉列表中选择&amp;quot;Icon already
includes gloss and bevel effects&amp;quot;项并在其值中单击启用即可，如图：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/Icon-gloss-effect.png"&gt;&lt;img alt="Icon-gloss-effect" class="alignnone size-full wp-image-1084" src="http://magicalboy.com/wp-content/uploads/2011/02/Icon-gloss-effect.png" style="width: 438px; height: 217px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;没有启用光泽效果的图标效果图如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/nongloss-icon.png"&gt;&lt;img alt="nongloss-icon" class="alignnone size-full wp-image-1085" src="http://magicalboy.com/wp-content/uploads/2011/02/nongloss-icon.png" style="width: 237px; height: 93px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;从图中可看出来，图标的黑色和背景黑色已经分不清边界了，可根据需要使用光泽效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;更改的效果可能不会马上生效，[STRIKEOUT:因为图标已经缓存，可更换图片再换回来以更改缓存]，删除App或者在iPhone模拟器菜单中选择“还原内容和设置...”来重置所有设置。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ios-5"&gt;
&lt;h2&gt;2013-08-02更新：iOS 5+支持&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;以上设置可以支持iOS5以下，iOS5.0以上需要设置 …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在Xcode中为iPhone应用增加icon图标的时，Xcode默认会自动为图标圆角化，并在图标顶部增加闪耀光泽效果，就像下面这样：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/gloss-icon.png"&gt;&lt;img alt="gloss-icon" class="alignnone size-full wp-image-1083" src="http://magicalboy.com/wp-content/uploads/2011/02/gloss-icon.png" style="width: 236px; height: 91px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在图中我们可以与系统的Photos和Settings图标对比，很明显可看出增加的光泽效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;我们可以通过修改Info.plist文件来决定是否开启这样的效果，使用Xcode或文本编辑器打开项目中的XXX-Info.plist文件，增加以下代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;UIPrerenderedIcon&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;在Xcode中需使用&amp;quot;Souce Code&amp;quot;或&amp;quot;Plain
Text&amp;quot;方式打开才能看到并修改XML属性代码。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;或者直接在Xcode中打打开来修改，点击增加在下拉列表中选择&amp;quot;Icon already
includes gloss and bevel effects&amp;quot;项并在其值中单击启用即可，如图：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/Icon-gloss-effect.png"&gt;&lt;img alt="Icon-gloss-effect" class="alignnone size-full wp-image-1084" src="http://magicalboy.com/wp-content/uploads/2011/02/Icon-gloss-effect.png" style="width: 438px; height: 217px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;没有启用光泽效果的图标效果图如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/nongloss-icon.png"&gt;&lt;img alt="nongloss-icon" class="alignnone size-full wp-image-1085" src="http://magicalboy.com/wp-content/uploads/2011/02/nongloss-icon.png" style="width: 237px; height: 93px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;从图中可看出来，图标的黑色和背景黑色已经分不清边界了，可根据需要使用光泽效果。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;更改的效果可能不会马上生效，[STRIKEOUT:因为图标已经缓存，可更换图片再换回来以更改缓存]，删除App或者在iPhone模拟器菜单中选择“还原内容和设置...”来重置所有设置。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ios-5"&gt;
&lt;h2&gt;2013-08-02更新：iOS 5+支持&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;以上设置可以支持iOS5以下，iOS5.0以上需要设置：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="image3" src="http://i.stack.imgur.com/TagQo.png" /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/02/prerenderIcon.jpg"&gt;&lt;img alt="prerenderIcon" class="alignleft size-full wp-image-43187" src="http://magicalboy.com/wp-content/uploads/2011/02/prerenderIcon.jpg" style="width: 622px; height: 472px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category></entry><entry><title>iWebKit使用体会</title><link href="https://magicalboy.com/iwebkit-use-experience.html" rel="alternate"></link><published>2011-02-10T09:44:00+08:00</published><updated>2011-02-10T09:44:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-10:/iwebkit-use-experience.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://snippetspace.com/projects/iwebkit/"&gt;iWebKit&lt;/a&gt;是一个帮助我们创建iPhone,
iPod
Touch和iPad的webapp。iWebKit很容易上手，对HTML的知识几乎没什么要求，只要略懂HTML的人不用多少分钟就可以写出很专业的用词界面的网站页面。容易使用，加载速度快和兼容性、扩展性好是最大的特点。&lt;/p&gt;
&lt;p&gt;&lt;img alt="iWebKit" src="http://snippetspace.com/wp-content/uploads/2010/09/iphone.png" style="height: 280px;" /&gt;&lt;/p&gt;
&lt;p&gt;One coin has two sides，iWebKit不好方面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;没有详细的使用文档API，可能是因为它太简单了吧。&lt;/li&gt;
&lt;li&gt;想自定义样式或主题比较麻烦，使用的都是iOS系统的标准用词界面，不利于个性化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐iPhone Web
Apps入门开发者使用。开发调试时可使用WebKit内核的现代浏览器，比如Safari、Chrome。不支持Firefox。相关的Web
Apps框架还有iUI，JQTouch等。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://snippetspace.com/projects/iwebkit/"&gt;iWebKit&lt;/a&gt;是一个帮助我们创建iPhone,
iPod
Touch和iPad的webapp。iWebKit很容易上手，对HTML的知识几乎没什么要求，只要略懂HTML的人不用多少分钟就可以写出很专业的用词界面的网站页面。容易使用，加载速度快和兼容性、扩展性好是最大的特点。&lt;/p&gt;
&lt;p&gt;&lt;img alt="iWebKit" src="http://snippetspace.com/wp-content/uploads/2010/09/iphone.png" style="height: 280px;" /&gt;&lt;/p&gt;
&lt;p&gt;One coin has two sides，iWebKit不好方面：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;没有详细的使用文档API，可能是因为它太简单了吧。&lt;/li&gt;
&lt;li&gt;想自定义样式或主题比较麻烦，使用的都是iOS系统的标准用词界面，不利于个性化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐iPhone Web
Apps入门开发者使用。开发调试时可使用WebKit内核的现代浏览器，比如Safari、Chrome。不支持Firefox。相关的Web
Apps框架还有iUI，JQTouch等。&lt;/p&gt;
</content></entry><entry><title>2011春节贺语</title><link href="https://magicalboy.com/2011-spring-festival-words.html" rel="alternate"></link><published>2011-02-09T07:18:00+08:00</published><updated>2011-02-09T07:18:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-02-09:/2011-spring-festival-words.html</id><summary type="html">&lt;p&gt;&lt;img alt="2010春节" src="http://t0.gstatic.com/images?q=tbn:ANd9GcQcN-4pDiL4pw0gFc0FuOWbeQLSZoNLQd61vBclGHbxSwfX0kEVYg" /&gt;&lt;/p&gt;
&lt;p&gt;又一年的春节过去了，意味着又长了一岁哈。&lt;/p&gt;
&lt;p&gt;回家过年，最大的心愿是一家人吃个年夜饭，给家人，老人一封大大的利是，祝他们身体健康。&lt;/p&gt;
&lt;p&gt;新年新气象，在新一年里，祝大家身体健康，技术进步，来年赚更多的钱回家过年！&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;img alt="2010春节" src="http://t0.gstatic.com/images?q=tbn:ANd9GcQcN-4pDiL4pw0gFc0FuOWbeQLSZoNLQd61vBclGHbxSwfX0kEVYg" /&gt;&lt;/p&gt;
&lt;p&gt;又一年的春节过去了，意味着又长了一岁哈。&lt;/p&gt;
&lt;p&gt;回家过年，最大的心愿是一家人吃个年夜饭，给家人，老人一封大大的利是，祝他们身体健康。&lt;/p&gt;
&lt;p&gt;新年新气象，在新一年里，祝大家身体健康，技术进步，来年赚更多的钱回家过年！&lt;/p&gt;
</content></entry><entry><title>Android中的layout_weight问题</title><link href="https://magicalboy.com/layout_weight-in-android.html" rel="alternate"></link><published>2011-01-25T16:53:00+08:00</published><updated>2011-01-25T16:53:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-25:/layout_weight-in-android.html</id><summary type="html">&lt;p&gt;在学习 Android 开发时，在看到官网的一个线性布局例子&lt;a class="reference external" href="http://developer.android.com/resources/tutorials/views/hello-linearlayout.html"&gt;Linear Layout
tutorial&lt;/a&gt;，通过指定android:layout_weight的值来改变子视图在布局中占用的比例大小，发现运行结果与自己写的相反。到底哪里忽略了呢？直接上代码。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?xml&lt;/span&gt; &lt;span class="pre"&gt;version=&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:orientation=&amp;quot;vertical&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:background=&amp;quot;#aa0000&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:text=&amp;quot;Hello World, LinearLayout!&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:gravity=&amp;quot;center&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;1&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;/&amp;gt;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;fill_parent …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;在学习 Android 开发时，在看到官网的一个线性布局例子&lt;a class="reference external" href="http://developer.android.com/resources/tutorials/views/hello-linearlayout.html"&gt;Linear Layout
tutorial&lt;/a&gt;，通过指定android:layout_weight的值来改变子视图在布局中占用的比例大小，发现运行结果与自己写的相反。到底哪里忽略了呢？直接上代码。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?xml&lt;/span&gt; &lt;span class="pre"&gt;version=&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:orientation=&amp;quot;vertical&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:background=&amp;quot;#aa0000&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:text=&amp;quot;Hello World, LinearLayout!&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:gravity=&amp;quot;center&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;1&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;/&amp;gt;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:text=&amp;quot;这是第二行&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:gravity=&amp;quot;center&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;2&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;/&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;运行结果：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/linear_wtf.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-1030" src="http://magicalboy.com/wp-content/uploads/2011/01/linear_wtf.png" style="width: 320px; height: 480px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;结果分析：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;嗯哼，例子中使用LinearLayout垂直布局，有两个文本视图控件，它们除了颜色和文本不同之外，layout_weight属性也不同。但官方的Linear
Layout
tutorial例子中，将控件的layout_weight更改得出的结果刚好相反，应该是weight值越大的占的空间越大才对吧。先看下官方例子中修改过后的代码和结果：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?xml&lt;/span&gt; &lt;span class="pre"&gt;version=&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:orientation=&amp;quot;vertical&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;1&amp;quot;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:gravity=&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:background=&amp;quot;#aa0000&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;1&amp;quot;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:gravity=&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:background=&amp;quot;#00aa00&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;2&amp;quot;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:gravity=&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:background=&amp;quot;#0000aa&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;3&amp;quot;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:gravity=&amp;quot;center_horizontal&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:background=&amp;quot;#aaaa00&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;4&amp;quot;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;2&amp;quot;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:layout_weight=&amp;quot;1&amp;quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;android:background=&amp;quot;#aa0000&amp;quot;/&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;2&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:background=&amp;quot;#00aa00&amp;quot;/&amp;gt;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;3&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:background=&amp;quot;#0000aa&amp;quot;/&amp;gt;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_width=&amp;quot;fill_parent&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:layout_weight=&amp;quot;4&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;android:background=&amp;quot;#aaaa00&amp;quot;/&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;修改layout_weight后的运行结果：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/linear_layout2.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-1031" src="http://magicalboy.com/wp-content/uploads/2011/01/linear_layout2.png" style="width: 320px; height: 480px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题原因&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;没错，结果相反了，在自己写的Demo中，weight值较大的视图反而变小了。仔细对比代码发现，原来文本视图中的高度属性被我设置成&amp;quot;fill_parent&amp;quot;，将它们改为&amp;quot;wrap_content&amp;quot;之后，再次运行结果：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/linear.png"&gt;&lt;img alt="image2" class="alignnone size-full wp-image-1032" src="http://magicalboy.com/wp-content/uploads/2011/01/linear.png" style="width: 320px; height: 480px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://developer.android.com/reference/android/widget"&gt;layout_weight&lt;/a&gt;
属性在文档中的定义&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;/LinearLayout.LayoutParams.html#attr_android:layout_weight&lt;/div&gt;
&lt;div class="line"&gt;Indicates how much of the extra space in the LinearLayout will be
allocated to the view associated with these LayoutParams. Specify
0 if the view should not be stretched. Otherwise the extra pixels
will be pro-rated among all views whose weight is greater than 0.&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;也即是说，weight是定义独立子视图的权重比例属性，表示占用父视图的剩余空间的比例，默认值为0。&lt;/div&gt;
&lt;div class="line"&gt;还需要注意的是，在同一个LinearLayout中的各个元素之间的 weight
是正向比例的，但是如果是各个LinearLayout之间的 weight 则是反向的。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.zhuhuang.com/2010/08/layout_weight-in-linearlayout-android/"&gt;有关LinearLayout的layout_weight属性的疑问&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/3995825/what-is-androidlayout-weight-meaning"&gt;What is android:layout_weight
meaning?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;== END ==&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>找不到 iAd.framework 的解决办法</title><link href="https://magicalboy.com/iad-framework-not-found-solutions.html" rel="alternate"></link><published>2011-01-21T06:27:00+08:00</published><updated>2011-01-21T06:27:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-21:/iad-framework-not-found-solutions.html</id><summary type="html">&lt;p&gt;在为项目添加iAD广告的时候，发现自己的SDK库没有iAd.framework。翻查了一下文档指定的路径
/System/Library/Frameworks/iAd.framework，确实不存在，后来在官方文档iOS技术概述中对
&lt;a class="reference external" href="http://www.apple.com.cn/developer/iphone/library/documentation/iPhone/Conceptual/iOs_TechOverview/iPhoneOSTechnologies/iPhoneOSTechnologies.html#//apple_ref/doc/uid/TP40007898-CH3-SW13"&gt;iAd.framework&lt;/a&gt;
介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 4.0引入了iAd框架
(iAd.framework)。您可以通过该框架在应用程序中发布横幅广告。广告会被放入到标准视图，您可以将这些视图加入到用户界面，并在合适的时机向用户展现。这些视图和苹果的公告服务相互协作，自动处理广告内容的加载和展现，同时也可以响应用户对广告的点击。&lt;/p&gt;
&lt;p&gt;如需进一步了解如何在应用程序当中使用iAd，请查看&lt;a class="reference external" href="http://developer.apple.com/iphone/library/documentation/UserExperience/Reference/iAd_ReferenceCollection/index.html#/apple_ref/doc/uid/TP40009705"&gt;iAd
框架参考&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;由于我的SDK版本为3.1.3，要使用iAD.framework，只有升级SDK或者将高版本的程序向低版本兼容。后者方法如下：&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在XCode左面的Groups &amp;amp; Files中依次展开Targets..Link Binary With
Libraries，选中他们的父节点“Link Binary With
Libraries”，这时候 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;在为项目添加iAD广告的时候，发现自己的SDK库没有iAd.framework。翻查了一下文档指定的路径
/System/Library/Frameworks/iAd.framework，确实不存在，后来在官方文档iOS技术概述中对
&lt;a class="reference external" href="http://www.apple.com.cn/developer/iphone/library/documentation/iPhone/Conceptual/iOs_TechOverview/iPhoneOSTechnologies/iPhoneOSTechnologies.html#//apple_ref/doc/uid/TP40007898-CH3-SW13"&gt;iAd.framework&lt;/a&gt;
介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 4.0引入了iAd框架
(iAd.framework)。您可以通过该框架在应用程序中发布横幅广告。广告会被放入到标准视图，您可以将这些视图加入到用户界面，并在合适的时机向用户展现。这些视图和苹果的公告服务相互协作，自动处理广告内容的加载和展现，同时也可以响应用户对广告的点击。&lt;/p&gt;
&lt;p&gt;如需进一步了解如何在应用程序当中使用iAd，请查看&lt;a class="reference external" href="http://developer.apple.com/iphone/library/documentation/UserExperience/Reference/iAd_ReferenceCollection/index.html#/apple_ref/doc/uid/TP40009705"&gt;iAd
框架参考&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;由于我的SDK版本为3.1.3，要使用iAD.framework，只有升级SDK或者将高版本的程序向低版本兼容。后者方法如下：&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在XCode左面的Groups &amp;amp; Files中依次展开Targets..Link Binary With
Libraries，选中他们的父节点“Link Binary With
Libraries”，这时候，你会在右上方的详细列表中发现有一列“Role”，把你需要Weak
link的framework的Role设为Weak。&lt;/p&gt;
&lt;p&gt;类似iAd 框架的技术还有Admob。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.cocoachina.com/bbs/read.php?tid-24414-page-1.html"&gt;已用iAd.framework，怎么让程序仍然在3.x下运行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.cocoachina.com/bbs/read.php?tid-22984.html"&gt;如何将高版本的程序向低版本兼容&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>如何防止Mac OS复制文件时自动生成的.DS_Store</title><link href="https://magicalboy.com/prevent-ds_store-on-mac-os.html" rel="alternate"></link><published>2011-01-21T05:01:00+08:00</published><updated>2011-01-21T05:01:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-21:/prevent-ds_store-on-mac-os.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;.DS_Store (Desktop Services
Store)&lt;/strong&gt;，是Apple公司的操作系统创建的一个隐藏文件，里面保存着自定义目录的图标和背景图片等元信息。没错，听起来就好像Windows上的desktop.ini。&lt;/p&gt;
&lt;p&gt;当我们从Mac
OS中复制文件到移动磁盘，然后从Windows操作系统读取的时候，可发现这些自动生成的文件。幸运地，我们可以利用命令配置或软件来防止这些.DS_Store文件生成：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;打开终端Terminal：
&lt;tt class="docutils literal"&gt;defaults write com.apple.desktopservices DSDontWriteNetworkStores true&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;或者使用blueharvest这款软件。&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;.DS_Store (Desktop Services
Store)&lt;/strong&gt;，是Apple公司的操作系统创建的一个隐藏文件，里面保存着自定义目录的图标和背景图片等元信息。没错，听起来就好像Windows上的desktop.ini。&lt;/p&gt;
&lt;p&gt;当我们从Mac
OS中复制文件到移动磁盘，然后从Windows操作系统读取的时候，可发现这些自动生成的文件。幸运地，我们可以利用命令配置或软件来防止这些.DS_Store文件生成：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;打开终端Terminal：
&lt;tt class="docutils literal"&gt;defaults write com.apple.desktopservices DSDontWriteNetworkStores true&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;或者使用blueharvest这款软件。&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>“this class is not key value coding-compliant”解决方法</title><link href="https://magicalboy.com/not-key-value-coding-compliant.html" rel="alternate"></link><published>2011-01-20T06:30:00+08:00</published><updated>2011-01-20T06:30:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-20:/not-key-value-coding-compliant.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在Xcode-iPhone项目中使用Interface Builder增加Tab Bar
Controller标签视图控制器，第一次点击Tab Bar
Controller可选中的某个视图，此时可指定其相关联的视图控制器的NIB名称，和身份检查器中的与此标签相关联的视图控制器底层类。如果未指定后者，就会出现这个错误，具体如下：&lt;/p&gt;
&lt;blockquote&gt;
2011-01-20 13:52:09.059 Pickers[2876:207] *** Terminating app due
to uncaught exception 'NSUnknownKeyException', reason: '[
setValue:forUndefinedKey:]: this class is not key value
coding-compliant for the key datePicker.'&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在第一次点击标签视图时，在身份检查器中指定与它相关联的视图控制器类。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;出现这个问题通常是因为我们先指定了NIB名称，这时可以在Interface
Builder中看到提示：“View …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在Xcode-iPhone项目中使用Interface Builder增加Tab Bar
Controller标签视图控制器，第一次点击Tab Bar
Controller可选中的某个视图，此时可指定其相关联的视图控制器的NIB名称，和身份检查器中的与此标签相关联的视图控制器底层类。如果未指定后者，就会出现这个错误，具体如下：&lt;/p&gt;
&lt;blockquote&gt;
2011-01-20 13:52:09.059 Pickers[2876:207] *** Terminating app due
to uncaught exception 'NSUnknownKeyException', reason: '[
setValue:forUndefinedKey:]: this class is not key value
coding-compliant for the key datePicker.'&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在第一次点击标签视图时，在身份检查器中指定与它相关联的视图控制器类。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;出现这个问题通常是因为我们先指定了NIB名称，这时可以在Interface
Builder中看到提示：“View Loaded From 'xxxViewController”：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/tab-bar-controller.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-1016" src="http://magicalboy.com/wp-content/uploads/2011/01/tab-bar-controller.png" style="width: 323px; height: 504px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;从而忘了指定其实现类。遇到问题先看控制台错误提示信息，看不明白再Google。人总有粗心的时候，快速解决问题才能提高效率。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://forums.macrumors.com/showthread.php?t=556417"&gt;RootViewController is not key value
coding-compliant&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Google短网址服务</title><link href="https://magicalboy.com/google-urlshortener-api.html" rel="alternate"></link><published>2011-01-17T01:35:00+08:00</published><updated>2011-01-17T01:35:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-17:/google-urlshortener-api.html</id><summary type="html">&lt;p&gt;Google已公开其短网址goo.gl
&lt;a class="reference external" href="http://code.google.com/apis/urlshortener/"&gt;API&lt;/a&gt;，有兴趣的赶紧研究吧。以下是本站的Google短址：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://goo.gl/UnnoC"&gt;http://goo.gl/UnnoC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://goo.gl/TXyAR"&gt;http://goo.gl/TXyAR&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在短地址后面加上.qr可生成二维码，比如http://goo.gl/TXyAR.qr的二维码为：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="http://goo.gl/TxyAR.qr" src="http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=150x150&amp;amp;choe=UTF-8&amp;amp;chld=H&amp;amp;chl=http://goo.gl/TXyAR" /&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;Google已公开其短网址goo.gl
&lt;a class="reference external" href="http://code.google.com/apis/urlshortener/"&gt;API&lt;/a&gt;，有兴趣的赶紧研究吧。以下是本站的Google短址：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://goo.gl/UnnoC"&gt;http://goo.gl/UnnoC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://goo.gl/TXyAR"&gt;http://goo.gl/TXyAR&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在短地址后面加上.qr可生成二维码，比如http://goo.gl/TXyAR.qr的二维码为：&lt;/div&gt;
&lt;div class="line"&gt;&lt;img alt="http://goo.gl/TxyAR.qr" src="http://chart.apis.google.com/chart?cht=qr&amp;amp;chs=150x150&amp;amp;choe=UTF-8&amp;amp;chld=H&amp;amp;chl=http://goo.gl/TXyAR" /&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Google"></category></entry><entry><title>万能的Mac OS截图</title><link href="https://magicalboy.com/mac-os-screenshots.html" rel="alternate"></link><published>2011-01-15T06:13:00+08:00</published><updated>2011-01-15T06:13:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-15:/mac-os-screenshots.html</id><summary type="html">&lt;p&gt;Mac OS X 的截图很方便，下面是常用的截图快捷键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;**cmd为Command键*&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;截取全屏保存到桌面：cmd+shift+3&lt;/li&gt;
&lt;li&gt;截取区域保存到桌面：cmd+shift+4&lt;/li&gt;
&lt;li&gt;截取全屏保存到剪贴板：cmd+ctrl+shift+3&lt;/li&gt;
&lt;li&gt;截取区域保存到剪贴板：cmd+ctrl+shift+4&lt;/li&gt;
&lt;li&gt;带阴影效果的区域截图：cmd+shift+4+space&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果截到的图为黑色或无内容，请确认是否已安装显卡驱动。如果驱动无解，可借助像&lt;a class="reference external" href="http://www.evernote.com/"&gt;EverNote&lt;/a&gt;带有截图功能的软件来实现，虽然EverNote是一款专业的记事软件。&lt;/p&gt;
&lt;p&gt;另外有一款专门用于iPhone、iTunes截图的工具——iPhone-Simulator Cropper
v2.4，在iPhone真机上也可按Home+Power键进行截屏。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Mac OS X 的截图很方便，下面是常用的截图快捷键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;**cmd为Command键*&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;截取全屏保存到桌面：cmd+shift+3&lt;/li&gt;
&lt;li&gt;截取区域保存到桌面：cmd+shift+4&lt;/li&gt;
&lt;li&gt;截取全屏保存到剪贴板：cmd+ctrl+shift+3&lt;/li&gt;
&lt;li&gt;截取区域保存到剪贴板：cmd+ctrl+shift+4&lt;/li&gt;
&lt;li&gt;带阴影效果的区域截图：cmd+shift+4+space&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果截到的图为黑色或无内容，请确认是否已安装显卡驱动。如果驱动无解，可借助像&lt;a class="reference external" href="http://www.evernote.com/"&gt;EverNote&lt;/a&gt;带有截图功能的软件来实现，虽然EverNote是一款专业的记事软件。&lt;/p&gt;
&lt;p&gt;另外有一款专门用于iPhone、iTunes截图的工具——iPhone-Simulator Cropper
v2.4，在iPhone真机上也可按Home+Power键进行截屏。&lt;/p&gt;
</content></entry><entry><title>Android开发环境搭建（Windows篇）</title><link href="https://magicalboy.com/android-dev-guid-for-windows.html" rel="alternate"></link><published>2011-01-14T18:30:00+08:00</published><updated>2011-01-14T18:30:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2011-01-14:/android-dev-guid-for-windows.html</id><summary type="html">&lt;p&gt;Android的开发环境配置起来有几个步骤，没有iPhone有Xcode集成的SDK方便。但它有明显的优势，支持多平台开发。下面就简单记录一下，在Windows下配置Android开发环境的一些步骤。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;运行环境及開發環境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Java SDK &amp;amp;Java Runtime&lt;/li&gt;
&lt;li&gt;eclipse-java-helios-SR1-win32&lt;/li&gt;
&lt;li&gt;android-sdk_r08-windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;安装配置基本步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;首先，下载安装Java，将Java运行环境安装配置好，即配置环境变量。&lt;/li&gt;
&lt;li&gt;然后，下载Android
SDK，在哪下载与如何下载，请&lt;a class="reference external" href="http://www.google.com/search?q=android+dev&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t"&gt;Google之&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;下载解压并运行解压目录里面的&lt;em&gt;SDK
Manager.exe&lt;/em&gt;，在线安装SDK。如果安装过程出现问题，请Google之。&lt;/li&gt;
&lt;li&gt;配置android
sdk系统环境变量，将你sdk下的tool目录路径（比如x:android-sdk-windowstool）增加到path。&lt;/li&gt;
&lt;li&gt;增加虚拟设备，版本自己选择（如下图）：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/android_sdk_virtual_device.jpg"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-989" src="http://magicalboy.com/wp-content/uploads/2011/01/android_sdk_virtual_device.jpg" style="width: 604px; height: 330px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;到Eclipse官网下载最新版本，运行并打开帮助菜单中的安装新软件子菜单，增加android
- &lt;a class="reference external" href="http://dl-ssl.google.com/android/eclipse"&gt;http://dl-ssl.google.com/android …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Android的开发环境配置起来有几个步骤，没有iPhone有Xcode集成的SDK方便。但它有明显的优势，支持多平台开发。下面就简单记录一下，在Windows下配置Android开发环境的一些步骤。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;运行环境及開發環境&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Java SDK &amp;amp;Java Runtime&lt;/li&gt;
&lt;li&gt;eclipse-java-helios-SR1-win32&lt;/li&gt;
&lt;li&gt;android-sdk_r08-windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;安装配置基本步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;首先，下载安装Java，将Java运行环境安装配置好，即配置环境变量。&lt;/li&gt;
&lt;li&gt;然后，下载Android
SDK，在哪下载与如何下载，请&lt;a class="reference external" href="http://www.google.com/search?q=android+dev&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t"&gt;Google之&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;下载解压并运行解压目录里面的&lt;em&gt;SDK
Manager.exe&lt;/em&gt;，在线安装SDK。如果安装过程出现问题，请Google之。&lt;/li&gt;
&lt;li&gt;配置android
sdk系统环境变量，将你sdk下的tool目录路径（比如x:android-sdk-windowstool）增加到path。&lt;/li&gt;
&lt;li&gt;增加虚拟设备，版本自己选择（如下图）：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/android_sdk_virtual_device.jpg"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-989" src="http://magicalboy.com/wp-content/uploads/2011/01/android_sdk_virtual_device.jpg" style="width: 604px; height: 330px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;到Eclipse官网下载最新版本，运行并打开帮助菜单中的安装新软件子菜单，增加android
- &lt;a class="reference external" href="http://dl-ssl.google.com/android/eclipse"&gt;http://dl-ssl.google.com/android/eclipse&lt;/a&gt;，安装Android Develop
Tool（ADT）。然后配置ADT，就可以新建Android项目HelloWorld了。不用写一句代码直接运行：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2011/01/hello_android_for_magicalboy.jpg"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-990" src="http://magicalboy.com/wp-content/uploads/2011/01/hello_android_for_magicalboy.jpg" style="width: 807px; height: 572px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果想在设备中运行，需要制作自签名证书，将生成的.apk文件复制到手机上即可。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;官网安装文档&lt;/h2&gt;
&lt;p&gt;Android的开发环境搭建基本上就是这些流程步骤，欲想了解更多，请参考官方网站的：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.android.com/sdk/installing.html"&gt;SDK安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.android.com/guide/index.html"&gt;开发指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>我的2010大事记</title><link href="https://magicalboy.com/my-2010-events.html" rel="alternate"></link><published>2010-12-31T02:22:00+08:00</published><updated>2010-12-31T02:22:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-12-31:/my-2010-events.html</id><summary type="html">&lt;p&gt;2010年是作出艰难的决定的一年：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;2010年01月：实习回校，享受最后的校园生活&lt;/li&gt;
&lt;li&gt;2010年02月：渡过最后一个寒假，感受家的温馨&lt;/li&gt;
&lt;li&gt;2010年03月：Oracle收购了Sun，我放弃了Java，谷歌退出中国大陆&lt;/li&gt;
&lt;li&gt;2010年04月：青海玉树7.1级大地震&lt;/li&gt;
&lt;li&gt;2010年05月：上海世博会开幕，富士康跳楼事件&lt;/li&gt;
&lt;li&gt;2010年06月：毕业了，一张纸&lt;/li&gt;
&lt;li&gt;2010年07月：南京大爆炸&lt;/li&gt;
&lt;li&gt;2010年08月：菲律宾人质劫持血案&lt;/li&gt;
&lt;li&gt;2010年09月：离职，终于狠下心离开，坚决果断地离开&lt;/li&gt;
&lt;li&gt;2010年10月：一个艰难的选择──iPhone开发&lt;/li&gt;
&lt;li&gt;2010年11月：腾讯大战360，“一个艰难的决定”&lt;/li&gt;
&lt;li&gt;2010年12月：Mac OS X 和 iPhone 真的很好&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;---------------------------------&amp;#64;年终分割线&amp;#64;---------------------------------&lt;/div&gt;
&lt;div class="line"&gt;未完待续&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;2010年是作出艰难的决定的一年：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;2010年01月：实习回校，享受最后的校园生活&lt;/li&gt;
&lt;li&gt;2010年02月：渡过最后一个寒假，感受家的温馨&lt;/li&gt;
&lt;li&gt;2010年03月：Oracle收购了Sun，我放弃了Java，谷歌退出中国大陆&lt;/li&gt;
&lt;li&gt;2010年04月：青海玉树7.1级大地震&lt;/li&gt;
&lt;li&gt;2010年05月：上海世博会开幕，富士康跳楼事件&lt;/li&gt;
&lt;li&gt;2010年06月：毕业了，一张纸&lt;/li&gt;
&lt;li&gt;2010年07月：南京大爆炸&lt;/li&gt;
&lt;li&gt;2010年08月：菲律宾人质劫持血案&lt;/li&gt;
&lt;li&gt;2010年09月：离职，终于狠下心离开，坚决果断地离开&lt;/li&gt;
&lt;li&gt;2010年10月：一个艰难的选择──iPhone开发&lt;/li&gt;
&lt;li&gt;2010年11月：腾讯大战360，“一个艰难的决定”&lt;/li&gt;
&lt;li&gt;2010年12月：Mac OS X 和 iPhone 真的很好&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;---------------------------------&amp;#64;年终分割线&amp;#64;---------------------------------&lt;/div&gt;
&lt;div class="line"&gt;未完待续&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>使用 iPhone 的嵌入式 SQLite3</title><link href="https://magicalboy.com/sqlite3-on-iphone.html" rel="alternate"></link><published>2010-12-30T05:05:00+08:00</published><updated>2010-12-30T05:05:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-12-30:/sqlite3-on-iphone.html</id><summary type="html">&lt;p&gt;iPhone 和 Android
都有嵌入式的SQL数据库，名为SQLite3，作为一种持久性存储的工具，SQLite3在存储和检索大量数据方面非常有效，具有良好的性能和速度。&lt;/p&gt;
&lt;p&gt;关系数据库（包括SQLite3）和面向对象的编程语言使用完全不同的方法来存储和组织数据。因而出现了在两者之间转换的各种技术以及库和工具。这些不同的技术统称为对象关系映射（Object-relational
Mapping，ORM），例如苹果公司为iPhone Cocoa
Touch提供的一种ORM解决方案Core Data。&lt;/p&gt;
&lt;div class="section" id="sqlite3"&gt;
&lt;h2&gt;SQLite3安装运行&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;MacOS
X内置有SQLite3，如果没有或想升级，请到官网下载http://sqlite.org/download.html。&lt;/div&gt;
&lt;div class="line"&gt;SQLite 官网使用手册：Command Line Shell For SQLite
（&lt;a class="reference external" href="http://sqlite.org/sqlite.html"&gt;http://sqlite.org/sqlite.html&lt;/a&gt;）。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;设置项目使用SQLite3&lt;/h2&gt;
&lt;p&gt;要使用SQLite3
API，需要将应用程序连接到一个名为libsqlite3.dylib的动态库。在Mac OS
X和iPhone上，该库位于 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;iPhone 和 Android
都有嵌入式的SQL数据库，名为SQLite3，作为一种持久性存储的工具，SQLite3在存储和检索大量数据方面非常有效，具有良好的性能和速度。&lt;/p&gt;
&lt;p&gt;关系数据库（包括SQLite3）和面向对象的编程语言使用完全不同的方法来存储和组织数据。因而出现了在两者之间转换的各种技术以及库和工具。这些不同的技术统称为对象关系映射（Object-relational
Mapping，ORM），例如苹果公司为iPhone Cocoa
Touch提供的一种ORM解决方案Core Data。&lt;/p&gt;
&lt;div class="section" id="sqlite3"&gt;
&lt;h2&gt;SQLite3安装运行&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;MacOS
X内置有SQLite3，如果没有或想升级，请到官网下载http://sqlite.org/download.html。&lt;/div&gt;
&lt;div class="line"&gt;SQLite 官网使用手册：Command Line Shell For SQLite
（&lt;a class="reference external" href="http://sqlite.org/sqlite.html"&gt;http://sqlite.org/sqlite.html&lt;/a&gt;）。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;设置项目使用SQLite3&lt;/h2&gt;
&lt;p&gt;要使用SQLite3
API，需要将应用程序连接到一个名为libsqlite3.dylib的动态库。在Mac OS
X和iPhone上，该库位于/usr/lib中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;在Groups &amp;amp; Files窗格中选中Frameworks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;从Project菜单中选择Add to Project...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;导入/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulatorX.Y.sdk/usr/lib.找到libsqlite3.dylib文件，取消选中Copy
items into destination group's folder(if needed)复选框&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;在代码中导入头文件：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
&lt;span class="c1"&gt;#import &amp;lt;sqlite3.h&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;使用iPhone 的嵌入式 SQLite3的基本步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;创建或打开数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用SQLite3之前，必须打开数据库，如果指定位置上不存在数据库，则它会自动创建一个新的数据库，下面是打开或创建新数据库的代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;sqlite3 *database; int result = &lt;span class="pre"&gt;sqlite3_open(&amp;quot;/path/to/database/file&amp;quot;,&lt;/span&gt; &amp;amp;database);&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;创建表&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;char * errorMsg; const char *createSQL = &amp;quot;CREATE TABLE IF NOT EXISTS TABLE1 ( ID INTEGER PRIMARY KEY AUTOINCREMENT, FIELD_DATA &lt;span class="pre"&gt;TEXT)&amp;quot;;&lt;/span&gt; int result = sqlite3_exec (database, createSQL, NULL, NULL, &amp;amp;errorMsg);&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;函数sqlite3_exec用于针对任何不返回数据的命令，比如执行更新、插入和删除操作。&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;插入数据（绑定变量）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;处理字符串并确保它们没有无效字符以及引号处理过的属性是件非常烦琐的事情。使用绑定变量可解决这些问题：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;char *sql = &amp;quot;INSERT INTO TABLE1 VALUES &lt;span class="pre"&gt;(?,&lt;/span&gt; &lt;span class="pre"&gt;?)&amp;quot;;&lt;/span&gt; sqlite3_stmt *stmt; if (sqlite3_prepare_v2(database, sql, &lt;span class="pre"&gt;-1,&lt;/span&gt; &amp;amp;stmt, nil) == SQLITE_OK) { sqlite3_bind_int(stmt, 1, 235); sqlite3_bind_text(stmt, 2, &amp;quot;Bar&amp;quot;, &lt;span class="pre"&gt;-1&lt;/span&gt; , NULL); }&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;检索数据&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;从数据库中检索数据有点复杂：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;NSString *query = &amp;#64;&amp;quot;SELECT ID, FIELD_DATA FROM TABLE1 ORDER BY ROW&amp;quot;; sqlite3_stmt *statement;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;int result = (sqlite3_prepare_v2(database, [query UTF8String], -1,
&amp;amp;statement, nil);&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;如果result等于SQLITE_OK，则开始单步获取结果集：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;while (sqlite3_step(statement) == SQLITE_ROW) { int rowNum = sqlite3_column_int(statement, 0); char *rowData = (char *)sqlite3_column_text(satement, 1); NSString *fieldValue = [[NSString alloc] initWithUIF8String:rowData]; // Do someting with the data here&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[fieldValue release];&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;sqlite3_finalize(statement);&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;关闭数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;当对SQLite3数据库执行完所有操作时，通过以下代码关闭：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;sqlite3_close(database);&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;不必担心这些函数的用法，更详细更全面的API参考请见：&lt;a class="reference external" href="http://sqlite.org/cintro.html"&gt;http://sqlite.org/cintro.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;实践例子请参考《iPhone3开发基础教程》第11章第6小节&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>Feedsky已恢复，继续给力！</title><link href="https://magicalboy.com/feedsky-geilivable.html" rel="alternate"></link><published>2010-12-19T15:11:00+08:00</published><updated>2010-12-19T15:11:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-12-19:/feedsky-geilivable.html</id><summary type="html">&lt;p&gt;本博客的二级永久RSS订阅地址&lt;a class="reference external" href="http://feed.magicalboy.com"&gt;http://feed.magicalboy.com&lt;/a&gt;已经有一个多月没更新了，今天在Google
Reader的订阅趋势看了一下，已经在前40名之外，冷淡了。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;这是Google Reader解析出错信息：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/Feed_none.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-958" src="http://magicalboy.com/wp-content/uploads/2010/12/Feed_none.png" style="width: 545px; height: 403px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;自从上次的Feedsky歇菜以来，都没有更新。&lt;/div&gt;
&lt;div class="line"&gt;Feedsky现已恢复正常：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/Feedsky_Setting.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-959" src="http://magicalboy.com/wp-content/uploads/2010/12/Feedsky_Setting.png" style="width: 570px; height: 404px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Feedsky要给力啊，希望这种事情以后少点发生，同时也祝福自己工作顺利，早日赚到钱买个好点的主机空间。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;本博客的二级永久RSS订阅地址&lt;a class="reference external" href="http://feed.magicalboy.com"&gt;http://feed.magicalboy.com&lt;/a&gt;已经有一个多月没更新了，今天在Google
Reader的订阅趋势看了一下，已经在前40名之外，冷淡了。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;这是Google Reader解析出错信息：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/Feed_none.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-958" src="http://magicalboy.com/wp-content/uploads/2010/12/Feed_none.png" style="width: 545px; height: 403px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;自从上次的Feedsky歇菜以来，都没有更新。&lt;/div&gt;
&lt;div class="line"&gt;Feedsky现已恢复正常：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/Feedsky_Setting.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-959" src="http://magicalboy.com/wp-content/uploads/2010/12/Feedsky_Setting.png" style="width: 570px; height: 404px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Feedsky要给力啊，希望这种事情以后少点发生，同时也祝福自己工作顺利，早日赚到钱买个好点的主机空间。&lt;/p&gt;
</content></entry><entry><title>Xcode配置SCM</title><link href="https://magicalboy.com/scm-xcode-configuration.html" rel="alternate"></link><published>2010-12-18T02:43:00+08:00</published><updated>2010-12-18T02:43:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-12-18:/scm-xcode-configuration.html</id><summary type="html">&lt;p&gt;SCM,顾名思义为Source Control Manager，源码控制管理。&lt;/p&gt;
&lt;p&gt;Xcode中有自带的SCM工具，我们稍微配置一下就可以方便地使用它了。&lt;/p&gt;
&lt;p&gt;目前SCM支持CVS, Perforce,
Subversion（SVN）三种代码管理系统，下面就以比较常用的SVN为例简单说下如何配置。&lt;/p&gt;
&lt;p&gt;首先配置服务器端的托管仓库（Repositories），具体配置这在不做说明，请&lt;a class="reference external" href="http://www.google.com/#sclient=psy&amp;amp;hl=en&amp;amp;site=&amp;amp;source=hp&amp;amp;q=svn%E9%85%8D%E7%BD%AE&amp;amp;aq=f&amp;amp;aqi=&amp;amp;aql=&amp;amp;oq=&amp;amp;gs_rfai=&amp;amp;pbx=1&amp;amp;fp=7bf371fda32a213b"&gt;Google&lt;/a&gt;。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;然后，在Xcode的菜单中打开SCM-&amp;gt;Repositories：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repositories.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-949" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repositories.png" style="width: 627px; height: 674px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;填好如图各项数据，填写无误就可看到绿色的Authenticated已认证提示。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;接着导入项目代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_import.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-950" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_import.png" style="width: 633px; height: 632px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：导入项目之后服务器上的路径要对应上。还必须删除托管服务器上的build目录，不然在同步时会出错。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;最后checkout项目或者为导入的项目配置SCM：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repository.png"&gt;&lt;img alt="image2" class="alignnone size-full wp-image-951" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repository.png" style="width: 391px; height: 593px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;至此，已经完成了在Xcode中为项目配置SCM：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_successful.png"&gt;&lt;img alt="image3" class="alignnone size-full wp-image-952" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_successful.png" style="width: 788px; height: 559px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;关于 SVN 如何更新，提交等使用说明，请参考官方文档或其它资料。&lt;/p&gt;
&lt;p&gt;相关链接：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/tools/subversionxcode.html"&gt;Getting Control with Subversion and
Xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://gigaom.com/apple/using-subversion-with-xcode-30/"&gt;Using Subversion with Xcode 3.0:
Apple …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;SCM,顾名思义为Source Control Manager，源码控制管理。&lt;/p&gt;
&lt;p&gt;Xcode中有自带的SCM工具，我们稍微配置一下就可以方便地使用它了。&lt;/p&gt;
&lt;p&gt;目前SCM支持CVS, Perforce,
Subversion（SVN）三种代码管理系统，下面就以比较常用的SVN为例简单说下如何配置。&lt;/p&gt;
&lt;p&gt;首先配置服务器端的托管仓库（Repositories），具体配置这在不做说明，请&lt;a class="reference external" href="http://www.google.com/#sclient=psy&amp;amp;hl=en&amp;amp;site=&amp;amp;source=hp&amp;amp;q=svn%E9%85%8D%E7%BD%AE&amp;amp;aq=f&amp;amp;aqi=&amp;amp;aql=&amp;amp;oq=&amp;amp;gs_rfai=&amp;amp;pbx=1&amp;amp;fp=7bf371fda32a213b"&gt;Google&lt;/a&gt;。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;然后，在Xcode的菜单中打开SCM-&amp;gt;Repositories：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repositories.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-949" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repositories.png" style="width: 627px; height: 674px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;填好如图各项数据，填写无误就可看到绿色的Authenticated已认证提示。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;接着导入项目代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_import.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-950" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_import.png" style="width: 633px; height: 632px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：导入项目之后服务器上的路径要对应上。还必须删除托管服务器上的build目录，不然在同步时会出错。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;最后checkout项目或者为导入的项目配置SCM：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repository.png"&gt;&lt;img alt="image2" class="alignnone size-full wp-image-951" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_Repository.png" style="width: 391px; height: 593px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;至此，已经完成了在Xcode中为项目配置SCM：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/12/SCM_successful.png"&gt;&lt;img alt="image3" class="alignnone size-full wp-image-952" src="http://magicalboy.com/wp-content/uploads/2010/12/SCM_successful.png" style="width: 788px; height: 559px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;关于 SVN 如何更新，提交等使用说明，请参考官方文档或其它资料。&lt;/p&gt;
&lt;p&gt;相关链接：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://developer.apple.com/tools/subversionxcode.html"&gt;Getting Control with Subversion and
Xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://gigaom.com/apple/using-subversion-with-xcode-30/"&gt;Using Subversion with Xcode 3.0:
Apple&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>NIB 和 XIB 文件有什么不同</title><link href="https://magicalboy.com/xib-and-nib.html" rel="alternate"></link><published>2010-12-07T02:47:00+08:00</published><updated>2010-12-07T02:47:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-12-07:/xib-and-nib.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;nib&lt;/strong&gt; 是&lt;em&gt;NeXT Interface Builder&lt;/em&gt;的缩写。&lt;/div&gt;
&lt;div class="line"&gt;xib 是 &lt;strong&gt;x&lt;/strong&gt;ml n&lt;strong&gt;ib&lt;/strong&gt; 文件，于2007年 Leopard (and Xcode 3.0)
版本中更新。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;以源码方式打开查看：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?xml&lt;/span&gt; &lt;span class="pre"&gt;version=&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 784&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10F2521&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ……&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;相同点：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;NIB 和 XIB 都是 Interface Builder 的图形界面设计文档。Interface
Builder 把窗口、菜单栏以及窗口上的各种控件的对象都“冻结”在了一个
NIB文档里面了；程序运行时，这些对象将会“苏醒”。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;不同点：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;NIB为二进制文件，XIB为纯文本文件 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;nib&lt;/strong&gt; 是&lt;em&gt;NeXT Interface Builder&lt;/em&gt;的缩写。&lt;/div&gt;
&lt;div class="line"&gt;xib 是 &lt;strong&gt;x&lt;/strong&gt;ml n&lt;strong&gt;ib&lt;/strong&gt; 文件，于2007年 Leopard (and Xcode 3.0)
版本中更新。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;以源码方式打开查看：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?xml&lt;/span&gt; &lt;span class="pre"&gt;version=&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 784&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 10F2521&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ……&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;相同点：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;NIB 和 XIB 都是 Interface Builder 的图形界面设计文档。Interface
Builder 把窗口、菜单栏以及窗口上的各种控件的对象都“冻结”在了一个
NIB文档里面了；程序运行时，这些对象将会“苏醒”。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;不同点：&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;NIB为二进制文件，XIB为纯文本文件，后者方便于版本控制和Diff。XIB
可编译为 NIB。&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>#pragma mark 是什么</title><link href="https://magicalboy.com/what-is-pragma-mark.html" rel="alternate"></link><published>2010-11-17T03:25:00+08:00</published><updated>2010-11-17T03:25:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-11-17:/what-is-pragma-mark.html</id><summary type="html">&lt;p&gt;经常在 Xcode IDE 里面的代码中看到以下代码指令:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;#pragma mark - #pragma mark Initialization&lt;/tt&gt;&lt;/p&gt;
&lt;div class="section" id="pragma"&gt;
&lt;h2&gt;#pragma 是什么&lt;/h2&gt;
&lt;p&gt;从技术上讲，以 #pragma
开头的代码是一条编译器指令，是一个特定于程序或编译器的指令。它们不一定适用于其它编译器或其它环境。如果编译器不能识别该指令，则会将其忽略。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;作用&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;它们告诉Xcode编译器，要在编辑器窗格顶部的方法和函数弹出菜单中将代码分隔开，如下图所示：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/pragma.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-931" src="http://magicalboy.com/wp-content/uploads/2010/11/pragma.png" style="width: 344px; height: 358px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;一些类（尤其是一些控制器类）可能很长，方法和函数弹出菜单可以便于代码导航。此时加入#pragma
指令对代码进行逻辑组织很有效果。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;注意&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;#pragma mark - 的“-”后面不能有空格&lt;/li&gt;
&lt;li&gt;如果你的标志没有出现在弹出菜单中，比如没有分隔线出现，请在Xcode菜单
&amp;quot;Preferences..&amp;quot;中的 &amp;quot;Code Sense&amp;quot;选项取消选中&amp;quot;Sort list
alphabetically&amp;quot;即可&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;经常在 Xcode IDE 里面的代码中看到以下代码指令:&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;#pragma mark - #pragma mark Initialization&lt;/tt&gt;&lt;/p&gt;
&lt;div class="section" id="pragma"&gt;
&lt;h2&gt;#pragma 是什么&lt;/h2&gt;
&lt;p&gt;从技术上讲，以 #pragma
开头的代码是一条编译器指令，是一个特定于程序或编译器的指令。它们不一定适用于其它编译器或其它环境。如果编译器不能识别该指令，则会将其忽略。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;作用&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;它们告诉Xcode编译器，要在编辑器窗格顶部的方法和函数弹出菜单中将代码分隔开，如下图所示：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/pragma.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-931" src="http://magicalboy.com/wp-content/uploads/2010/11/pragma.png" style="width: 344px; height: 358px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;一些类（尤其是一些控制器类）可能很长，方法和函数弹出菜单可以便于代码导航。此时加入#pragma
指令对代码进行逻辑组织很有效果。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;注意&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;#pragma mark - 的“-”后面不能有空格&lt;/li&gt;
&lt;li&gt;如果你的标志没有出现在弹出菜单中，比如没有分隔线出现，请在Xcode菜单
&amp;quot;Preferences..&amp;quot;中的 &amp;quot;Code Sense&amp;quot;选项取消选中&amp;quot;Sort list
alphabetically&amp;quot;即可&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content></entry><entry><title>iBlog 苹果风格 WordPress 主题</title><link href="https://magicalboy.com/iblog-theme.html" rel="alternate"></link><published>2010-11-11T07:23:00+08:00</published><updated>2010-11-11T07:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-11-11:/iblog-theme.html</id><summary type="html">&lt;p&gt;今天我做出了一个非常艰难的决定：为本博客装上 iBlog
主题！从之前的灰蓝色风格一转到苹果类的简洁白色风格，让人有股焕然一新的感觉。&lt;/p&gt;
&lt;p&gt;iBolg 是一款专业而且免费的 Wordpress 主题，它基于PageLines CMS
框架。这款主题有缩略图，工具，可选项和本地化等功能，由 PageLines
设计和开发。&lt;/p&gt;
&lt;p&gt;比较有特色的是它的风格接近于苹果公司的 Mac OS X 名为 Aqua
之专有版权的图形用户界面。i 字母开头的主题名称也是苹果软件一惯的做法。&lt;/p&gt;
&lt;p&gt;由于此主题上没有白苹果
Logo，且非商业营利用途，作为个人独立博客是完全合法的啦。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_920&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;301&amp;quot;
caption=&amp;quot;Mac OS X v10.6 &amp;quot;Snow Leopard&amp;quot;画面&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/301px-Snow_Leopard_Desktop.png"&gt;&lt;img alt="Mac OS X v10.6 &amp;quot;Snow Leopard&amp;quot;画面" class="size-full wp-image-920" src="http://magicalboy.com/wp-content/uploads/2010/11/301px-Snow_Leopard_Desktop.png" style="width: 301px; height: 188px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;图 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天我做出了一个非常艰难的决定：为本博客装上 iBlog
主题！从之前的灰蓝色风格一转到苹果类的简洁白色风格，让人有股焕然一新的感觉。&lt;/p&gt;
&lt;p&gt;iBolg 是一款专业而且免费的 Wordpress 主题，它基于PageLines CMS
框架。这款主题有缩略图，工具，可选项和本地化等功能，由 PageLines
设计和开发。&lt;/p&gt;
&lt;p&gt;比较有特色的是它的风格接近于苹果公司的 Mac OS X 名为 Aqua
之专有版权的图形用户界面。i 字母开头的主题名称也是苹果软件一惯的做法。&lt;/p&gt;
&lt;p&gt;由于此主题上没有白苹果
Logo，且非商业营利用途，作为个人独立博客是完全合法的啦。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_920&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;301&amp;quot;
caption=&amp;quot;Mac OS X v10.6 &amp;quot;Snow Leopard&amp;quot;画面&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/301px-Snow_Leopard_Desktop.png"&gt;&lt;img alt="Mac OS X v10.6 &amp;quot;Snow Leopard&amp;quot;画面" class="size-full wp-image-920" src="http://magicalboy.com/wp-content/uploads/2010/11/301px-Snow_Leopard_Desktop.png" style="width: 301px; height: 188px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;图：Mac OS X v10.6 &amp;quot;Snow Leopard&amp;quot;画面&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;主题官方地址：&lt;a class="reference external" href="http://wordpress.org/extend/themes/iblog"&gt;http://wordpress.org/extend/themes/iblog&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>Feedsky歇菜了</title><link href="https://magicalboy.com/feedsky-can-not-access.html" rel="alternate"></link><published>2010-11-09T01:21:00+08:00</published><updated>2010-11-09T01:21:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-11-09:/feedsky-can-not-access.html</id><summary type="html">&lt;p&gt;对不起，本博客的 Feed 托管服务器 Feedsky
歇菜，其主页也访问不了，估计是没戏了，由于众所周知的原因吧。&lt;/p&gt;
&lt;p&gt;想赶紧换一个 Feed 托管服务商，发现能支持二级域名绑定的 Feedburner 和
Feedcat不是我想要的。比如我的永久订阅地址为
feed.magicalboy.com，Feedburner 和 Feedcat 只能提供
feed.magicalboy.com/[idname] 这样的格式，没有 Feedsky
那样方便，实在令人不爽。&lt;/p&gt;
&lt;p&gt;订阅了本博客的朋友不必担心，Feed 地址仍然不变，永久地址为：
&lt;a class="reference external" href="http://feed.magicalboy.com"&gt;http://feed.magicalboy.com&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Feedsky
挂了，同时由于本博客寄托在别人的主机空间，受到诸多的限制，做不了转向，唯有暂时停止更新，造成的不便请朋友们能够谅解，并考虑近期更换主机空间。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;对不起，本博客的 Feed 托管服务器 Feedsky
歇菜，其主页也访问不了，估计是没戏了，由于众所周知的原因吧。&lt;/p&gt;
&lt;p&gt;想赶紧换一个 Feed 托管服务商，发现能支持二级域名绑定的 Feedburner 和
Feedcat不是我想要的。比如我的永久订阅地址为
feed.magicalboy.com，Feedburner 和 Feedcat 只能提供
feed.magicalboy.com/[idname] 这样的格式，没有 Feedsky
那样方便，实在令人不爽。&lt;/p&gt;
&lt;p&gt;订阅了本博客的朋友不必担心，Feed 地址仍然不变，永久地址为：
&lt;a class="reference external" href="http://feed.magicalboy.com"&gt;http://feed.magicalboy.com&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;Feedsky
挂了，同时由于本博客寄托在别人的主机空间，受到诸多的限制，做不了转向，唯有暂时停止更新，造成的不便请朋友们能够谅解，并考虑近期更换主机空间。&lt;/p&gt;
</content></entry><entry><title>騰訊QQ和奇虎360</title><link href="https://magicalboy.com/qq-vs-360.html" rel="alternate"></link><published>2010-11-08T06:27:00+08:00</published><updated>2010-11-08T06:27:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-11-08:/qq-vs-360.html</id><summary type="html">&lt;div class="section" id="oicq"&gt;
&lt;h2&gt;懷念當年的OICQ&lt;/h2&gt;
&lt;p&gt;本人於本世紀初開始使用QQ，時至今日使用了十年。像大部分一樣，QQ成了進入互聯網的入門，QQ號成了網號，同時也在不知不覺中，QQ成了自己在互聯網的ID。&lt;/p&gt;
&lt;p&gt;不知何時，QQ已經成為了我們主要的IM工具，甚至是主要的上網工具，從開始追求的QQ等級，QQ秀，QQ圖標到各種QQ鑽石，無非是用來向好友炫耀自己，以滿足其虛榮心。其實有沒想過，此等皆為浮雲啊。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;數字360&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;說說數字360，剛開始的時候聽說是從臭名遠揚的3721進化而來。不過它比百度虛飾的更好（指百度出身），由一個電腦安全工具做到現在的裝機必備工具和殺毒軟件（購買的殺毒引擎授權）。正是因為它的“永久免費”和“安全的XX”吸引了許多用詞，使其知名度響亮了，成了P民的必備工具。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;人權至上&lt;/h2&gt;
&lt;p&gt;QQ掃描硬盤的事很早就看到一些文章說過，可惜到現在才由360叫板，正說明了中國網民的隱私意識低。還有其余的種種競爭手段，讓很多無辜的用戶成了炮灰。我唯一能使用的Web
QQ突然被重定向了，愕然之後的憤怒，徹底地失望了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="im-im"&gt;
&lt;h2&gt;未來的IM，開放的IM協議&lt;/h2&gt;
&lt;p&gt;XMPP是目前主流的四种IM协议之一，其他三种分别为：即时信息和空间协议(IMPP)、空间和即时信息协议(PRIM …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="oicq"&gt;
&lt;h2&gt;懷念當年的OICQ&lt;/h2&gt;
&lt;p&gt;本人於本世紀初開始使用QQ，時至今日使用了十年。像大部分一樣，QQ成了進入互聯網的入門，QQ號成了網號，同時也在不知不覺中，QQ成了自己在互聯網的ID。&lt;/p&gt;
&lt;p&gt;不知何時，QQ已經成為了我們主要的IM工具，甚至是主要的上網工具，從開始追求的QQ等級，QQ秀，QQ圖標到各種QQ鑽石，無非是用來向好友炫耀自己，以滿足其虛榮心。其實有沒想過，此等皆為浮雲啊。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;數字360&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;說說數字360，剛開始的時候聽說是從臭名遠揚的3721進化而來。不過它比百度虛飾的更好（指百度出身），由一個電腦安全工具做到現在的裝機必備工具和殺毒軟件（購買的殺毒引擎授權）。正是因為它的“永久免費”和“安全的XX”吸引了許多用詞，使其知名度響亮了，成了P民的必備工具。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;人權至上&lt;/h2&gt;
&lt;p&gt;QQ掃描硬盤的事很早就看到一些文章說過，可惜到現在才由360叫板，正說明了中國網民的隱私意識低。還有其余的種種競爭手段，讓很多無辜的用戶成了炮灰。我唯一能使用的Web
QQ突然被重定向了，愕然之後的憤怒，徹底地失望了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="im-im"&gt;
&lt;h2&gt;未來的IM，開放的IM協議&lt;/h2&gt;
&lt;p&gt;XMPP是目前主流的四种IM协议之一，其他三种分别为：即时信息和空间协议(IMPP)、空间和即时信息协议(PRIM)、针对即时通讯和空间平衡扩充的进程开始协议SIP(SIMPLE)。&lt;/p&gt;
&lt;p&gt;Google
Talk基于XMPP，同时允许其它IM自由使用XMPP协议。如此一来，任何IM供应商在遵循XMPP协议的前提下，都可以随时与Google
Talk实现免费连接。&lt;/p&gt;
&lt;p&gt;我的GTalk：&lt;a class="reference external" href="mailto:donly&amp;#64;magicalboy.com"&gt;donly&amp;#64;magicalboy.com&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>What is GM seed?</title><link href="https://magicalboy.com/what-is-gm-seed.html" rel="alternate"></link><published>2010-11-02T02:52:00+08:00</published><updated>2010-11-02T02:52:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-11-02:/what-is-gm-seed.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;iOS 4.2 &lt;strong&gt;GM seed&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/0809120511912128.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-894" src="http://magicalboy.com/wp-content/uploads/2010/11/0809120511912128.png" style="width: 640px; height: 213px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;GM officially stands for Gold Master.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;Golden Master&lt;/strong&gt; is a reference model in hardware/software
development.&lt;/p&gt;
&lt;p&gt;The Golden Master is usually the RTM (released to manufacturing)
version, and therefore the first public/commercial version. It
represents the development stage of &amp;quot;RTM&amp;quot; (Release To
Manufacturing …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;iOS 4.2 &lt;strong&gt;GM seed&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/11/0809120511912128.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-894" src="http://magicalboy.com/wp-content/uploads/2010/11/0809120511912128.png" style="width: 640px; height: 213px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;GM officially stands for Gold Master.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;Golden Master&lt;/strong&gt; is a reference model in hardware/software
development.&lt;/p&gt;
&lt;p&gt;The Golden Master is usually the RTM (released to manufacturing)
version, and therefore the first public/commercial version. It
represents the development stage of &amp;quot;RTM&amp;quot; (Release To
Manufacturing), often referred to as &amp;quot;going gold&amp;quot;, or &amp;quot;gone golden&amp;quot;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;参考链接：&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Golden_master"&gt;http://en.wikipedia.org/wiki/Golden_master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.everythingicafe.com/forum/ios/what-does-gm-seed-mean-48108.html"&gt;http://www.everythingicafe.com/forum/ios/what-does-gm-seed-mean-48108.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Software_release_life_cycle"&gt;Software release life
cycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>求最大公约数的算法</title><link href="https://magicalboy.com/greatest-common-divisor.html" rel="alternate"></link><published>2010-10-21T08:42:00+08:00</published><updated>2010-10-21T08:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-21:/greatest-common-divisor.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;最大公约数&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;回顾一下中学学过的数学课程中最大公约数的定义，两个整数的最大公约数是能够同时整除它们的最大的正整数。&lt;/div&gt;
&lt;div class="line"&gt;在数学中，辗转相除法，又称欧几里得算法，是求最大公约数的算法。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;辗转相除法原理&lt;/h2&gt;
&lt;p&gt;辗转相除法基于如下原理：两个整数的最大公约数等于其中较小的数和两数的差的最大公约数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;算法代码&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;伪代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;function gcd(a, b)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if a = 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; while b ≠ 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if a &amp;gt; b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; a := a − b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; b := b − a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return a&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;递归版本：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;function gcd(a, b)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if b = 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return gcd(b …&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;最大公约数&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;回顾一下中学学过的数学课程中最大公约数的定义，两个整数的最大公约数是能够同时整除它们的最大的正整数。&lt;/div&gt;
&lt;div class="line"&gt;在数学中，辗转相除法，又称欧几里得算法，是求最大公约数的算法。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;辗转相除法原理&lt;/h2&gt;
&lt;p&gt;辗转相除法基于如下原理：两个整数的最大公约数等于其中较小的数和两数的差的最大公约数。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;算法代码&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;伪代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;function gcd(a, b)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if a = 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; while b ≠ 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if a &amp;gt; b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; a := a − b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; b := b − a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return a&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;递归版本：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;function gcd(a, b)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if b = 0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return gcd(b, a mod b)&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://zh.wikipedia.org/zh/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95"&gt;辗转相除法-维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>IE "Stack overflow at line" 的解决方法</title><link href="https://magicalboy.com/stack-overflow-at-line.html" rel="alternate"></link><published>2010-10-20T02:26:00+08:00</published><updated>2010-10-20T02:26:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-20:/stack-overflow-at-line.html</id><summary type="html">&lt;p&gt;出现该错误提示，主要有两种原因：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使用系统的事件名称作为自定义函数名如：&lt;/li&gt;
&lt;li&gt;出现死循环 ：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You can turn off the &amp;quot;Disable Script Debugging&amp;quot; option inside of
Internet Explorer and start debugging with Visual Studio if you
happen to have that around.&lt;/li&gt;
&lt;li&gt;找到无法显示图片的地方，上传图片&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;引用地址：&lt;a class="reference external" href="http://chenchendefeng.javaeye.com/blog/456247"&gt;IE中出现 &amp;quot;Stack overflow at line&amp;quot;
错误的解决方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考地址：&lt;a class="reference external" href="http://stackoverflow.com/questions/226102/stack-overflow-in-line-0-on-internet-explorer"&gt;&amp;quot;Stack Overflow in Line 0&amp;quot; on Internet Explorer - Stack …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;出现该错误提示，主要有两种原因：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;使用系统的事件名称作为自定义函数名如：&lt;/li&gt;
&lt;li&gt;出现死循环 ：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You can turn off the &amp;quot;Disable Script Debugging&amp;quot; option inside of
Internet Explorer and start debugging with Visual Studio if you
happen to have that around.&lt;/li&gt;
&lt;li&gt;找到无法显示图片的地方，上传图片&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;引用地址：&lt;a class="reference external" href="http://chenchendefeng.javaeye.com/blog/456247"&gt;IE中出现 &amp;quot;Stack overflow at line&amp;quot;
错误的解决方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考地址：&lt;a class="reference external" href="http://stackoverflow.com/questions/226102/stack-overflow-in-line-0-on-internet-explorer"&gt;&amp;quot;Stack Overflow in Line 0&amp;quot; on Internet Explorer - Stack
Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>Objective-C 中 #import 和 #include 的区别</title><link href="https://magicalboy.com/import-and-include.html" rel="alternate"></link><published>2010-10-19T02:57:00+08:00</published><updated>2010-10-19T02:57:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-19:/import-and-include.html</id><summary type="html">&lt;p&gt;在 Objective-C 中，#import 被当成 #include
指令的改良版本来使用。除此之外，#import
确定一个文件只能被导入一次，这使你在递归包含中不会出现问题。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用哪一个还是由你来决定。一般来说，在导入 Objective-C
头文件的时候使用 #import，包含 C 头文件时使用 #include。比如：&lt;/div&gt;
&lt;div class="line"&gt;[cc lang=&amp;quot;ObjC&amp;quot;]&lt;/div&gt;
&lt;div class="line"&gt;#import&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;div class="line"&gt;[/cc]&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/questions/439662/what-is-the-difference-between-import-and-include-in-objective-c"&gt;What is the difference between #import and #include in
Objective-C?&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;在 Objective-C 中，#import 被当成 #include
指令的改良版本来使用。除此之外，#import
确定一个文件只能被导入一次，这使你在递归包含中不会出现问题。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用哪一个还是由你来决定。一般来说，在导入 Objective-C
头文件的时候使用 #import，包含 C 头文件时使用 #include。比如：&lt;/div&gt;
&lt;div class="line"&gt;[cc lang=&amp;quot;ObjC&amp;quot;]&lt;/div&gt;
&lt;div class="line"&gt;#import&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;div class="line"&gt;[/cc]&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/questions/439662/what-is-the-difference-between-import-and-include-in-objective-c"&gt;What is the difference between #import and #include in
Objective-C?&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>Emacs 的自学教材</title><link href="https://magicalboy.com/emacs-tutorial.html" rel="alternate"></link><published>2010-10-18T06:43:00+08:00</published><updated>2010-10-18T06:43:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-18:/emacs-tutorial.html</id><summary type="html">&lt;p&gt;想快速了解 EMACS 的人，可以参考 EMACS 的自学教材（tutorial）。 使用
EMACS 自学教材的方法很简单，只要键入 &amp;quot;Ctrl-h t&amp;quot; (help-with-tutorial)
即可进入 EMACS 的自学的状态了。&lt;/p&gt;
&lt;p&gt;EMACS 的自学教材可分成以下几部份：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;介绍 EMACS 指令的键入方法，即介绍 Ctrl 与 Meta 键 。&lt;/li&gt;
&lt;li&gt;viewing screenfuls&lt;/li&gt;
&lt;li&gt;basic cursor control&lt;/li&gt;
&lt;li&gt;Ctrl-g 的用法&lt;/li&gt;
&lt;li&gt;EMACS 的 window 与 multiple windows&lt;/li&gt;
&lt;li&gt;inserting and deleting&lt;/li&gt;
&lt;li&gt;undo&lt;/li&gt;
&lt;li&gt;EMACS 档案的处理&lt;/li&gt;
&lt;li&gt;EMACS 的 buffers&lt;/li&gt;
&lt;li&gt;extending …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;想快速了解 EMACS 的人，可以参考 EMACS 的自学教材（tutorial）。 使用
EMACS 自学教材的方法很简单，只要键入 &amp;quot;Ctrl-h t&amp;quot; (help-with-tutorial)
即可进入 EMACS 的自学的状态了。&lt;/p&gt;
&lt;p&gt;EMACS 的自学教材可分成以下几部份：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;介绍 EMACS 指令的键入方法，即介绍 Ctrl 与 Meta 键 。&lt;/li&gt;
&lt;li&gt;viewing screenfuls&lt;/li&gt;
&lt;li&gt;basic cursor control&lt;/li&gt;
&lt;li&gt;Ctrl-g 的用法&lt;/li&gt;
&lt;li&gt;EMACS 的 window 与 multiple windows&lt;/li&gt;
&lt;li&gt;inserting and deleting&lt;/li&gt;
&lt;li&gt;undo&lt;/li&gt;
&lt;li&gt;EMACS 档案的处理&lt;/li&gt;
&lt;li&gt;EMACS 的 buffers&lt;/li&gt;
&lt;li&gt;extending the command set&lt;/li&gt;
&lt;li&gt;简介 EMACS 的 mode line 与 echo area&lt;/li&gt;
&lt;li&gt;searching&lt;/li&gt;
&lt;li&gt;recursive editing levels&lt;/li&gt;
&lt;li&gt;getting more help&lt;/li&gt;
&lt;li&gt;leaving EMACS&lt;/li&gt;
&lt;li&gt;有关 EMACS 的版权问题&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;EMACS 的自学教材是以编辑功能的介绍为主。虽然 EMACS 的功能&lt;/div&gt;
&lt;div class="line"&gt;不只如此， 但编辑是 EMACS 的最基础的功能，要了解 EMACS&lt;/div&gt;
&lt;div class="line"&gt;当然要从它的基本著手。所以 EMACS的自学教材也以编辑的介绍&lt;/div&gt;
&lt;div class="line"&gt;为主，至於 EMACS 其它的工件环境請參考&lt;a class="reference external" href="http://www.cbi.pku.edu.cn/chinese/documents/csdoc/emacs/"&gt;Emacs User's
Guide&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果你不小心進入了 Emacs，輸入&amp;quot;C-x C-c&amp;quot;以退出。&lt;/p&gt;
</content></entry><entry><title>Java 情结</title><link href="https://magicalboy.com/byebye-java.html" rel="alternate"></link><published>2010-10-18T02:06:00+08:00</published><updated>2010-10-18T02:06:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-18:/byebye-java.html</id><summary type="html">&lt;p&gt;自 3月17日 Java 被 Oracle 收购以来，我都没用过 Java
来编程。那时也刚好转职去做 Python 的开发，诸多原因使我离 Java
越来越远。。。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今天在更新 JRE 时看到的安装界面，Oracle 标志是多么的鲜红艳丽：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/10/Java_Install.jpg"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-867" src="http://magicalboy.com/wp-content/uploads/2010/10/Java_Install.jpg" style="width: 506px; height: 379px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bye-java"&gt;
&lt;h2&gt;Bye Java&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;public class Bye{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] args) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;System.out.println(&amp;quot;Bye,&lt;/span&gt; &lt;span class="pre"&gt;java!&amp;quot;);&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" class="alignnone" src="http://www.miamisburg.com/dukeTuxJavaOne2003TShirt.jpg" style="width: 768px; height: 576px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;自 3月17日 Java 被 Oracle 收购以来，我都没用过 Java
来编程。那时也刚好转职去做 Python 的开发，诸多原因使我离 Java
越来越远。。。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;今天在更新 JRE 时看到的安装界面，Oracle 标志是多么的鲜红艳丽：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/10/Java_Install.jpg"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-867" src="http://magicalboy.com/wp-content/uploads/2010/10/Java_Install.jpg" style="width: 506px; height: 379px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bye-java"&gt;
&lt;h2&gt;Bye Java&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;public class Bye{&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] args) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;System.out.println(&amp;quot;Bye,&lt;/span&gt; &lt;span class="pre"&gt;java!&amp;quot;);&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" class="alignnone" src="http://www.miamisburg.com/dukeTuxJavaOne2003TShirt.jpg" style="width: 768px; height: 576px;" /&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>OpenStep、OPENSTEP 和 NEXTSTEP</title><link href="https://magicalboy.com/openstep-and-nextstep.html" rel="alternate"></link><published>2010-10-15T08:39:00+08:00</published><updated>2010-10-15T08:39:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-15:/openstep-and-nextstep.html</id><summary type="html">&lt;p&gt;学习 Mac 开发需要了解清楚的几个常用术语：OpenStep、OPENSTEP 和
NEXTSTEP，Cocao 等。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/OPENSTEP"&gt;OpenStep&lt;/a&gt;
是一组面向对象的 API。1993年，NeXT 和 Sun 公司联合发布的一个针对
NEXTSTEP 系统的标准规范。OpenStep 在自由软件基金会的实现名称称为
GNUStep。此外还有一个 Linux 版本，命名为 LinuxSTEP。&lt;/li&gt;
&lt;li&gt;OPENSTEP 是由 NeXT 开发的一个 OpenStep 的特殊实现。OPENSTEP 作为 NeXT
的主要作业系统产品，直到 1997 年被苹果电脑收购。接下来，OPENSTEP
与现存的 Mac OS 的相关技术相结合，产生了 Mac OS X …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;学习 Mac 开发需要了解清楚的几个常用术语：OpenStep、OPENSTEP 和
NEXTSTEP，Cocao 等。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/OPENSTEP"&gt;OpenStep&lt;/a&gt;
是一组面向对象的 API。1993年，NeXT 和 Sun 公司联合发布的一个针对
NEXTSTEP 系统的标准规范。OpenStep 在自由软件基金会的实现名称称为
GNUStep。此外还有一个 Linux 版本，命名为 LinuxSTEP。&lt;/li&gt;
&lt;li&gt;OPENSTEP 是由 NeXT 开发的一个 OpenStep 的特殊实现。OPENSTEP 作为 NeXT
的主要作业系统产品，直到 1997 年被苹果电脑收购。接下来，OPENSTEP
与现存的 Mac OS 的相关技术相结合，产生了 Mac OS X。&lt;/li&gt;
&lt;li&gt;NEXTSTEP，（官方写法很多种，一开始叫做 NextStep、NeXTstep、
NeXTSTEP，最后才叫做 NEXTSTEP。）是由 NeXT 所开发的操作系统。&lt;/li&gt;
&lt;li&gt;NeXT 也是现任苹果电脑 CEO，Steve Jobs
在1985年离开苹果电脑后所创立的公司。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;Cocoa 是从1980年代由 NeXT 开发的编程环境 NeXTSTEP 和 OPENSTEP
演变而来（在前面的在 &lt;a class="reference external" href="http://magicalboy.com/objective-c-on-windows.html"&gt;Windows 上学习开发 Objective
C&lt;/a&gt;
也介绍过），这点可由其类别之名皆以 NS
前缀（代表NeXTSTEP）看出端倪。它内置了对 Objective-C
语言的支持，并结合了 Project Builder (它的后继版本为 Xcode)和
Interface Builder 等开发工具。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;参考链接表：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/OPENSTEP"&gt;http://zh.wikipedia.org/zh-cn/OPENSTEP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/NEXTSTEP"&gt;http://zh.wikipedia.org/zh-cn/NEXTSTEP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Cocoa"&gt;http://zh.wikipedia.org/zh-cn/Cocoa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>何謂 Cocoa Touch</title><link href="https://magicalboy.com/cocoa-touch.html" rel="alternate"></link><published>2010-10-12T06:18:00+08:00</published><updated>2010-10-12T06:18:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-10-12:/cocoa-touch.html</id><summary type="html">&lt;p&gt;Cocoa Touch 是一個應用程序接口，專為蘋果公司的 iPhone, iPod Touch 和
iPad 上運行的應用程序而構建的 API。&lt;/p&gt;
&lt;p&gt;Cocoa Touch 為 iOS 提供了一個抽象層，iOS 是一個作業在 iPhone, iPod Touch
和 iPad 的操作系統。Cocoa Touch 是一個基於 Mac OS X Cocoa API
工具集的API，其主要由 Objective-C 語言來現實。&lt;/p&gt;
&lt;p&gt;基於 Cocoa Touch 的開發應用程序工具已經被包含在 iPhone SDK 裡。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Cocoa Touch 是一個應用程序接口，專為蘋果公司的 iPhone, iPod Touch 和
iPad 上運行的應用程序而構建的 API。&lt;/p&gt;
&lt;p&gt;Cocoa Touch 為 iOS 提供了一個抽象層，iOS 是一個作業在 iPhone, iPod Touch
和 iPad 的操作系統。Cocoa Touch 是一個基於 Mac OS X Cocoa API
工具集的API，其主要由 Objective-C 語言來現實。&lt;/p&gt;
&lt;p&gt;基於 Cocoa Touch 的開發應用程序工具已經被包含在 iPhone SDK 裡。&lt;/p&gt;
</content></entry><entry><title>在 Windows 上学习开发 Objective C</title><link href="https://magicalboy.com/objective-c-on-windows.html" rel="alternate"></link><published>2010-09-21T06:39:00+08:00</published><updated>2010-09-21T06:39:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-09-21:/objective-c-on-windows.html</id><summary type="html">&lt;p&gt;Objective-C(ObjC) 现在几乎已经变成了苹果的专利，可以直接在苹果的 Xcode
上编译 ObjC 程序，但是在 Windows 平台下的编译工具就寥寥无几了，即使 ObjC
在语言排行榜上的上升速度多么强势给力。&lt;/p&gt;
&lt;p&gt;下面引用维基百科对 &lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Objective_C"&gt;Objective
C&lt;/a&gt;描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Objective-C，通常写作ObjC和较少用的Objective
C或Obj-C，是在C的基础上，加入面向对象特性扩充而成的編程語言。&lt;/p&gt;
&lt;p&gt;今日主要应用于&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Mac_OS_X"&gt;Mac OS
X&lt;/a&gt;和&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/IPhone_OS"&gt;iPhone
OS&lt;/a&gt;这两个以&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/OpenStep"&gt;OpenStep&lt;/a&gt;为标准的系统，而在&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/NeXTSTEP"&gt;NeXTSTEP&lt;/a&gt;和OpenStep中它更是基本语言。Objective-C可以在任何运行&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Gcc"&gt;gcc&lt;/a&gt;的系统写和编译，因为gcc含Objective-C的编译器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/09/program_top20_on9.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-836" src="http://magicalboy.com/wp-content/uploads/2010/09/program_top20_on9.png" style="width: 550px; height: 784px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;在 Windows 上编译 Objective C&lt;/h2&gt;
&lt;p&gt;看到前面的介绍，我们了解了如果要编译 ObjC 就必须有 gcc …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Objective-C(ObjC) 现在几乎已经变成了苹果的专利，可以直接在苹果的 Xcode
上编译 ObjC 程序，但是在 Windows 平台下的编译工具就寥寥无几了，即使 ObjC
在语言排行榜上的上升速度多么强势给力。&lt;/p&gt;
&lt;p&gt;下面引用维基百科对 &lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Objective_C"&gt;Objective
C&lt;/a&gt;描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Objective-C，通常写作ObjC和较少用的Objective
C或Obj-C，是在C的基础上，加入面向对象特性扩充而成的編程語言。&lt;/p&gt;
&lt;p&gt;今日主要应用于&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Mac_OS_X"&gt;Mac OS
X&lt;/a&gt;和&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/IPhone_OS"&gt;iPhone
OS&lt;/a&gt;这两个以&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/OpenStep"&gt;OpenStep&lt;/a&gt;为标准的系统，而在&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/NeXTSTEP"&gt;NeXTSTEP&lt;/a&gt;和OpenStep中它更是基本语言。Objective-C可以在任何运行&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Gcc"&gt;gcc&lt;/a&gt;的系统写和编译，因为gcc含Objective-C的编译器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/09/program_top20_on9.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-836" src="http://magicalboy.com/wp-content/uploads/2010/09/program_top20_on9.png" style="width: 550px; height: 784px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;在 Windows 上编译 Objective C&lt;/h2&gt;
&lt;p&gt;看到前面的介绍，我们了解了如果要编译 ObjC 就必须有 gcc
或相关的环境。而本文将要介绍使用 &lt;a class="reference external" href="http://www.gnustep.org/"&gt;GNUstep&lt;/a&gt;
在 Windows 上搭建 ObjC 开发学习环境。GNUstep是一个跨平台的免费开放的
Cocoa(NeXTSTEP/OpenStep 的前身) APIs。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装GNUstep&lt;/li&gt;
&lt;li&gt;编写Objective-C代码&lt;/li&gt;
&lt;li&gt;配置环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.gnustep.org/index.php/Deployment_on_Windows"&gt;Deployment on Windows -
GNUstepWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.gnustep.org/index.php/Installation_on_Windows#Install_msys_developer_toolkit"&gt;Installation on Windows -
GNUstepWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.roseindia.net/iphone/objectivec/objective-c-windows.shtml"&gt;Objective C on Windows, Objective C Windows, Objective C Windows
Compiler, Objective C Compiler for
Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>Python 的变量作用域和 LEGB 原则</title><link href="https://magicalboy.com/python-scope-legb.html" rel="alternate"></link><published>2010-09-09T08:59:00+08:00</published><updated>2010-09-09T08:59:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-09-09:/python-scope-legb.html</id><summary type="html">&lt;p&gt;在 Python
程序中创建、改变或查找变量名时，都是在一个保存变量名的地方进行中，那个地方我们称之为命名空间。作用域这个术语也称之为命名空间。&lt;/p&gt;
&lt;p&gt;具体地说，在代码中变量名被赋值（Python 中变量声明即赋值，global
声明的只是变量的使用域）的位置决定了该变量能被访问的范围。函数定义了本地作用域，而模块定义的是全局作用域。这两个作用域之前有如下关系：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;每一个模块都是全局作用域。&lt;/strong&gt;也就是说，创建于模块文件顶层的变量具有全局作用域，对于外部访问就成了一个模块对象的属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局作用域的作用范围仅限于单个文件。&lt;/strong&gt;“全局”指的是在一个文件的顶层变量名对于这个文件而言是全局的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每次对函数的调用都创建了一个新的本地作用域。&lt;/strong&gt;Python
中也有递归，即可以调用自身，每次调用都会创建五个新的本地命名空间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赋值的变量名除非声明为全局变量，否则均为本地变量。&lt;/strong&gt;如果需要在函数内部对模块文件顶层的变量名赋值，需要在函数内部通过
global 语句声明该变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的变量可归纳为本地、全局或者内置三种。&lt;/strong&gt;范围分别为 def
内部，在一个模块的命名空间内部和预定义的 __builtin__
模块提供的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="legb"&gt;
&lt;h2&gt;变量名解析：LEGB 原则&lt;/h2&gt;
&lt;p&gt;如果对以上内容有所迷惑的话，请看以下总结出的几条原则。在函数命名空间中：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;变量名引用分为三个作用域进行查找 …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;在 Python
程序中创建、改变或查找变量名时，都是在一个保存变量名的地方进行中，那个地方我们称之为命名空间。作用域这个术语也称之为命名空间。&lt;/p&gt;
&lt;p&gt;具体地说，在代码中变量名被赋值（Python 中变量声明即赋值，global
声明的只是变量的使用域）的位置决定了该变量能被访问的范围。函数定义了本地作用域，而模块定义的是全局作用域。这两个作用域之前有如下关系：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;每一个模块都是全局作用域。&lt;/strong&gt;也就是说，创建于模块文件顶层的变量具有全局作用域，对于外部访问就成了一个模块对象的属性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局作用域的作用范围仅限于单个文件。&lt;/strong&gt;“全局”指的是在一个文件的顶层变量名对于这个文件而言是全局的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每次对函数的调用都创建了一个新的本地作用域。&lt;/strong&gt;Python
中也有递归，即可以调用自身，每次调用都会创建五个新的本地命名空间。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;赋值的变量名除非声明为全局变量，否则均为本地变量。&lt;/strong&gt;如果需要在函数内部对模块文件顶层的变量名赋值，需要在函数内部通过
global 语句声明该变量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所有的变量可归纳为本地、全局或者内置三种。&lt;/strong&gt;范围分别为 def
内部，在一个模块的命名空间内部和预定义的 __builtin__
模块提供的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="legb"&gt;
&lt;h2&gt;变量名解析：LEGB 原则&lt;/h2&gt;
&lt;p&gt;如果对以上内容有所迷惑的话，请看以下总结出的几条原则。在函数命名空间中：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;变量名引用分为三个作用域进行查找：首先是本地，然后是函数内（如果有的话），之后是全局，最后是内置。&lt;/li&gt;
&lt;li&gt;在默认情况下，变量名赋值会创建或者改变本地变量。&lt;/li&gt;
&lt;li&gt;全局声明将会给映射到模块文件内部的作用域的变量名赋值。&lt;/li&gt;
&lt;li&gt;Python 的变量名解析机制也称为 &lt;em&gt;LEGB&lt;/em&gt; 法则，具体如下：
当在函数中使用未确定的变量名时，Python 搜索 4
个作用域：本地作用域（L），之后是上一层嵌套结构中 def 或 lambda
的本地作用域（E），之后是全局作用域（G），最后是内置作用域（B）。按这个查找原则，在第一处找到的地方停止。如果没有找到，Python
会报错的。&lt;/li&gt;
&lt;li&gt;下图说明了搜索流程（由内及外）：&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;作用域实例&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;# &lt;span class="pre"&gt;-*-&lt;/span&gt; coding: utf8 &lt;span class="pre"&gt;-*-&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;# 全局作用域&lt;/div&gt;
&lt;div class="line"&gt;x = 99 # x 和 func 函数在模块中声明，为全局使用域&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;def func(y):&lt;/div&gt;
&lt;div class="line"&gt;# 本地作用域&lt;/div&gt;
&lt;div class="line"&gt;z = x + y # x 为全局变量&lt;/div&gt;
&lt;div class="line"&gt;return z&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;func(1) # func 在模块中定义，可以调用.结果=100&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>C 存储类型简介</title><link href="https://magicalboy.com/c-storage-type.html" rel="alternate"></link><published>2010-09-08T15:18:00+08:00</published><updated>2010-09-08T15:18:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-09-08:/c-storage-type.html</id><summary type="html">&lt;p&gt;在 C 语言中，存储模型，也即存储类，使用存储时期(storage
duration)或者作用域(scope)以及它的链接(linkage)来定义了 5
种存储类：自动、寄存器、具有代码块作用域的静态、具有外部链接的静态和具有内部链接的静态。下表列出了这些组合的简要说明：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="45%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;存储类&lt;/th&gt;
&lt;th class="head"&gt;时期&lt;/th&gt;
&lt;th class="head"&gt;作用域&lt;/th&gt;
&lt;th class="head"&gt;链接&lt;/th&gt;
&lt;th class="head"&gt;声明方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;代码块&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;td&gt;代码块内&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;寄存器&lt;/td&gt;
&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;代码块&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;td&gt;代码块内，使用关键字 register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;具有外部链接的静态&lt;/td&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;外部&lt;/td&gt;
&lt;td&gt;所有函数之外&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;具有内部链接的静态&lt;/td&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;内部&lt;/td&gt;
&lt;td&gt;所有函数之外，使用关键字 static&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;空链接静态 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;在 C 语言中，存储模型，也即存储类，使用存储时期(storage
duration)或者作用域(scope)以及它的链接(linkage)来定义了 5
种存储类：自动、寄存器、具有代码块作用域的静态、具有外部链接的静态和具有内部链接的静态。下表列出了这些组合的简要说明：&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="8%" /&gt;
&lt;col width="45%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;存储类&lt;/th&gt;
&lt;th class="head"&gt;时期&lt;/th&gt;
&lt;th class="head"&gt;作用域&lt;/th&gt;
&lt;th class="head"&gt;链接&lt;/th&gt;
&lt;th class="head"&gt;声明方式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;代码块&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;td&gt;代码块内&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;寄存器&lt;/td&gt;
&lt;td&gt;自动&lt;/td&gt;
&lt;td&gt;代码块&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;td&gt;代码块内，使用关键字 register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;具有外部链接的静态&lt;/td&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;外部&lt;/td&gt;
&lt;td&gt;所有函数之外&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;具有内部链接的静态&lt;/td&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;td&gt;内部&lt;/td&gt;
&lt;td&gt;所有函数之外，使用关键字 static&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;空链接静态&lt;/td&gt;
&lt;td&gt;静态&lt;/td&gt;
&lt;td&gt;代码块&lt;/td&gt;
&lt;td&gt;空&lt;/td&gt;
&lt;td&gt;代码块内，使用关键字 static&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;术语解释&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;作用域&lt;/li&gt;
&lt;li&gt;链接&lt;/li&gt;
&lt;li&gt;存储时期&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;存储类说明符&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;auto：表明一个变量具有自动存储时期。只能用于具有代码块作用域的变量声明中，明确意图，提高程序易读性。&lt;/li&gt;
&lt;li&gt;extern：用于引用声明，即声明的变量已经在别处定义过了。&lt;/li&gt;
&lt;li&gt;register：也只能用于具有代码块作用域的变量。请求将该变量存储在一个寄存器内，以更快地存取。使用它后将不能获取变量的地址。&lt;/li&gt;
&lt;li&gt;static：用于表明链接类型，根据上下文而不同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：绝不能在一个声明中使用一个以上的存储类说明符。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;代码示例&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;// parta.c &lt;span class="pre"&gt;---&lt;/span&gt; various storage classes #include&amp;nbsp; void &lt;span class="pre"&gt;report_count();&lt;/span&gt; void accumulate(int k); int count = 0;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // file scope, external linkage&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;int main(void)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;int value; // automatic variable&lt;/div&gt;
&lt;div class="line"&gt;register int i; // register variable&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;printf(&amp;quot;Enter a positive integer (0 to quit): &amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;while (scanf(&amp;quot;%d&amp;quot;, &amp;amp;value) == 1 &amp;amp;&amp;amp; value &amp;gt; 0)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;++count; // use file scope variable&lt;/div&gt;
&lt;div class="line"&gt;for (i = value; i &amp;gt;= 0; i--)&lt;/div&gt;
&lt;div class="line"&gt;accumulate(i);&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;Enter a positive integer (0 to quit): &amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;report_count();&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;void report_count()&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;Loop executed %d timesn&amp;quot;, count);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// partb.c -- rest of the program&lt;/div&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;extern int count; // reference declaration, external linkage&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;static int total = 0; // static definition, internal linkage&lt;/div&gt;
&lt;div class="line"&gt;void accumulate(int k); // prototype&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;void accumulate(int k) // k has block scope, no linkage&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;static int subtotal = 0; // static, no linkage&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;if (k &amp;lt; = 0)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;loop cycle: %dn&amp;quot;, count);&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;subtotal: %d; total: %dn&amp;quot;, subtotal, total);&lt;/div&gt;
&lt;div class="line"&gt;subtotal = 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;else&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;subtotal += k;&lt;/div&gt;
&lt;div class="line"&gt;total += k;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;小结&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;自动变量具有代码块作用域、空链接和自动存储时期。它们是局部变量，为定义它们的代码块（比如函数）所私有。寄存器变量和自动变量具有相同的属性，不同的是编译器&lt;strong&gt;可能&lt;/strong&gt;使用速度更快的内存或寄存器来存储它们，另外也无法获取一个寄存器的地址。&lt;/div&gt;
&lt;div class="line"&gt;具有静态存储时期的变量可能具有外部链接、内部链接或空链接。这取决于声明变量的位置和是否使用关键字
static。&lt;/div&gt;
&lt;div class="line"&gt;&lt;em&gt;（本文内容来自《C Primer Plus》阅读笔记）&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>为何选择 Python</title><link href="https://magicalboy.com/why-use-python.html" rel="alternate"></link><published>2010-09-07T14:31:00+08:00</published><updated>2010-09-07T14:31:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-09-07:/why-use-python.html</id><summary type="html">&lt;p&gt;Python
(/'paɪθɑn/)，是一种面向对象的动态编程语言。它发行于1991年，由吉多·范罗苏姆（Guido
van Rossum，荷兰计算机程序员）设计。&lt;/p&gt;
&lt;p&gt;Python
取名于1989年圣诞节期间的阿姆斯特丹，吉多为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，作为ABC语言的一种继承。之所以选中Python（大蟒蛇的意思）作为程序的名字，是因为他是一个蒙提·派森的飞行马戏团的爱好者。（via
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Python"&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为何选择 Python&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件质量&lt;/li&gt;
&lt;li&gt;开发者效率&lt;/li&gt;
&lt;li&gt;可移植性&lt;/li&gt;
&lt;li&gt;标准库支持&lt;/li&gt;
&lt;li&gt;组件集成&lt;/li&gt;
&lt;li&gt;享受乐趣&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Python 的唯一缺点&lt;/h2&gt;
&lt;p&gt;也许有人会问，Python 的执行速度快吗？相对于 C/C++
这类编译编译语言相比，Python 的执行速度还不够快。这取决于 Python
语言的实现方式：Python
源文件首先被编译为字节码（跨平台），运行的时候再将字节码解释为底层的机器码（这点类似 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Python
(/'paɪθɑn/)，是一种面向对象的动态编程语言。它发行于1991年，由吉多·范罗苏姆（Guido
van Rossum，荷兰计算机程序员）设计。&lt;/p&gt;
&lt;p&gt;Python
取名于1989年圣诞节期间的阿姆斯特丹，吉多为了打发圣诞节的无趣，决心开发一个新的脚本解释程序，作为ABC语言的一种继承。之所以选中Python（大蟒蛇的意思）作为程序的名字，是因为他是一个蒙提·派森的飞行马戏团的爱好者。（via
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Python"&gt;维基百科&lt;/a&gt;）&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为何选择 Python&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;软件质量&lt;/li&gt;
&lt;li&gt;开发者效率&lt;/li&gt;
&lt;li&gt;可移植性&lt;/li&gt;
&lt;li&gt;标准库支持&lt;/li&gt;
&lt;li&gt;组件集成&lt;/li&gt;
&lt;li&gt;享受乐趣&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Python 的唯一缺点&lt;/h2&gt;
&lt;p&gt;也许有人会问，Python 的执行速度快吗？相对于 C/C++
这类编译编译语言相比，Python 的执行速度还不够快。这取决于 Python
语言的实现方式：Python
源文件首先被编译为字节码（跨平台），运行的时候再将字节码解释为底层的机器码（这点类似
Java）。所以它运行起来将会比 C 这类完全编译型语言慢一点。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;谁在使用 Python&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;因为 Python 是开放源代码的，在很多操作系统上都内置安装了
Python。开发者社区也有很多，比如&lt;a class="reference external" href="http://wiki.woodpecker.org.cn/"&gt;啄木鸟Python开源社区&lt;/a&gt;，&lt;a class="reference external" href="http://python.cn/"&gt;Python
中文社区&lt;/a&gt;。另外 Google 的 &lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/docs/python/gettingstarted/"&gt;App
Engine&lt;/a&gt;
使用的 Python 开发平台最值得我们注意。我们可以利用这个平台学习
Python。&lt;/div&gt;
&lt;div class="line"&gt;以下是一份 Python
合作伙伴列表的&lt;a class="reference external" href="http://python.org/psf/"&gt;链接地址&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>没鼠标？键盘当鼠标使用 (Windows)</title><link href="https://magicalboy.com/keybord-as-mouse4windows.html" rel="alternate"></link><published>2010-08-28T09:13:00+08:00</published><updated>2010-08-28T09:13:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-28:/keybord-as-mouse4windows.html</id><summary type="html">&lt;p&gt;嗯，今天那么有空，就写一些简单的计算机应用的文章。&lt;/p&gt;
&lt;blockquote&gt;
使用电脑不一定要鼠标，有键盘则已；不一定要键盘，有触屏则已。&lt;/blockquote&gt;
&lt;p&gt;如果一台电脑没有鼠标确实很不方便。但在暂时没有鼠标、没有触屏，只有一个键盘的情况下，作为一名非键盘控者来说，使用键盘当鼠标来使用不失为较好的权宜之计。&lt;/p&gt;
&lt;div class="section" id="windows-xp"&gt;
&lt;h2&gt;设置方法（Windows XP）&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;打开控制面板-辅助功能选项，设置如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/mousekeybord.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-773" src="http://magicalboy.com/wp-content/uploads/2010/08/mousekeybord.png" style="width: 503px; height: 574px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;热键 Alt+Shift+NumLock(我的键盘还有个小鼠标logo呢) 启动。&lt;/li&gt;
&lt;li&gt;可八个方位（数字小键盘上对应方向的数字）控制光标移动。&lt;/li&gt;
&lt;li&gt;同时按住 Ctrl 还能加速移动。&lt;/li&gt;
&lt;li&gt;在任务状态栏通知区域可看到鼠标键启用和不可用状态等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all.&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;嗯，今天那么有空，就写一些简单的计算机应用的文章。&lt;/p&gt;
&lt;blockquote&gt;
使用电脑不一定要鼠标，有键盘则已；不一定要键盘，有触屏则已。&lt;/blockquote&gt;
&lt;p&gt;如果一台电脑没有鼠标确实很不方便。但在暂时没有鼠标、没有触屏，只有一个键盘的情况下，作为一名非键盘控者来说，使用键盘当鼠标来使用不失为较好的权宜之计。&lt;/p&gt;
&lt;div class="section" id="windows-xp"&gt;
&lt;h2&gt;设置方法（Windows XP）&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;打开控制面板-辅助功能选项，设置如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/mousekeybord.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-773" src="http://magicalboy.com/wp-content/uploads/2010/08/mousekeybord.png" style="width: 503px; height: 574px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;热键 Alt+Shift+NumLock(我的键盘还有个小鼠标logo呢) 启动。&lt;/li&gt;
&lt;li&gt;可八个方位（数字小键盘上对应方向的数字）控制光标移动。&lt;/li&gt;
&lt;li&gt;同时按住 Ctrl 还能加速移动。&lt;/li&gt;
&lt;li&gt;在任务状态栏通知区域可看到鼠标键启用和不可用状态等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>在 Google appengine 搭建 Micolog 博客</title><link href="https://magicalboy.com/build-blog-on-google-appengine.html" rel="alternate"></link><published>2010-08-27T15:39:00+08:00</published><updated>2010-08-27T15:39:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-27:/build-blog-on-google-appengine.html</id><summary type="html">&lt;p&gt;今天简要的介绍一下，如何使用 &lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/"&gt;Google App Engine&lt;/a&gt; 在 Google
的基础架构上运行您的网络应用程序——搭建一个属于自己的独立博客。&lt;/p&gt;
&lt;p&gt;适合安装在 GAE 的开源 Python
博客有很多，&lt;a class="reference external" href="http://www.allengao.com/blog/python-blog-4-google-app-engine-gae.html"&gt;这里&lt;/a&gt; 有一个列表,可以链接去看看.本文主要使用
&lt;a class="reference external" href="micolog.appspot.com/"&gt;Micolog&lt;/a&gt;
作为示例，一个追求自由、开放、简约的GAE免费博客程序。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;第一步：配置环境&lt;/h2&gt;
&lt;p&gt;首先准备好以下环境：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Linux Ubuntu10.04（在 Windows 下相对简单，本文最后给出安装文档链接）&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.python.org/ftp/python/"&gt;Python 2.6.5&lt;/a&gt; （Windows
需要自行安装，建议安装2.5.x 版本）&lt;/li&gt;
&lt;li&gt;django-admin.py --version: 0.96.5 （请参考我之前写的 …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天简要的介绍一下，如何使用 &lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/"&gt;Google App Engine&lt;/a&gt; 在 Google
的基础架构上运行您的网络应用程序——搭建一个属于自己的独立博客。&lt;/p&gt;
&lt;p&gt;适合安装在 GAE 的开源 Python
博客有很多，&lt;a class="reference external" href="http://www.allengao.com/blog/python-blog-4-google-app-engine-gae.html"&gt;这里&lt;/a&gt; 有一个列表,可以链接去看看.本文主要使用
&lt;a class="reference external" href="micolog.appspot.com/"&gt;Micolog&lt;/a&gt;
作为示例，一个追求自由、开放、简约的GAE免费博客程序。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;第一步：配置环境&lt;/h2&gt;
&lt;p&gt;首先准备好以下环境：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Linux Ubuntu10.04（在 Windows 下相对简单，本文最后给出安装文档链接）&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.python.org/ftp/python/"&gt;Python 2.6.5&lt;/a&gt; （Windows
需要自行安装，建议安装2.5.x 版本）&lt;/li&gt;
&lt;li&gt;django-admin.py --version: 0.96.5 （请参考我之前写的 &lt;a class="reference external" href="http://magicalboy.com/quick-install-django.html"&gt;Django 快速安装指南&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/downloads.html#Google_App_Engine_SDK_for_Python"&gt;google_appengine_1.3.6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://micolog.googlecode.com/files/micolog0.7rc2.zip"&gt;micolog 0.7 RC2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="micolog"&gt;
&lt;h2&gt;第二步：配置 micolog&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用 unzip 或其它解压缩命令来解压 google_appengine_1.3.6.zip 和
micolog 0.7 RC2.zip，并将 micolog 移动到 google_appengine 下，可使用
cp 命令，目标目录的命名需要和你的 Google appengine
中的应用名一致，比如我申请的应用名为
woicode（以下均使用此名作为示例，读者可自行修改为自己的。）。&lt;/li&gt;
&lt;li&gt;修改 woicode 下的 app.yaml 文件的第一行为对应的应用名，application:
woicode。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;第三步，测试并上传&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;可在 google_appengine 目录中使用 &amp;quot;python dev_appserver.py woicode/&amp;quot;
命令在本地测试。&lt;/li&gt;
&lt;li&gt;确定没问题可运行后，使用 &amp;quot;python appcfg.py update woicode/&amp;quot;
命令上传到 google appengine 服务器。&lt;/li&gt;
&lt;li&gt;打开应用访问地址，应用名.appspot.com，比如我的为
&lt;a class="reference external" href="http://woicode.appspot.com/"&gt;http://woicode.appspot.com/&lt;/a&gt; 。看到一些错误提示信息甚至 DNS 解析错误都属于正常，因为 google 的 gae 服务器正在为程序建立索引等信息，我们耐心等待吧（一般不会超过12小时）。&lt;/li&gt;
&lt;li&gt;恭喜你，又一个独立博客！&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;对于个人独立博客来说，GAE 为每个应用都提供了足够的空间和访问量（500M 和 500万PV）。&lt;/p&gt;
&lt;p&gt;访问速度也比较令人满意，如果不喜欢 Google 为我们提供的免费二级域名，还可以绑定自己喜欢的域名（&lt;cite&gt;*.appspot.com&lt;/cite&gt;）。&lt;/p&gt;
&lt;p&gt;另外，会不会由于某种原因某一天访问不了就不得而知了，希望这一天不会到来吧。&lt;/p&gt;
&lt;p&gt;附 &lt;a class="reference external" href="http://micolog.appspot.com/%E5%AE%89%E8%A3%85"&gt;micoblog 安装文档&lt;/a&gt; 链接（For Windows）。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>onsubmit 和 return false</title><link href="https://magicalboy.com/onsubmit-return-false.html" rel="alternate"></link><published>2010-08-24T05:28:00+08:00</published><updated>2010-08-24T05:28:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-24:/onsubmit-return-false.html</id><summary type="html">&lt;p&gt;onsubmit 事件会在表单提交前触发。属于 w3c 标准事件，是 form 标签的属性。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="22%" /&gt;
&lt;col width="46%" /&gt;
&lt;col width="9%" /&gt;
&lt;col width="7%" /&gt;
&lt;col width="7%" /&gt;
&lt;col width="11%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;属性&lt;/th&gt;
&lt;th class="head"&gt;此事件发生在何时...&lt;/th&gt;
&lt;th class="head"&gt;IE&lt;/th&gt;
&lt;th class="head"&gt;F&lt;/th&gt;
&lt;th class="head"&gt;O&lt;/th&gt;
&lt;th class="head"&gt;W3C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;onsubmit&lt;/td&gt;
&lt;td&gt;确认按钮被点击。&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;支持该事件的 HTML 标签和 JavaScript 对象：&amp;lt;form&amp;gt;。&lt;/div&gt;
&lt;div class="line"&gt;使用示例——代码清单1：&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="form"&gt;
&lt;h2&gt;防止 form 表单提交&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在 onsubmit 事件中返回 false
值，就能防止表单提交。请看下面代码清单2，表单会提交吗？&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; !DOCTYPE html PUBLIC &lt;span class="pre"&gt;&amp;quot;-//W3C//DTD&lt;/span&gt; XHTML 1.0 &lt;span class="pre"&gt;Transitional//EN&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;http …&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;onsubmit 事件会在表单提交前触发。属于 w3c 标准事件，是 form 标签的属性。&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="22%" /&gt;
&lt;col width="46%" /&gt;
&lt;col width="9%" /&gt;
&lt;col width="7%" /&gt;
&lt;col width="7%" /&gt;
&lt;col width="11%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;属性&lt;/th&gt;
&lt;th class="head"&gt;此事件发生在何时...&lt;/th&gt;
&lt;th class="head"&gt;IE&lt;/th&gt;
&lt;th class="head"&gt;F&lt;/th&gt;
&lt;th class="head"&gt;O&lt;/th&gt;
&lt;th class="head"&gt;W3C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;onsubmit&lt;/td&gt;
&lt;td&gt;确认按钮被点击。&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;支持该事件的 HTML 标签和 JavaScript 对象：&amp;lt;form&amp;gt;。&lt;/div&gt;
&lt;div class="line"&gt;使用示例——代码清单1：&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="form"&gt;
&lt;h2&gt;防止 form 表单提交&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在 onsubmit 事件中返回 false
值，就能防止表单提交。请看下面代码清单2，表单会提交吗？&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; !DOCTYPE html PUBLIC &lt;span class="pre"&gt;&amp;quot;-//W3C//DTD&lt;/span&gt; XHTML 1.0 &lt;span class="pre"&gt;Transitional//EN&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;如果你认为表单不会提交，那就错了。这段代码无论是否选择了上传的文件，表单都会提交。因为
onsubmit 事件接收不了返回的 boolean 值~！&lt;/div&gt;
&lt;div class="line"&gt;要想这个检查方法有效，应该为代码清单2的18行中 onsubmit 增加 return
关键字：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;onsubmit=&amp;quot;return&lt;/span&gt; &lt;span class="pre"&gt;checkform(this);&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;类似的用法，在锚标签(&amp;lt;a/&amp;gt;)中，我们会用到它来增加一些点击事件，比如，&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;返回&lt;/li&gt;
&lt;li&gt;显示手形指针&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>GAE 使用入门：Python 遇到的 AppConfigNotFoundError 错误</title><link href="https://magicalboy.com/gae-appconfignotfounderror.html" rel="alternate"></link><published>2010-08-21T13:47:00+08:00</published><updated>2010-08-21T13:47:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-21:/gae-appconfignotfounderror.html</id><summary type="html">&lt;p&gt;自己之前有搭建过 GAE（&lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/docs/whatisgoogleappengine.html"&gt;Google App
Engine&lt;/a&gt;）谷歌应用程序引擎开发环境，那时只是玩玩没有认真地去学习。这次在配置环境开发
&lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/docs/python/gettingstarted/helloworld.html"&gt;Hello
world&lt;/a&gt;
时，遇上了 AppConfigNotFoundError 错误，看了N久都没发现是哪里引起的错误
- -!&lt;/p&gt;
&lt;div class="section" id="helloworld"&gt;
&lt;h2&gt;helloworld&lt;/h2&gt;
&lt;p&gt;步骤一切像官方教程所说的那样，只不过没有使用 Ctrl-C/Ctrl-V
大法，而是一步步手动敲代码。直到“测试应用程序”这一步，执行
dev_appserver.py helloworld/
后发现服务启动不了：google.appengine.tools.dev_appserver.AppConfigNotFoundError。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题所在&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;命令行中报错为
AppConfigNotFoundError，那可能和应用程序配置文件有关。找不到应用配置错误，很有可能是应用程序路径不对或者是在创建配置文件
app.yaml 时出错了。检查过路径无误，即定位到 /helloworld
的上一级目录。再看看 app …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;自己之前有搭建过 GAE（&lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/docs/whatisgoogleappengine.html"&gt;Google App
Engine&lt;/a&gt;）谷歌应用程序引擎开发环境，那时只是玩玩没有认真地去学习。这次在配置环境开发
&lt;a class="reference external" href="http://code.google.com/intl/zh-CN/appengine/docs/python/gettingstarted/helloworld.html"&gt;Hello
world&lt;/a&gt;
时，遇上了 AppConfigNotFoundError 错误，看了N久都没发现是哪里引起的错误
- -!&lt;/p&gt;
&lt;div class="section" id="helloworld"&gt;
&lt;h2&gt;helloworld&lt;/h2&gt;
&lt;p&gt;步骤一切像官方教程所说的那样，只不过没有使用 Ctrl-C/Ctrl-V
大法，而是一步步手动敲代码。直到“测试应用程序”这一步，执行
dev_appserver.py helloworld/
后发现服务启动不了：google.appengine.tools.dev_appserver.AppConfigNotFoundError。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题所在&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;命令行中报错为
AppConfigNotFoundError，那可能和应用程序配置文件有关。找不到应用配置错误，很有可能是应用程序路径不对或者是在创建配置文件
app.yaml 时出错了。检查过路径无误，即定位到 /helloworld
的上一级目录。再看看 app.yaml 文件：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;application: helloworld version: 1 runtime: python api_version: 1&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;handlers:&lt;/div&gt;
&lt;div class="line"&gt;- url: /.*&lt;/div&gt;
&lt;div class="line"&gt;script: helloworld.py # 注意这行开头有两个空格！&lt;/div&gt;
&lt;div class="line"&gt;再和官方网站的教程（最新版本的）对比，才发现第8行前面少了两个空格！天啊，这个
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/YAML"&gt;yaml&lt;/a&gt;(YAML Ain't Markup
Language)
太变态了吧。那么严格，不愧为以数据做为中心，而不是以置标语言为重点。使用空白符号缩排这点和
Python 一样呢。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;关闭服务&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;还有一个问题就是，在关闭服务的时候，按照官方所说的：&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
要关闭网络服务器，请确保终端窗口处于活动状态，然后按
Control-C（或您的控制台上相应的“break”键）。&lt;/blockquote&gt;
&lt;p&gt;上述方法竟然完全无效，在我的 Windows XP 下只能通过 Ctrl-Break
来结束，呵呵。&lt;/p&gt;
&lt;p&gt;继续学习吧，之后将准备在 GAE
下搭建博客等网站，即使由于众所周知的原因不怎么受欢迎，呵呵&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>MediaWiki 增加数学公式显示支持</title><link href="https://magicalboy.com/mediawiki-displaying-a-formula.html" rel="alternate"></link><published>2010-08-20T07:03:00+08:00</published><updated>2010-08-20T07:03:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-20:/mediawiki-displaying-a-formula.html</id><summary type="html">&lt;p&gt;最近心血来潮，于是乎为 &lt;a class="reference external" href="http://wiki.magicalboy.com"&gt;magicwiki&lt;/a&gt;
增加数学公式显示的支持，有兴趣的朋友不妨前往围观。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;原理&lt;/h2&gt;
&lt;p&gt;MediaWiki 对数学公式仅支持 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/TeX"&gt;TeX&lt;/a&gt;
标记语言的子集，包括 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; 和
AMS-LaTeX，根据用户的喜好和表达式的复杂性生成简单的 HTML 标记或者 PNG
图片来显示公式。也就是说 Mediawiki 过滤 Tex 标记后，使用 Texvc
命令来渲染成图形。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="texvc"&gt;
&lt;h2&gt;方法一：texvc&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;为 MediaWiki
增加数学公式显示支持方法有很多种，如果拥有主机空间的控制权限（比如可使用
SSH），可尝试下面的方法。&lt;/div&gt;
&lt;div class="line"&gt;准备工作是主机上必须安装好以下软件包:&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ocaml&lt;/li&gt;
&lt;li&gt;imagemagick&lt;/li&gt;
&lt;li&gt;gs&lt;/li&gt;
&lt;li&gt;cjk-latex (now called latex-cjk-all)&lt;/li&gt;
&lt;li&gt;tetex-extra&lt;/li&gt;
&lt;li&gt;binutils (&amp;quot;/usr/bin/as&amp;quot; is …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;最近心血来潮，于是乎为 &lt;a class="reference external" href="http://wiki.magicalboy.com"&gt;magicwiki&lt;/a&gt;
增加数学公式显示的支持，有兴趣的朋友不妨前往围观。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;原理&lt;/h2&gt;
&lt;p&gt;MediaWiki 对数学公式仅支持 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/TeX"&gt;TeX&lt;/a&gt;
标记语言的子集，包括 &lt;a class="reference external" href="http://en.wikipedia.org/wiki/LaTeX"&gt;LaTeX&lt;/a&gt; 和
AMS-LaTeX，根据用户的喜好和表达式的复杂性生成简单的 HTML 标记或者 PNG
图片来显示公式。也就是说 Mediawiki 过滤 Tex 标记后，使用 Texvc
命令来渲染成图形。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="texvc"&gt;
&lt;h2&gt;方法一：texvc&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;为 MediaWiki
增加数学公式显示支持方法有很多种，如果拥有主机空间的控制权限（比如可使用
SSH），可尝试下面的方法。&lt;/div&gt;
&lt;div class="line"&gt;准备工作是主机上必须安装好以下软件包:&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ocaml&lt;/li&gt;
&lt;li&gt;imagemagick&lt;/li&gt;
&lt;li&gt;gs&lt;/li&gt;
&lt;li&gt;cjk-latex (now called latex-cjk-all)&lt;/li&gt;
&lt;li&gt;tetex-extra&lt;/li&gt;
&lt;li&gt;binutils (&amp;quot;/usr/bin/as&amp;quot; is needed by make job)&lt;/li&gt;
&lt;li&gt;gcc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;然后 cd 到 MediaWiki 安装目录下的 math/ 子目录，执行 make 开始安装
texvc。&lt;/div&gt;
&lt;div class="line"&gt;最后，在根目录 LocalSettings.php 中设置 $wgUseTeX = true;
这样就可以使用 math 渲染了。&lt;/div&gt;
&lt;div class="line"&gt;在页面中输入&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
sintheta
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;进行测试，显示没问题。别高兴得太早，来点复杂的：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;phi_n(kappa) =&amp;nbsp; &lt;span class="pre"&gt;frac{1}{4pi^2kappa^2}&lt;/span&gt; int_0^infty&amp;nbsp; frac{sin(kappa &lt;span class="pre"&gt;R)}{kappa&lt;/span&gt; R}&amp;nbsp; &lt;span class="pre"&gt;frac{partial}{partial&lt;/span&gt; R}&amp;nbsp; left[R^2frac{partial &lt;span class="pre"&gt;D_n(R)}{partial&lt;/span&gt; &lt;span class="pre"&gt;R}right],dR&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;情况貌似没有想像中顺利：“&lt;strong&gt;解析失败
(无法写入或建立数学公式输出目录)&lt;/strong&gt;”出错了。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这是因为前者使用简单的 HTML
标记即可显示，而后者需要渲染成图片以显示复杂的数学公式，生成图片需要创建目录和文件，由于服务器权限不允许，所以出现在这样的错误。&lt;/p&gt;
&lt;p&gt;解决方法参见&lt;a class="reference external" href="http://www.mediawiki.org/wiki/Manual:Troubleshooting_math_display_errors#.22Failed_to_parse_.28Can.27t_write_to_or_create_math_output_directory.29.22"&gt;&amp;quot;Failed to parse (Can't write to or create math output
directory)&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mimetex"&gt;
&lt;h2&gt;方法二：使用 Mimetex&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;使用这种方法实质上是利用外部的 cgi
链接来帮我们生成公式图片，所以比较灵活，我们可以使用自定义的标签或者修改代码来实现。&lt;/div&gt;
&lt;div class="line"&gt;自定义标签方法见：&lt;a class="reference external" href="http://www.mediawiki.org/wiki/Mimetex_alternative"&gt;Extension:Mimetex
alternative&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;修改代码使 math 也能过滤到使用 mimetex
渲染文章见：&lt;a class="reference external" href="http://49px.com/wiki/%E5%88%A9%E7%94%A8%E5%A4%96%E9%93%BECGI%E4%B8%BAMediawiki%E6%B7%BB%E5%8A%A0%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%94%AF%E6%8C%81"&gt;利用外链CGI为Mediawiki添加数学公式支持&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;第二种方法也即是修改 includes/Math.php 下的 renderMath 方法：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;#public static function renderMath( $tex, $params=array() ) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&amp;nbsp;&amp;nbsp; global $wgUser;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&amp;nbsp;&amp;nbsp; $math = new MathRenderer( $tex, $params );&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;$math-&amp;gt;setOutputMode(&lt;/span&gt; &lt;span class="pre"&gt;$wgUser-&amp;gt;getOption('math'));&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #&amp;nbsp;&amp;nbsp; return &lt;span class="pre"&gt;$math-&amp;gt;render();&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static function renderMath( $tex, $params=array() ) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return '';&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;数学公式展示页：&lt;a class="reference external" href="http://wiki.magicalboy.com/%E6%95%B0%E5%AD%A6"&gt;数学&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>排序算法：选择排序</title><link href="https://magicalboy.com/selection_sort.html" rel="alternate"></link><published>2010-08-15T15:23:00+08:00</published><updated>2010-08-15T15:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-15:/selection_sort.html</id><summary type="html">&lt;p&gt;选择排序 (selection sort)
是一种简单直观的排序算法。它的工作原理如下：首先在未排序序列中找到最大（或最小）的元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最大（或最小）元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;伪代码&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;for i ( first element)&amp;nbsp; to n (next to last element):&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for i+1 (second element) to n(next to last element):&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; compare the i+1 element with nth element, if nth is greater …&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;选择排序 (selection sort)
是一种简单直观的排序算法。它的工作原理如下：首先在未排序序列中找到最大（或最小）的元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最大（或最小）元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;伪代码&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;for i ( first element)&amp;nbsp; to n (next to last element):&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for i+1 (second element) to n(next to last element):&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; compare the i+1 element with nth element, if nth is greater, swap values&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;简单说明&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;交换操作介于0和(n − 1)次之间。&lt;/li&gt;
&lt;li&gt;比较操作为n(n − 1) / 2次之间。&lt;/li&gt;
&lt;li&gt;赋值操作介于0和3(n − 1)次之间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;源代码示例&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* 字符串指针排序函数 */ void stsrt (char &lt;span class="pre"&gt;*strings[],&lt;/span&gt; int num) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char *temp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int top, seek;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;for (top = 0; top &amp;lt; num-1; top++)&lt;/div&gt;
&lt;div class="line"&gt;for (seek = top + 1; seek &amp;lt; num; seek++)&lt;/div&gt;
&lt;div class="line"&gt;if (strcmp (strings[top], strings[seek]) &amp;gt; 0)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;temp = strings[top];&lt;/div&gt;
&lt;div class="line"&gt;strings[top] = strings[seek];&lt;/div&gt;
&lt;div class="line"&gt;strings[seek] = temp;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>抛弃 FTP 工具，net2ftp 文件上传在线解压</title><link href="https://magicalboy.com/net2ftpupload_unzip.html" rel="alternate"></link><published>2010-08-14T01:45:00+08:00</published><updated>2010-08-14T01:45:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-14:/net2ftpupload_unzip.html</id><summary type="html">&lt;p&gt;net2ftp 是一个基于 ftp 客户端的 web
应用程序，它支持在线文件上传和解压，为我们上传或删除等操作大量文件带来极大的方便！&lt;/p&gt;
&lt;p&gt;使用 FTP 客户端工具，比如 FileZilla，要上传一个 Web 应用网站（比如
Wordpress）的普通方法是：首先解压网站的压缩包，然后将解压开来的所有文件使用
FTP 工具批量上传到 FTP
服务器。这样一个一个小文件地上传不仅消耗时间，而且容易出现上传失败或上传过程中需要手动控制等，煞是不方便。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;而使用 net2ftp 工具，只要将网站压缩成 .zip
格式，再上传到服务器解压即可。&lt;/div&gt;
&lt;div class="line"&gt;拿 DreamHost 的 net2ftp 工具做例子，首先登陆
&lt;a class="reference external" href="http://webftp.dreamhost.com/"&gt;http://webftp.dreamhost.com/&lt;/a&gt;界面如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/login.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-704" src="http://magicalboy.com/wp-content/uploads/2010/08/login.png" style="width: 464px; height: 265px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;接着可以选中某个文件或文件夹作以下操作：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/funs.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-705" src="http://magicalboy.com/wp-content/uploads/2010/08/funs.png" style="width: 313px; height: 378px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以看到 net2ftp 支持多种上传方式 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;net2ftp 是一个基于 ftp 客户端的 web
应用程序，它支持在线文件上传和解压，为我们上传或删除等操作大量文件带来极大的方便！&lt;/p&gt;
&lt;p&gt;使用 FTP 客户端工具，比如 FileZilla，要上传一个 Web 应用网站（比如
Wordpress）的普通方法是：首先解压网站的压缩包，然后将解压开来的所有文件使用
FTP 工具批量上传到 FTP
服务器。这样一个一个小文件地上传不仅消耗时间，而且容易出现上传失败或上传过程中需要手动控制等，煞是不方便。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;而使用 net2ftp 工具，只要将网站压缩成 .zip
格式，再上传到服务器解压即可。&lt;/div&gt;
&lt;div class="line"&gt;拿 DreamHost 的 net2ftp 工具做例子，首先登陆
&lt;a class="reference external" href="http://webftp.dreamhost.com/"&gt;http://webftp.dreamhost.com/&lt;/a&gt;界面如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/login.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-704" src="http://magicalboy.com/wp-content/uploads/2010/08/login.png" style="width: 464px; height: 265px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;接着可以选中某个文件或文件夹作以下操作：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/funs.png"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-705" src="http://magicalboy.com/wp-content/uploads/2010/08/funs.png" style="width: 313px; height: 378px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以看到 net2ftp 支持多种上传方式，Java applet，Flash Upload
等，但是都有文件大小限制。如果文件太大，可以分开多个文件压缩。&lt;/p&gt;
&lt;p&gt;现在大多数主机/虚拟主机都支持 net2ftp
工具，不妨到你的网站控制面板看下，惊喜总是在等待着我们。&lt;/p&gt;
</content></entry><entry><title>Django 文件上传</title><link href="https://magicalboy.com/django-file-upload.html" rel="alternate"></link><published>2010-08-03T08:45:00+08:00</published><updated>2010-08-03T08:45:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-03:/django-file-upload.html</id><summary type="html">&lt;p&gt;本文介绍的 Django 文件上传不是 Django 1.0
以上的上传方法，而是一般通用的文件上传。主要使用
&lt;a class="reference external" href="http://www.djangoproject.com/documentation/0.96/request_response/"&gt;HttpRequest&lt;/a&gt;对象的
FILES 属性，一个类似字典的属性。&lt;/p&gt;
&lt;div class="section" id="files"&gt;
&lt;h2&gt;FILES&lt;/h2&gt;
&lt;p&gt;是一个包含所有上传文件的类似于字典的对象，它里面的每个 key
的名称来自于表单输入控件 &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;&amp;quot; /&amp;gt; 中的 name
属性。每个 key 的值为标准的 Python 字典，其里面又包含以下三个 Key-Value
键值对：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;filename: 上传的文件的名字。&lt;/li&gt;
&lt;li&gt;content-type: 上传文件的类型。&lt;/li&gt;
&lt;li&gt;content: 上传文件的原始内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：只要在表单中指定提交方式为 POST，而且有
enctype=&amp;quot;multipart/form-data&amp;quot; 这个属性，FILES 对象不为空 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;本文介绍的 Django 文件上传不是 Django 1.0
以上的上传方法，而是一般通用的文件上传。主要使用
&lt;a class="reference external" href="http://www.djangoproject.com/documentation/0.96/request_response/"&gt;HttpRequest&lt;/a&gt;对象的
FILES 属性，一个类似字典的属性。&lt;/p&gt;
&lt;div class="section" id="files"&gt;
&lt;h2&gt;FILES&lt;/h2&gt;
&lt;p&gt;是一个包含所有上传文件的类似于字典的对象，它里面的每个 key
的名称来自于表单输入控件 &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;&amp;quot; /&amp;gt; 中的 name
属性。每个 key 的值为标准的 Python 字典，其里面又包含以下三个 Key-Value
键值对：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;filename: 上传的文件的名字。&lt;/li&gt;
&lt;li&gt;content-type: 上传文件的类型。&lt;/li&gt;
&lt;li&gt;content: 上传文件的原始内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：只要在表单中指定提交方式为 POST，而且有
enctype=&amp;quot;multipart/form-data&amp;quot; 这个属性，FILES 对象不为空。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;处理上传文件的内容&lt;/h2&gt;
&lt;p&gt;也就是我们需要保存 FILES 中 content
的内容到磁盘上，核心的方法如以下这段代码：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;def saveUploadFile (file_obj, &lt;span class="pre"&gt;types=(),&lt;/span&gt; size=524288):&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; '''&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 处理上传文件 v1.0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可设置上传文件类型: types&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可设置上传文件大小: size&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;#64;magicalboy 10.8.3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; '''&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; from fileupload.settings import MEDIA_ROOT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; from os import makedirs&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; from os.path import isdir, exists, dirname&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;if types: # 判断是否限制上传文件类型&lt;/div&gt;
&lt;div class="line"&gt;if not file_obj['content-type'] in types: # 判断上传的文件类型&lt;/div&gt;
&lt;div class="line"&gt;return False, &amp;quot;不允许上传的文件类型！&amp;quot;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;buf = file_obj['content']&lt;/div&gt;
&lt;div class="line"&gt;if len(buf) &amp;lt; size: # 判断上传文件大小&lt;/div&gt;
&lt;div class="line"&gt;filename = file_obj['filename']&lt;/div&gt;
&lt;div class="line"&gt;savePath = '%s/%s' % (MEDIA_ROOT, filename.decode('utf8'))&lt;/div&gt;
&lt;div class="line"&gt;dir = dirname(savePath)&lt;/div&gt;
&lt;div class="line"&gt;if not isdir(dir): # create archive dir if nec.&lt;/div&gt;
&lt;div class="line"&gt;makedirs(dir)&lt;/div&gt;
&lt;div class="line"&gt;f = open(savePath, 'wb+')&lt;/div&gt;
&lt;div class="line"&gt;f.write(buf)&lt;/div&gt;
&lt;div class="line"&gt;f.close()&lt;/div&gt;
&lt;div class="line"&gt;return True, &amp;quot;&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;else:&lt;/div&gt;
&lt;div class="line"&gt;return False, &amp;quot;上传文件不能大于 %d K！&amp;quot; % size&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;完整源代码下载：&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/fileupload.zip"&gt;fileupload.zip&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;测试环境：&lt;/h2&gt;
&lt;p&gt;WinXP + Python 2.4 + Django 9.05&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;运行效果：&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/fileupload-1.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-696" src="http://magicalboy.com/wp-content/uploads/2010/08/fileupload-1.png" style="width: 443px; height: 201px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>增加 Django 自带的 admin 管理界面</title><link href="https://magicalboy.com/install-django-admin-app.html" rel="alternate"></link><published>2010-08-02T09:27:00+08:00</published><updated>2010-08-02T09:27:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-08-02:/install-django-admin-app.html</id><summary type="html">&lt;p&gt;admin 是
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Django"&gt;Django&lt;/a&gt;提供的一个核心
app，它可以根据项目中的 model
来自动生成管理界面。它功能强大，而且界面美观。可以管理用户权限，对于管理集中，正如它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站一样，主要以发布为主。&lt;/p&gt;
&lt;p&gt;下面我们来开始安装 admin app 。&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;创建一个新项目：demo&lt;/strong&gt;
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin.py&lt;/span&gt; startproject demo&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;修改 settings.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;配置数据库（MySQL）：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;DATABASE_ENGINE = 'mysql' DATABASE_NAME = 'django' DATABASE_USER = 'root' DATABASE_PASSWORD = 'password'&amp;nbsp; # 数据库密码 DATABASE_HOST = ''&amp;nbsp; # 数据库服务器主机（默认本地） DATABASE_PORT = ''&amp;nbsp; # 数据库服务器端口（默认3306）&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;增添 admin app：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;INSTALLED_APPS = (&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.auth' …&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;admin 是
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Django"&gt;Django&lt;/a&gt;提供的一个核心
app，它可以根据项目中的 model
来自动生成管理界面。它功能强大，而且界面美观。可以管理用户权限，对于管理集中，正如它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站一样，主要以发布为主。&lt;/p&gt;
&lt;p&gt;下面我们来开始安装 admin app 。&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;创建一个新项目：demo&lt;/strong&gt;
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin.py&lt;/span&gt; startproject demo&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;修改 settings.py&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;配置数据库（MySQL）：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;DATABASE_ENGINE = 'mysql' DATABASE_NAME = 'django' DATABASE_USER = 'root' DATABASE_PASSWORD = 'password'&amp;nbsp; # 数据库密码 DATABASE_HOST = ''&amp;nbsp; # 数据库服务器主机（默认本地） DATABASE_PORT = ''&amp;nbsp; # 数据库服务器端口（默认3306）&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;增添 admin app：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;INSTALLED_APPS = (&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.auth',&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.contenttypes',&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.sessions',&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.sites',&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 'django.contrib.admin', # 增加的 admin app )&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;修改 urls.py&lt;/strong&gt;
&lt;tt class="docutils literal"&gt;# Uncomment this for admin: &lt;span class="pre"&gt;(r'^admin/',&lt;/span&gt; &lt;span class="pre"&gt;include('django.contrib.admin.urls')),&lt;/span&gt;&amp;nbsp; 去掉默认注释即可&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;同步数据库&lt;/strong&gt;
&lt;tt class="docutils literal"&gt;manage.py syncdb&lt;/tt&gt;
这样将在数据库中创建 admin 相关的表。
&lt;strong&gt;需要注意的是&lt;/strong&gt;：在你第一次运行 syncdb
时，你很可能被问起是否创建一个 superuser ，如果那时你没有创建
superuser ，你需要运行 djang/contrib/auth/bin/create_superuser.py
来创建一个admin用户，否则你就不能登录到管理界面里去！方法如下：
&lt;tt class="docutils literal"&gt;manage.py shell &amp;gt;&amp;gt;&amp;gt; from django.contrib.auth.create_superuser import createsuperuser &amp;gt;&amp;gt;&amp;gt; createsuperuser()&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;进入 admin&lt;/strong&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;启动内置的服务器：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;manage.py runserver&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;打开浏览器访问：&lt;a class="reference external" href="http://localhost:8000/admin/"&gt;http://localhost:8000/admin/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;界面如下：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/08/django-admin-1.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-676" src="http://magicalboy.com/wp-content/uploads/2010/08/django-admin-1.png" style="width: 548px; height: 434px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content></entry><entry><title>PHP 学习伊始</title><link href="https://magicalboy.com/php-beginning.html" rel="alternate"></link><published>2010-07-27T15:28:00+08:00</published><updated>2010-07-27T15:28:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-27:/php-beginning.html</id><summary type="html">&lt;p&gt;久仰 PHP 大名，&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Php"&gt;PHP&lt;/a&gt; (Hypertext
Preprocessor（递归式命名），超文本预处理器）是一种创建动态交互性站点的强有力的服务器端脚本语言。网络上流行的多种开源网站系统都是采用
PHP 进行开发的，比如本博客使用的 Wordpress，维基百科 MediaWiki，ECShop
网店等。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;作为一名 Web 开发者应该掌握的语言，PHP
学习起来相当容易上手，尤其对于有 Web
开发基础的人们来说。目前最新稳定版本为 &lt;a class="reference external" href="http://php.net/"&gt;PHP 5.3.3
Released!&lt;/a&gt;(via php 官网)。网络上已有大量新手入门
tutorials，有兴趣请
&lt;a class="reference external" href="http://www.google.com/search?client=ubuntu&amp;amp;channel=fs&amp;amp;q=php&amp;amp;ie=utf-8&amp;amp;oe=utf-8"&gt;Google&lt;/a&gt;。&lt;/div&gt;
&lt;div class="line"&gt;像JavaScript，Perl， Python 等脚本语言一样，PHP
也是一门松散类型的语言（Loosely Typed Language），其语法非常类似于
Perl …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;久仰 PHP 大名，&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Php"&gt;PHP&lt;/a&gt; (Hypertext
Preprocessor（递归式命名），超文本预处理器）是一种创建动态交互性站点的强有力的服务器端脚本语言。网络上流行的多种开源网站系统都是采用
PHP 进行开发的，比如本博客使用的 Wordpress，维基百科 MediaWiki，ECShop
网店等。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;作为一名 Web 开发者应该掌握的语言，PHP
学习起来相当容易上手，尤其对于有 Web
开发基础的人们来说。目前最新稳定版本为 &lt;a class="reference external" href="http://php.net/"&gt;PHP 5.3.3
Released!&lt;/a&gt;(via php 官网)。网络上已有大量新手入门
tutorials，有兴趣请
&lt;a class="reference external" href="http://www.google.com/search?client=ubuntu&amp;amp;channel=fs&amp;amp;q=php&amp;amp;ie=utf-8&amp;amp;oe=utf-8"&gt;Google&lt;/a&gt;。&lt;/div&gt;
&lt;div class="line"&gt;像JavaScript，Perl， Python 等脚本语言一样，PHP
也是一门松散类型的语言（Loosely Typed Language），其语法非常类似于
Perl 和 C，下面是代码预览。&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?php&lt;/span&gt; function echoMyName () {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; echo &amp;quot;MAGICALBOY&amp;quot;; } echo &amp;quot;Hello &lt;span class="pre"&gt;Word!&amp;quot;;&lt;/span&gt; echo &amp;quot;My name is &amp;quot;; &lt;span class="pre"&gt;echoMyName();&lt;/span&gt; echo &amp;quot;.That's right, &amp;quot;; &lt;span class="pre"&gt;echoMyName();&lt;/span&gt; echo &amp;quot; is my &lt;span class="pre"&gt;name.&amp;quot;;&lt;/span&gt; &lt;span class="pre"&gt;?&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;So much could this time : )&lt;/p&gt;
</content></entry><entry><title>Feed 终于更新了：FeedSky [705] : 保存失败错误</title><link href="https://magicalboy.com/feedsky-update.html" rel="alternate"></link><published>2010-07-26T15:36:00+08:00</published><updated>2010-07-26T15:36:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-26:/feedsky-update.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;本博客的 Feed 源托管 &lt;a class="reference external" href="http://www.feedsky.com/"&gt;FeedSky&lt;/a&gt;
有两天没更新了，这是自从 &lt;a class="reference external" href="http://feeds.feedburner.com/magicalboy"&gt;Google
Feedburner&lt;/a&gt; 迁到国内的
FeedSky Feed 托管以来，第一次遇到 &lt;strong&gt;[705] : 保存失败&lt;/strong&gt; 错误。&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/feedstatus.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-649" src="http://magicalboy.com/wp-content/uploads/2010/07/feedstatus.png" style="width: 323px; height: 365px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;改用国内的 Feed 托管服务器 FeedSky
，主要是因为它支持免费的二级域名绑定。虽然 Feedburner
更新速度上很快，但是 Feedburner
不支持二级域名绑定，且经常被墙，好危险啊。而国内的 FeedSky
相对来说更新速度上没那么及时，如果没有手动通知它来更新，一般 3
个小时过来抓取一次（看上面截图的更新时间）。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;设置更新服务&lt;/h2&gt;
&lt;p&gt;当您发表一篇新文章时，WordPress 将会向所设置的站点发出通告。在此加上
FeedSky
的通知地址，如此一来，当你博客有文章发表或更新，马上会通知它们。在
“控制板－设置 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;本博客的 Feed 源托管 &lt;a class="reference external" href="http://www.feedsky.com/"&gt;FeedSky&lt;/a&gt;
有两天没更新了，这是自从 &lt;a class="reference external" href="http://feeds.feedburner.com/magicalboy"&gt;Google
Feedburner&lt;/a&gt; 迁到国内的
FeedSky Feed 托管以来，第一次遇到 &lt;strong&gt;[705] : 保存失败&lt;/strong&gt; 错误。&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/feedstatus.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-649" src="http://magicalboy.com/wp-content/uploads/2010/07/feedstatus.png" style="width: 323px; height: 365px;" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;改用国内的 Feed 托管服务器 FeedSky
，主要是因为它支持免费的二级域名绑定。虽然 Feedburner
更新速度上很快，但是 Feedburner
不支持二级域名绑定，且经常被墙，好危险啊。而国内的 FeedSky
相对来说更新速度上没那么及时，如果没有手动通知它来更新，一般 3
个小时过来抓取一次（看上面截图的更新时间）。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;设置更新服务&lt;/h2&gt;
&lt;p&gt;当您发表一篇新文章时，WordPress 将会向所设置的站点发出通告。在此加上
FeedSky
的通知地址，如此一来，当你博客有文章发表或更新，马上会通知它们。在
“控制板－设置－撰写选项－更新服务”中增加以下地址即可：&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="http://www.feedsky.com/api/RPC2/"&gt;http://www.feedsky.com/api/RPC2/&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;订阅工具当然首选 GoogleReader，支持 https
安全协议让我们看得更多，呵呵。欢迎大家订阅本博客哦 :)&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>让你的 WordPress 参加反 IE6 活动吧</title><link href="https://magicalboy.com/wordpress-anti-ie6.html" rel="alternate"></link><published>2010-07-24T19:11:00+08:00</published><updated>2010-07-24T19:11:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-24:/wordpress-anti-ie6.html</id><summary type="html">&lt;p&gt;“够了够了，我受不了这万恶的 IE6 了！” —— 网页设计师或 Web
开发员经常抱怨道&lt;/p&gt;
&lt;p&gt;IE6 一直是前端开发人员心中的痛，前端开发人员能支持 IE6
是很了不起，但与其将精力花在支持 IE6 上还不如向标准看齐。网络上有关于
IE6 的话题太多了，稍候将在本文后面给出一些参考链接以供围观发泄之备用。&lt;/p&gt;
&lt;p&gt;本文主要介绍给自己的 WordPress 博客增加几个反 IE6
的小部件(widget)，以提示到访的朋友从古老的 IE6
升级到现代浏览器，从而获得更好的体验。&lt;/p&gt;
&lt;div class="section" id="anti-ie6-widgets"&gt;
&lt;h2&gt;Anti IE6 widgets&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;来自 &lt;a class="reference external" href="http://www.ie6nomore.com/"&gt;IE6 No More&lt;/a&gt; 的 Widget，从 IE6
中打开 &lt;a class="reference external" href="http://www.ie6nomore.com/code-samples.html"&gt;code-samples&lt;/a&gt;
可以看到效果。
如果你觉得代码中的图片加载速度缓慢，建议下载离线版，然后自行添加到网站。下载地址：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/antii_ie6_demo1.zip"&gt;IE6
No More …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;“够了够了，我受不了这万恶的 IE6 了！” —— 网页设计师或 Web
开发员经常抱怨道&lt;/p&gt;
&lt;p&gt;IE6 一直是前端开发人员心中的痛，前端开发人员能支持 IE6
是很了不起，但与其将精力花在支持 IE6 上还不如向标准看齐。网络上有关于
IE6 的话题太多了，稍候将在本文后面给出一些参考链接以供围观发泄之备用。&lt;/p&gt;
&lt;p&gt;本文主要介绍给自己的 WordPress 博客增加几个反 IE6
的小部件(widget)，以提示到访的朋友从古老的 IE6
升级到现代浏览器，从而获得更好的体验。&lt;/p&gt;
&lt;div class="section" id="anti-ie6-widgets"&gt;
&lt;h2&gt;Anti IE6 widgets&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;来自 &lt;a class="reference external" href="http://www.ie6nomore.com/"&gt;IE6 No More&lt;/a&gt; 的 Widget，从 IE6
中打开 &lt;a class="reference external" href="http://www.ie6nomore.com/code-samples.html"&gt;code-samples&lt;/a&gt;
可以看到效果。
如果你觉得代码中的图片加载速度缓慢，建议下载离线版，然后自行添加到网站。下载地址：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/antii_ie6_demo1.zip"&gt;IE6
No More
离线版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.neoease.com/lets-kill-ie6/"&gt;Let's Kill IE6&lt;/a&gt; 提供的
Widget（via
&lt;a class="reference external" href="http://www.neoease.com/"&gt;neoease&lt;/a&gt;）。此种方法使用很简单，只要引入一个
JS 即可。如果用户使用的是 IE6
访问，浏览器右下角就会弹出一个提示信息：
&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/anti_ie6_demo2.png"&gt;&lt;img alt="image0" class="alignnone size-full wp-image-642" src="http://magicalboy.com/wp-content/uploads/2010/07/anti_ie6_demo2.png" style="width: 341px; height: 221px;" /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;来自 interjc.net 的
Widget。本博使用的正是这个控件，因为它风格和本博客主题相近，占用空间小，只有两个小图标加载速度比较快。下载地址：&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/07/anti_ie6_demo3.zip"&gt;反
IE6
Widget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;参考链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://interjc.net/a/anti-ie6"&gt;反 IE6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.neoease.com/ie6-must-die/"&gt;IE6 必死&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.google.com/View?id=dg5phkpq_78cd6t5gf8"&gt;符合 Web
标准的浏览器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>Ubuntu 10.04 快速搭建 LAMP 开发环境</title><link href="https://magicalboy.com/ubuntu10-04-lamp.html" rel="alternate"></link><published>2010-07-24T14:00:00+08:00</published><updated>2010-07-24T14:00:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-24:/ubuntu10-04-lamp.html</id><summary type="html">&lt;p&gt;本文将介绍在 Linux Ubuntu 10.04 下快速搭建 LAMP 开发环境。原文来自
&lt;a class="reference external" href="http://amilaudana.wordpress.com/2010/05/06/configure-apache-mysql-php-on-ubuntu/"&gt;Configure Apache MySQL PHP on Ubuntu 10.04&lt;/a&gt; ，加上自己实践的安装过程 :）。&lt;/p&gt;
&lt;p&gt;image0&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/LAMP"&gt;LAMP&lt;/a&gt; ，是指基于&lt;/dt&gt;
&lt;dd&gt;Linux，Apache，MySQL 和
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/PHP"&gt;PHP&lt;/a&gt; （ &lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Perl"&gt;Perl&lt;/a&gt;
或
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Python"&gt;Python&lt;/a&gt; ，&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80"&gt;脚本语言&lt;/a&gt; ）的开放资源网络开发平台。如果是在 Windows 操作系统下使用这些工具称为使用 WAMP 了。&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;搭建 LAMP 有很多种方法，下面我将和大家分享最佳和最简单的方法，just enjoy it。&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;首先，打开&lt;strong&gt;终端&lt;/strong&gt;命令行窗口，输入以下命令：
$ &lt;strong&gt;sudo tasksel …&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;本文将介绍在 Linux Ubuntu 10.04 下快速搭建 LAMP 开发环境。原文来自
&lt;a class="reference external" href="http://amilaudana.wordpress.com/2010/05/06/configure-apache-mysql-php-on-ubuntu/"&gt;Configure Apache MySQL PHP on Ubuntu 10.04&lt;/a&gt; ，加上自己实践的安装过程 :）。&lt;/p&gt;
&lt;p&gt;image0&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/LAMP"&gt;LAMP&lt;/a&gt; ，是指基于&lt;/dt&gt;
&lt;dd&gt;Linux，Apache，MySQL 和
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/PHP"&gt;PHP&lt;/a&gt; （ &lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Perl"&gt;Perl&lt;/a&gt;
或
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Python"&gt;Python&lt;/a&gt; ，&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80"&gt;脚本语言&lt;/a&gt; ）的开放资源网络开发平台。如果是在 Windows 操作系统下使用这些工具称为使用 WAMP 了。&lt;/dd&gt;
&lt;/dl&gt;
&lt;/blockquote&gt;
&lt;p&gt;搭建 LAMP 有很多种方法，下面我将和大家分享最佳和最简单的方法，just enjoy it。&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;首先，打开&lt;strong&gt;终端&lt;/strong&gt;命令行窗口，输入以下命令：
$ &lt;strong&gt;sudo tasksel install lamp-server&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;输入密码后会看到下载安装包界面：
image1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;最后，设置好 MySQL 超级用户 root 的密码，等待 LAMP
所需的组件下载安装完毕，That's all：
image2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;下面介绍配置它们，创建一个新站点并在 Apache2 中启动它。
创建一个新站点，首先复制作为出发点的默认网站文件：
$ &lt;strong&gt;sudo cp /etc/apache2/sites-available/default/etc/apache2/sites-available/mysite&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;更改 &lt;strong&gt;DocumentRoot&lt;/strong&gt; 指向新的位置。默认为 &lt;strong&gt;/var/www&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first line-block"&gt;
&lt;div class="line"&gt;更改目录指令 (cd) 到 /etc/apache2/sites-available ，执行：&lt;/div&gt;
&lt;div class="line"&gt;/etc/apache2/sites-available$ &lt;strong&gt;sudo a2dissite default &amp;amp;&amp;amp; sudo
a2ensite mysite&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;输出：&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Site default disabled.
Run '/etc/init.d/apache2 reload' to activate new configuration!
Enabling site mysite.
Run '/etc/init.d/apache2 reload' to activate new configuration!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;从上面输出中可看出 Apache2 已经自动加载了，无须重启。重启 Apache2 服务的命令：
$ &lt;strong&gt;sudo /etc/init.d/apache2 restart&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;最后打开 &lt;a class="reference external" href="http://localhost/"&gt;http://localhost/&lt;/a&gt;：It works!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content></entry><entry><title>学习 C 数组与指针小结</title><link href="https://magicalboy.com/c-array-pointer.html" rel="alternate"></link><published>2010-07-23T15:28:00+08:00</published><updated>2010-07-23T15:28:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-23:/c-array-pointer.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在 C
语言中，数组其实是一种变相使用指针的形式。通过了解指针与数组之间的关系，可以使用指针方便地操作数组。以下是一些指针和数组之间的关系说明：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;... int * p;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // 定义一个整型指针 int arr[2] = {1, 2};&amp;nbsp;&amp;nbsp; // 定义一个整型数组&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;p = arr; // 把数组地址赋给指针&lt;/div&gt;
&lt;div class="line"&gt;p == &amp;amp;arr[0]; // 指针 p 指向数组 arr 首元素地址&lt;/div&gt;
&lt;div class="line"&gt;arr == &amp;amp;arr[0]; // 数组名同时代表数组首元素的地址&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;p + 1 == &amp;amp;arr[1]; // 对指针加 1 等于加上它所指向的对象的字节大小 (int
一般为 4 字节)&lt;/div&gt;
&lt;div class="line"&gt;p + 2 == &amp;amp;arr[2]; // 相同的地址&lt;/div&gt;
&lt;div class="line"&gt;*(p + 2) == arr …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;在 C
语言中，数组其实是一种变相使用指针的形式。通过了解指针与数组之间的关系，可以使用指针方便地操作数组。以下是一些指针和数组之间的关系说明：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;... int * p;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // 定义一个整型指针 int arr[2] = {1, 2};&amp;nbsp;&amp;nbsp; // 定义一个整型数组&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;p = arr; // 把数组地址赋给指针&lt;/div&gt;
&lt;div class="line"&gt;p == &amp;amp;arr[0]; // 指针 p 指向数组 arr 首元素地址&lt;/div&gt;
&lt;div class="line"&gt;arr == &amp;amp;arr[0]; // 数组名同时代表数组首元素的地址&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;p + 1 == &amp;amp;arr[1]; // 对指针加 1 等于加上它所指向的对象的字节大小 (int
一般为 4 字节)&lt;/div&gt;
&lt;div class="line"&gt;p + 2 == &amp;amp;arr[2]; // 相同的地址&lt;/div&gt;
&lt;div class="line"&gt;*(p + 2) == arr[2]; // 相同的值，arr 数组第三个元素的值&lt;/div&gt;
&lt;div class="line"&gt;*(arr + i) == arr[i]; // 与下面语句等价，arr 为数组名&lt;/div&gt;
&lt;div class="line"&gt;*(p + i) == arr[i]; // p 为指针变量，可使用 p++ 表达式&lt;/div&gt;
&lt;div class="line"&gt;++p != ++arr; // 只能对指针变量使用自增一元运算符，在此语法错误！&lt;/div&gt;
&lt;div class="line"&gt;...&lt;/div&gt;
&lt;div class="line"&gt;例子 1：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* arr_and_p.c &lt;span class="pre"&gt;--&lt;/span&gt; 对一个数组的所有元素求和 */ #define SIZE 10 #include&amp;nbsp; int sum (int *, int *); // 声明函数原型 int main (void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int balls[SIZE] = {30, 20, 25, 9, 56, 14, 18, 16, 21, 28};&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; long total = 0;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;total = sum (balls, balls + SIZE); // 调用函数, balls + SIZE
为数组的结束地址&lt;/div&gt;
&lt;div class="line"&gt;printf (&amp;quot;The total number of balls is %ld.n&amp;quot;, total);&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;int sum (int * start, int * end) // 函数定义&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;int total = 0;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;while (start &amp;lt; end)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;total += *(start++); // 此处括号可省略，* 和 ++ 优先级相同，从右至左&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;此例子主要演示使用指针对数组操作的函数，最后函数返回数组内所有元素的和。&lt;/div&gt;
&lt;div class="line"&gt;首先看程序第 4 ，10， 16 行的数组参数变量的声明和调用。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;第 4 行中，由于原型允许省略名称，所以还有以下 3 种原型是和它等价的：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;int sum (int * start, int * end); int sum (int &lt;span class="pre"&gt;start[],&lt;/span&gt; int &lt;span class="pre"&gt;end[]);&lt;/span&gt; int sum (int [], int &lt;span class="pre"&gt;[]);&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;使用指针作为参数来处理数组时，可选用数组符号或指针符号。正如多数程序员认为的，程序员的主要任务是保证程序的正确性和可读性，代码的优化应该留给编译器去做。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在处理数组的函数中使用指针作为形式参量（而不是数组），而在函数中可以使用数组符号来处理数组。同时，使用数组名做为参数时，实质上是传递的是数组的地址，而非整个数组。也正由于指针与数组名可以互换使用，一般调用处理数组的函数时，传递该数组的开始和结束地址即可（如例1）。&lt;/p&gt;
</content></entry><entry><title>创建 HTML 页面锚点的两种方式</title><link href="https://magicalboy.com/html-named-anchors.html" rel="alternate"></link><published>2010-07-18T08:33:00+08:00</published><updated>2010-07-18T08:33:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-18:/html-named-anchors.html</id><summary type="html">&lt;p&gt;在 WEB 开发中，会使用到页面锚点。HTML
页面锚点用于链接到一个页面的某一章节。&lt;a class="reference external" href="http://www.w3school.com.cn/html/html_links.asp"&gt;W3School&lt;/a&gt;中说到，创建锚点使用
&amp;lt;a&amp;gt; （锚）标签和 name
属性，但这不是创建页面锚点的唯一方法。下面简要说一下制作 HTML
页面锚点的两种方式。&lt;/p&gt;
&lt;p&gt;我们可以利用 &lt;a class="reference external" href="http://www.w3school.com.cn/tiy/t.asp?f=html_link_locations"&gt;W3School
的在线测试工具&lt;/a&gt;来进行测试。打开链接后的测试代码使用的是
&amp;lt;a href=&amp;quot;#C4&amp;quot;&amp;gt; 和 &amp;lt;a name=&amp;quot;C4&amp;quot;&amp;gt;，测试没有问题。再将“ &amp;lt;h2&amp;gt; &amp;lt;a
name=&amp;quot;C4&amp;quot;&amp;gt;Chapter 4 &amp;lt;/a&amp;gt; &amp;lt;/h2&amp;gt;”改为“ &amp;lt;h2 id=&amp;quot;C4&amp;quot;&amp;gt;Chapter 4 &amp;lt;/h2&amp;gt;”
后进行测试，效果一样。&lt;/p&gt;
&lt;p&gt;说明 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;在 WEB 开发中，会使用到页面锚点。HTML
页面锚点用于链接到一个页面的某一章节。&lt;a class="reference external" href="http://www.w3school.com.cn/html/html_links.asp"&gt;W3School&lt;/a&gt;中说到，创建锚点使用
&amp;lt;a&amp;gt; （锚）标签和 name
属性，但这不是创建页面锚点的唯一方法。下面简要说一下制作 HTML
页面锚点的两种方式。&lt;/p&gt;
&lt;p&gt;我们可以利用 &lt;a class="reference external" href="http://www.w3school.com.cn/tiy/t.asp?f=html_link_locations"&gt;W3School
的在线测试工具&lt;/a&gt;来进行测试。打开链接后的测试代码使用的是
&amp;lt;a href=&amp;quot;#C4&amp;quot;&amp;gt; 和 &amp;lt;a name=&amp;quot;C4&amp;quot;&amp;gt;，测试没有问题。再将“ &amp;lt;h2&amp;gt; &amp;lt;a
name=&amp;quot;C4&amp;quot;&amp;gt;Chapter 4 &amp;lt;/a&amp;gt; &amp;lt;/h2&amp;gt;”改为“ &amp;lt;h2 id=&amp;quot;C4&amp;quot;&amp;gt;Chapter 4 &amp;lt;/h2&amp;gt;”
后进行测试，效果一样。&lt;/p&gt;
&lt;p&gt;说明，制作页面锚点除了使用 锚点标签 name 属性之外，还可以使用 id
属性。锚点 &amp;lt;a&amp;gt; 标签中 href 属性的值为 # 开头加上目标的 name 或 id 的值：&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="#method1"&gt;页面锚点方法一&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="#method2"&gt;页面锚点方法二&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;方法一&lt;/h2&gt;
&lt;p&gt;使用锚标签的 href 和 name 属性&lt;/p&gt;
&lt;!-- method2: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;方法二&lt;/h2&gt;
&lt;p&gt;使用锚标签和 id 属性&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;结果如下：（可点击测试）&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="#method1"&gt;页面锚点方法一&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="#method2"&gt;页面锚点方法二&lt;/a&gt;&lt;/p&gt;
&lt;!-- 方法一-1: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;方法一&lt;/h3&gt;
&lt;p&gt;使用锚标签的 href 和 name 属性&lt;/p&gt;
&lt;!-- method2: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;方法二&lt;/h3&gt;
&lt;p&gt;使用锚标签和 id 属性&lt;/p&gt;
&lt;div&gt;&lt;p&gt;=======================内容分割线=======================&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;假如浏览器找不到已定义的命名锚，那么就会定位到文档的顶端。不会有错误发生。锚点还有其它用途，本文只是介绍页面中的锚点的使用。&lt;/p&gt;
&lt;p&gt;更多锚点的使用见：&lt;a class="reference external" href="http://www.blueidea.com/tech/web/2008/5883.asp"&gt;标记语言——锚点 - 网页制作 -
蓝色理想&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>C 指针介绍</title><link href="https://magicalboy.com/c-pointer.html" rel="alternate"></link><published>2010-07-17T15:06:00+08:00</published><updated>2010-07-17T15:06:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-17:/c-pointer.html</id><summary type="html">&lt;p&gt;指针（pointer）的定义：在信息工程中，指针是一个用来指示一个内存地址的变量或中央处理器(CPU)中的寄存器(Register)。&lt;strong&gt;在
C 语言中，指针就是一个存储着变量地址的变量。&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;与指针相关的操作运算符&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;＆：地址运算符，后跟一个变量表示该变量的地址。比如：&amp;amp;foo 得到的是变量
foo 的地址。&lt;/li&gt;
&lt;li&gt;＊：间接运算符，后跟一个指针名或地址表示存储在被指向地址中的值。比如；p
= &amp;amp;foo, *p 为 foo 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;指针声明&lt;/h2&gt;
&lt;p&gt;因为指针是一个变量，其保存的变量地址的那个变量有相应的数据类型，不同的变量类型占用的储存空间大小不同，所以必须说明指针所指向变量的数据类型。指针的声明如下：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;int * foo;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // foo 是指向一个整型变量的指针 float * bar;&amp;nbsp; // bar 是指向一个浮点变量的指针&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;类型标识符 int
说明被指向变量的类型，而不是此指针变量的数据类型，它是一种新的数据类型。星号（＊）说明此变量是一个指针 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;指针（pointer）的定义：在信息工程中，指针是一个用来指示一个内存地址的变量或中央处理器(CPU)中的寄存器(Register)。&lt;strong&gt;在
C 语言中，指针就是一个存储着变量地址的变量。&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;与指针相关的操作运算符&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;＆：地址运算符，后跟一个变量表示该变量的地址。比如：&amp;amp;foo 得到的是变量
foo 的地址。&lt;/li&gt;
&lt;li&gt;＊：间接运算符，后跟一个指针名或地址表示存储在被指向地址中的值。比如；p
= &amp;amp;foo, *p 为 foo 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;指针声明&lt;/h2&gt;
&lt;p&gt;因为指针是一个变量，其保存的变量地址的那个变量有相应的数据类型，不同的变量类型占用的储存空间大小不同，所以必须说明指针所指向变量的数据类型。指针的声明如下：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;int * foo;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // foo 是指向一个整型变量的指针 float * bar;&amp;nbsp; // bar 是指向一个浮点变量的指针&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;类型标识符 int
说明被指向变量的类型，而不是此指针变量的数据类型，它是一种新的数据类型。星号（＊）说明此变量是一个指针。代码书写规范：*
和指针名之间的空格可选，通常在声明时加上，作为间接运算符取值使用时省略。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;指针在函数间的通信示例&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;[cc lang=&amp;quot;c&amp;quot;]&lt;/div&gt;
&lt;div class="line"&gt;/* pointer.c -- 使用指针交换变量 */&lt;/div&gt;
&lt;div class="line"&gt;#include&lt;/div&gt;
&lt;div class="line"&gt;void change (int *, int *); // 声明函数&lt;/div&gt;
&lt;div class="line"&gt;int main (void)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;int a, b; // 声明两个整型变量&lt;/div&gt;
&lt;div class="line"&gt;printf (&amp;quot;Please input two int numbers:n&amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;scanf (&amp;quot;%d%d&amp;quot;, &amp;amp;a, &amp;amp;b); // 为两变量赋值&lt;/div&gt;
&lt;div class="line"&gt;printf (&amp;quot;Before change a = %d and b = %d.n&amp;quot;, a, b);&lt;/div&gt;
&lt;div class="line"&gt;change (&amp;amp;a, &amp;amp;b); // 向函数传递地址&lt;/div&gt;
&lt;div class="line"&gt;printf (&amp;quot;After change a = %d and b = %d.n&amp;quot;, a, b);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;void change (int * x, int * y) // 函数定义&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;int temp; // 声明一个整型的临时变量&lt;/div&gt;
&lt;div class="line"&gt;temp = *x; // 将指针类型的参数 x 指向的数值赋给 temp&lt;/div&gt;
&lt;div class="line"&gt;*x = *y; // 将指针 x 指向 y 指向的数值&lt;/div&gt;
&lt;div class="line"&gt;*y = temp; // 将指针 y 指向 temp 即 x 指向的数值&lt;/div&gt;
&lt;div class="line"&gt;// 因 x 为 main 中 a 的地址，y 为 b 的地址&lt;/div&gt;
&lt;div class="line"&gt;// 至此已完成两值的交换&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;[/cc]&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;p&gt;========================分割线========================&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;理解指针的相关概念，弄清楚变量名称，地址和数值之前的关系至关重要。变量地址一般只由计算机处理，当然你也可以打印出来以满足好奇心。一般也只有低级语言（比较接近机器语言，如汇编和C）才有指针这一概念，面向对象语言如
Java 一般避免使用指针。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>解决robots.txt在Google 网站管理员工具中语法有误的问题</title><link href="https://magicalboy.com/google-robots.html" rel="alternate"></link><published>2010-07-17T01:34:00+08:00</published><updated>2010-07-17T01:34:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-17:/google-robots.html</id><summary type="html">&lt;div class="section" id="robots-txt"&gt;
&lt;h2&gt;robots.txt 在维基百科中的定义&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Robots.txt"&gt;robots.txt&lt;/a&gt;（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不能被搜索引擎的漫游器获取的，哪些是可以被（漫游器）获取的。robots.txt应放置于网站的根目录下。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在&lt;a class="reference external" href="https://www.google.com/webmasters/tools/home?hl=zh-CN"&gt;Google
网站管理员工具&lt;/a&gt;-网站配置-抓取工具的权限中可测试
robots.txt 时发现，解析结果有错误：“第 1 行：?User-agent: *
语法有误”。下面进行问题分析：&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;robots.txt 内容如下&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;User-agent:&lt;/span&gt; * Disallow: &lt;span class="pre"&gt;/wp-admin&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/plugins&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/themes&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-includes&lt;/span&gt; Sitemap: &lt;span class="pre"&gt;http://magicalboy.com/sitemap.xml …&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="robots-txt"&gt;
&lt;h2&gt;robots.txt 在维基百科中的定义&lt;/h2&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Robots.txt"&gt;robots.txt&lt;/a&gt;（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不能被搜索引擎的漫游器获取的，哪些是可以被（漫游器）获取的。robots.txt应放置于网站的根目录下。&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在&lt;a class="reference external" href="https://www.google.com/webmasters/tools/home?hl=zh-CN"&gt;Google
网站管理员工具&lt;/a&gt;-网站配置-抓取工具的权限中可测试
robots.txt 时发现，解析结果有错误：“第 1 行：?User-agent: *
语法有误”。下面进行问题分析：&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;robots.txt 内容如下&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;User-agent:&lt;/span&gt; * Disallow: &lt;span class="pre"&gt;/wp-admin&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/plugins&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/themes&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-includes&lt;/span&gt; Sitemap: &lt;span class="pre"&gt;http://magicalboy.com/sitemap.xml&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;可以发现，?User-agent 前面并没有任何字符，但经 Google
网站管理员工具的读取后，就变成了：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;?User-agent:&lt;/span&gt; * Disallow: &lt;span class="pre"&gt;/wp-admin&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/plugins&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-content/themes&lt;/span&gt; Disallow: &lt;span class="pre"&gt;/wp-includes&lt;/span&gt; Sitemap: &lt;span class="pre"&gt;http://magicalboy.com/sitemap.xml&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决问题&lt;/h2&gt;
&lt;p&gt;最简单的解决方法就是：下载在“Google 网站管理员工具-生成
robots.txt下载”生成的模板修改再上传到网站所在的根目录下。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;分析问题&lt;/h2&gt;
&lt;p&gt;出现这一原因是由于 robots.txt 文件的编码所导致。在前面引用百科中
robots.txt 中说到，它是一个
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/ASCII"&gt;ASCII&lt;/a&gt;
编码的文本文件。而造成语法错误多出一个?字符的 robotxs.txt 的文件编码为
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/UTF-8"&gt;UTF-8&lt;/a&gt; +
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F"&gt;BOM&lt;/a&gt;（字节顺序记号（英：byte-order
mark，BOM））！而从 Google 下载回来的编码是 UTF-8。而 UTF-8 编码包含了
ASCII。更多请点击术语链接到维基百科自行理解:)。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>解决 Google Reader 没有显示网站图标的问题</title><link href="https://magicalboy.com/google-reader-none-favicon.html" rel="alternate"></link><published>2010-07-08T15:21:00+08:00</published><updated>2010-07-08T15:21:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-08:/google-reader-none-favicon.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://reader.google.com/"&gt;Google 阅读器&lt;/a&gt; 是一款简易实用且强大的在线阅读工具。最近在使用“&lt;strong&gt;显示订阅的网页图标&lt;/strong&gt;”功能时发现有部分订阅的网站图标未能显示，包括我自己的网站，只显示一个默认的图标。经过一番仔细观察，终于发现问题所在。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;首先，设置“显示订阅的网页图标”&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;从阅读器页面右上角账户名显示旁边的“设置”－“阅读器
设置”中进入设置页面，勾选“偏好设置”标签项中的“其他“下面中的“显示订阅的网页图标“选项，或者在订阅模块标题中的下拉菜单中设置，如图：&lt;/div&gt;
&lt;div class="line"&gt;返回 Google 阅读器即可看到效果。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决 Google Reader 没有显示网站图标的问题&lt;/h2&gt;
&lt;p&gt;开始时认为，一时看不到图标可能是因为网络问题，但是一段时间后还是没有显示图标。于是到那些可以显示图标的网站看为什么别人的可以显示。发现 favicon 的显示代码如： 或者  即其网站图标位置都是放在网站根目录下。于是乎马上将 favicon.ico 文件移动到网站根目录，修改相应的链接，回到 Google …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://reader.google.com/"&gt;Google 阅读器&lt;/a&gt; 是一款简易实用且强大的在线阅读工具。最近在使用“&lt;strong&gt;显示订阅的网页图标&lt;/strong&gt;”功能时发现有部分订阅的网站图标未能显示，包括我自己的网站，只显示一个默认的图标。经过一番仔细观察，终于发现问题所在。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;首先，设置“显示订阅的网页图标”&lt;/h2&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;从阅读器页面右上角账户名显示旁边的“设置”－“阅读器
设置”中进入设置页面，勾选“偏好设置”标签项中的“其他“下面中的“显示订阅的网页图标“选项，或者在订阅模块标题中的下拉菜单中设置，如图：&lt;/div&gt;
&lt;div class="line"&gt;返回 Google 阅读器即可看到效果。&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决 Google Reader 没有显示网站图标的问题&lt;/h2&gt;
&lt;p&gt;开始时认为，一时看不到图标可能是因为网络问题，但是一段时间后还是没有显示图标。于是到那些可以显示图标的网站看为什么别人的可以显示。发现 favicon 的显示代码如： 或者  即其网站图标位置都是放在网站根目录下。于是乎马上将 favicon.ico 文件移动到网站根目录，修改相应的链接，回到 Google 阅读器刷新，马上有显示了，呵呵 :)&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>Django 快速安装指南</title><link href="https://magicalboy.com/quick-install-django.html" rel="alternate"></link><published>2010-07-04T07:47:00+08:00</published><updated>2010-07-04T07:47:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-04:/quick-install-django.html</id><summary type="html">&lt;p&gt;Django 是一个高层次的 Python Web
框架，鼓励快速全面的开发和实用的设计。是一个使用 python 语言写的开源 web
开发框架(open source web framework)。&lt;/p&gt;
&lt;p&gt;这是一个简单的快速安装入门教程，如果您需要一个完整的安装指南，涵盖所有安装过程中出现问题的可能性，请参见官方网站：&lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/install/#topics-install"&gt;完整安装指南&lt;/a&gt;&lt;/p&gt;
&lt;!-- install-python: --&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;安装 Python &lt;a class="reference external" href="#install-python"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;作为一个 Python Web 框架，Django 需要 Python。它适用于任何版本的 Python
2.4 至 2.6，但是它不适用于 3.0。建议您使用 Python 2.5
或更高版本，因为它们包括一个称为轻量级数据库 SQLite。如果您现在使用的是
Linux 或 Mac …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Django 是一个高层次的 Python Web
框架，鼓励快速全面的开发和实用的设计。是一个使用 python 语言写的开源 web
开发框架(open source web framework)。&lt;/p&gt;
&lt;p&gt;这是一个简单的快速安装入门教程，如果您需要一个完整的安装指南，涵盖所有安装过程中出现问题的可能性，请参见官方网站：&lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/install/#topics-install"&gt;完整安装指南&lt;/a&gt;&lt;/p&gt;
&lt;!-- install-python: --&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;安装 Python &lt;a class="reference external" href="#install-python"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;作为一个 Python Web 框架，Django 需要 Python。它适用于任何版本的 Python
2.4 至 2.6，但是它不适用于 3.0。建议您使用 Python 2.5
或更高版本，因为它们包括一个称为轻量级数据库 SQLite。如果您现在使用的是
Linux 或 Mac OS
x，则有可能已经安装好了。您可以从&lt;a class="reference external" href="http://www.python.org"&gt;这里&lt;/a&gt;得到
Python，或者直接进入其&lt;a class="reference external" href="http://www.python.org/ftp/python/"&gt;FTP服务器&lt;/a&gt;下载您想要的版本。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;要验证是否已经安装好
Pyhton，可以在命令窗口中输入&amp;quot;python&amp;quot;，可以看到类似以下的信息说明已经安装成功：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;Python 2.6.5 (r265:79063, Apr 16 2010, 13:57:41) [GCC 4.4.3] on linux2 Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;!-- setup-database: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;设置数据库 &lt;a class="reference external" href="#setup-database"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;因为我们安装的 Python 是 2.5 以上的版本，里面自带了
SQLite，所以可以跳过这一步。如果需要安装其它数据库，请参考&lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/install/#database-installation"&gt;database
installation
information&lt;/a&gt;。&lt;/p&gt;
&lt;!-- remove-old-version: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;卸载所有旧的 Django 版本&lt;a class="reference external" href="#remove-old-version"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;如果您是从以前的版本升级你的Django的安装，你需要&lt;a class="reference external" href="http://docs.djangoproject.com/en/dev/topics/install/#removing-old-versions-of-django"&gt;卸载旧版本的Django然后再安装新的版本&lt;/a&gt;。&lt;/p&gt;
&lt;!-- install-django: --&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;安装 Django &lt;a class="reference external" href="#install-django"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;安装 Django 的几个步骤：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;选择一个为我们操作系统发布的 Django
版本&lt;a class="reference external" href="http://www.djangoproject.com/download/"&gt;下载&lt;/a&gt;，我们以
Django 0.96.5:
&lt;a class="reference external" href="http://www.djangoproject.com/download/0.96.5/tarball/"&gt;tarball&lt;/a&gt;
， Linux 平台下操作为例。&lt;/li&gt;
&lt;li&gt;解压缩并安装：
&lt;tt class="docutils literal"&gt;tar xzvf &lt;span class="pre"&gt;Django-0.96.5.tar.gz&lt;/span&gt; cd &lt;span class="pre"&gt;Django-1.2.1&lt;/span&gt; sudo python setup.py install&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;验证是否安装成功：
&lt;tt class="docutils literal"&gt;&amp;gt;&amp;gt;&amp;gt; import django &amp;gt;&amp;gt;&amp;gt; help(django)&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果没有报任何出错信息，则说明已经安装成功。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="that-is-it"&gt;
&lt;h2&gt;That is it &lt;a class="reference external" href="#that-is-it"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;安装成功！赶紧体验 Django 框架带来的快速、简便的 WEB 开发乐趣吧。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>使用 jQuery Form 插件 Ajax 提交表单</title><link href="https://magicalboy.com/jquery-form-plugin-ajax-submit.html" rel="alternate"></link><published>2010-07-03T09:23:00+08:00</published><updated>2010-07-03T09:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-07-03:/jquery-form-plugin-ajax-submit.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在 Web 开发中，使用 Ajax
来提交表单，比如注册页面的注册信息表单的时候，经常遇到一个令人头疼的问题：用户名或
Email 经常要用到 Ajax 异步提交到后台判断。触发这一事件可由
文本输入控件失去焦点 onblur 和点击提交表单 Submit 按钮来完成。&lt;/p&gt;
&lt;p&gt;第一种方法很容易实现，input 输入框失去焦点后，可以等待 Ajax
从后台返回的回应信息，这样一来就有一段时间来缓冲。&lt;/p&gt;
&lt;p&gt;第二种方法则不好办了，提交前必须在前台判断所有的表单信息是否合法，包含
Ajax 异步判断。因为 Ajax
提交的请求因网络等因素总需要一小段时间来等待回应，不可能立即返回，所以，应如何做到按下提交按钮后，能得到等待
Ajax 请求的回应信息，判断这些表单信息来决定是否让这个表单提交呢。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法之一&lt;/h2&gt;
&lt;p&gt;使用 &lt;a class="reference external" href="http://malsup.com/jquery/form/"&gt;jQuery Form
Plugin&lt;/a&gt;来验证整个表单，一次性使用
Ajax …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在 Web 开发中，使用 Ajax
来提交表单，比如注册页面的注册信息表单的时候，经常遇到一个令人头疼的问题：用户名或
Email 经常要用到 Ajax 异步提交到后台判断。触发这一事件可由
文本输入控件失去焦点 onblur 和点击提交表单 Submit 按钮来完成。&lt;/p&gt;
&lt;p&gt;第一种方法很容易实现，input 输入框失去焦点后，可以等待 Ajax
从后台返回的回应信息，这样一来就有一段时间来缓冲。&lt;/p&gt;
&lt;p&gt;第二种方法则不好办了，提交前必须在前台判断所有的表单信息是否合法，包含
Ajax 异步判断。因为 Ajax
提交的请求因网络等因素总需要一小段时间来等待回应，不可能立即返回，所以，应如何做到按下提交按钮后，能得到等待
Ajax 请求的回应信息，判断这些表单信息来决定是否让这个表单提交呢。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决方法之一&lt;/h2&gt;
&lt;p&gt;使用 &lt;a class="reference external" href="http://malsup.com/jquery/form/"&gt;jQuery Form
Plugin&lt;/a&gt;来验证整个表单，一次性使用
Ajax 方式验证所有的表单信息。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;第一步：安装插件。下载 &lt;a class="reference external" href="http://jquery.com/"&gt;jQuery&lt;/a&gt; 库和
&lt;a class="reference external" href="http://github.com/malsup/form/raw/master/jquery.form.js?v2.43"&gt;jquery.form.js&lt;/a&gt;插件。&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;第二步：前台代码：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$(document).ready(function()&lt;/span&gt; {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; var options = {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; target:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; '#output1',&amp;nbsp;&amp;nbsp; // 显示服务器回应信息的目标元素&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; beforeSubmit:&amp;nbsp; showRequest,&amp;nbsp; // 预提交反馈，即前台 JS 判断方法&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; success:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; showResponse&amp;nbsp; // 服务器回馈信息处理方法&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// 其它可选方法:&lt;/div&gt;
&lt;div class="line"&gt;//url: url // 重新指定表单的提交地址&lt;/div&gt;
&lt;div class="line"&gt;//type: type // 重新设置 form 表单的 method 属性值：'get' or 'post'&lt;/div&gt;
&lt;div class="line"&gt;//dataType: null // 服务器回应信息类型： 'xml', 'script', or 'json'&lt;/div&gt;
&lt;div class="line"&gt;//clearForm: true // 提交成功后清空表单域&lt;/div&gt;
&lt;div class="line"&gt;//resetForm: true // 提交成功后重置表单域&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// $.ajax 选项也可以在此使用，例如：&lt;/div&gt;
&lt;div class="line"&gt;//timeout: 3000&lt;/div&gt;
&lt;div class="line"&gt;};&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// 使用 'ajaxForm' 绑定表单&lt;/div&gt;
&lt;div class="line"&gt;$('#myForm1').ajaxForm(options);&lt;/div&gt;
&lt;div class="line"&gt;});&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// 预提交反馈，即前台 JS 判断方法&lt;/div&gt;
&lt;div class="line"&gt;function showRequest(formData, jqForm, options) {&lt;/div&gt;
&lt;div class="line"&gt;// formData is an array; here we use $.param to convert it to a string
to display it&lt;/div&gt;
&lt;div class="line"&gt;// but the form plugin does this for you automatically when it submits
the data&lt;/div&gt;
&lt;div class="line"&gt;var queryString = $.param(formData);&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// jqForm is a jQuery object encapsulating the form element. To access
the&lt;/div&gt;
&lt;div class="line"&gt;// DOM element for the form do this:&lt;/div&gt;
&lt;div class="line"&gt;// var formElement = jqForm[0];&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;alert('About to submit: nn' + queryString);&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// here we could return false to prevent the form from being
submitted;&lt;/div&gt;
&lt;div class="line"&gt;// returning anything other than false will allow the form submit to
continue&lt;/div&gt;
&lt;div class="line"&gt;return true;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// 服务器回馈信息处理方法&lt;/div&gt;
&lt;div class="line"&gt;function showResponse(responseText, statusText, xhr, $form) {&lt;/div&gt;
&lt;div class="line"&gt;// for normal html responses, the first argument to the success
callback&lt;/div&gt;
&lt;div class="line"&gt;// is the XMLHttpRequest object's responseText property&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// if the ajaxForm method was passed an Options Object with the
dataType&lt;/div&gt;
&lt;div class="line"&gt;// property set to 'xml' then the first argument to the success
callback&lt;/div&gt;
&lt;div class="line"&gt;// is the XMLHttpRequest object's responseXML property&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;// if the ajaxForm method was passed an Options Object with the
dataType&lt;/div&gt;
&lt;div class="line"&gt;// property set to 'json' then the first argument to the success
callback&lt;/div&gt;
&lt;div class="line"&gt;// is the json data object returned by the server&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;alert('status: ' + statusText + 'nnresponseText: n' + responseText +&lt;/div&gt;
&lt;div class="line"&gt;'nnThe output div should have already been updated with the
responseText.');&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;最后一步，在后台提供一份和前台一样的验证方法。这是最后一首防线，所以很重要，甚至于前台的验证都可以不写，仅作文字说明的提示信息即可。建议使用
JSON 格式的 Response 信息，Ajax 返回到前台后作相应的处理即可。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法之二&lt;/h2&gt;
&lt;p&gt;在检测所有表单时，无论结果如何，最后 return false;
以防止表单提交。然后在 Ajax 传回结果中使用 $(&amp;quot;form&amp;quot;).submit();
方法来提交，此方法后来才想到，在此补上。&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;以上仅是个人思路，具体实例请参考官网
&lt;a class="reference external" href="http://malsup.com/jquery/form/#ajaxForm"&gt;Examples&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>设置 DNS 解决 Ubuntu 10.04 上网速度慢的问题</title><link href="https://magicalboy.com/ubuntu-10-04-dns-settings.html" rel="alternate"></link><published>2010-06-20T14:23:00+08:00</published><updated>2010-06-20T14:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-20:/ubuntu-10-04-dns-settings.html</id><summary type="html">&lt;p&gt;不知道大家是否和我一样觉得新安装的 Ubuntu 10.04
上网龟速，打开一个网址可见浏览器状态一直是“正在解析服务器”，简直让人抓狂！&lt;/p&gt;
&lt;p&gt;出现这种问题，是由域名解析速度过慢引起的，也就是系统默认的 DNS（Domain
Name System，域名系统） 服务器地址有问题，我们可以通过更改它来解决问题。&lt;/p&gt;
&lt;p&gt;打开终端窗口，使用您喜欢的文本编辑修改 /etc/resove.conf 文件，比如 “sudo
gedit /etc/resolv.conf”。用“＃”号注释掉所有的代码，然后增加您本地的 DNS
地址，比如广州电信的 DNS 服务器为：61.144.56.100，备用
DNS地址：61.144.56.101。如果不确定您本地的 DNS …&lt;/p&gt;</summary><content type="html">&lt;p&gt;不知道大家是否和我一样觉得新安装的 Ubuntu 10.04
上网龟速，打开一个网址可见浏览器状态一直是“正在解析服务器”，简直让人抓狂！&lt;/p&gt;
&lt;p&gt;出现这种问题，是由域名解析速度过慢引起的，也就是系统默认的 DNS（Domain
Name System，域名系统） 服务器地址有问题，我们可以通过更改它来解决问题。&lt;/p&gt;
&lt;p&gt;打开终端窗口，使用您喜欢的文本编辑修改 /etc/resove.conf 文件，比如 “sudo
gedit /etc/resolv.conf”。用“＃”号注释掉所有的代码，然后增加您本地的 DNS
地址，比如广州电信的 DNS 服务器为：61.144.56.100，备用
DNS地址：61.144.56.101。如果不确定您本地的 DNS 地址，推荐使用 Google DNS
服务器：8.8.8.8，备用地址为：8.8.4.4，非常容易记忆！修改完成后记得保存，这里
resove.conf 的内容如下：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;# Generated by NetworkManager #domain domain #search domain #nameserver 192.168.1.1 nameserver 8.8.8.8 nameserver 8.8.4.4&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;保存好即时生效，可以使用 nslookup 工具查看是否生效：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;magicalboy&amp;#64;m:~$&lt;/span&gt; nslookup &amp;gt; server Default server: 8.8.8.8 Address: 8.8.8.8#53 Default server: 8.8.4.4 Address: 8.8.4.4#53 &amp;gt; magicalboy.com Server:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 8.8.8.8 Address:&amp;nbsp;&amp;nbsp;&amp;nbsp; 8.8.8.8#53&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Non-authoritative answer:&lt;/div&gt;
&lt;div class="line"&gt;Name: magicalboy.com&lt;/div&gt;
&lt;div class="line"&gt;Address: 75.119.195.77&lt;/div&gt;
&lt;div class="line"&gt;&amp;gt; exit&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;打开浏览器随便输入您想要访问的地址看看，感觉比平常在 Windows
下访问的速度快多了吧，此时的域名解析速度很明显可以看到已经提高了几个数量级！&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;最后还有一个重要的步骤，若现在重启系统, 会恢复为默认 DNS 了.
我们之前设置的 DNS 又要重设。可以通过编辑 /etc/dhcp3/dhclient.conf
文件，增加之前设置的 Google DNS 服务器地址，代码：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;prepend &lt;span class="pre"&gt;domain-name-servers&lt;/span&gt; 8.8.8.8,8.8.4.4;&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;保存退出后，下次重启系统就不需重设 DNS 了。&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;网上有些文章说安装 dnsmasq
可以解决此问题，我也有试过，很遗憾一点效果都没有，可能是我在哪个步骤出了问题了吧，呵呵。下面是相关的文章的外链接，有兴趣的朋友请参考：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.linuxidc.com/Linux/2010-06/26587.htm"&gt;解决Ubuntu
10.04上网速度慢的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.google.org.cn/posts/how-to-setup-google-dns-under-osx-winxp-ubuntu-and-win7.html"&gt;主流操作系统使用Google DNS 快速设置教程|
谷奥——探寻谷歌的奥秘&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>升级 WordPress 3.0 正式版：备份文件和数据库</title><link href="https://magicalboy.com/upgrade-wordpress-3-0-release.html" rel="alternate"></link><published>2010-06-18T08:41:00+08:00</published><updated>2010-06-18T08:41:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-18:/upgrade-wordpress-3-0-release.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://wordpress.org"&gt;WordPress&lt;/a&gt;是一个免费的开源项目,在GNU通用公共许可证下授权发布。目前最新版本为2010年6月18日发布的3.0版。&lt;/p&gt;
&lt;p&gt;经 RC3 测试版过后，WordPress 马上放出 3.0
正式版。登陆管理后台就可以看到更新提示了。作为一位版本控，二话不说马上准备升级。下面就简单介绍一下升级的准备工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备份文件到本地机器上&lt;/strong&gt;。可以使用 FTP
工具（&lt;a class="reference external" href="http://filezilla-project.org"&gt;FileZilla&lt;/a&gt;），或 UNIX Shell
（比如，SSH）。由于我的 SSH 被禁用，所以使用比较通用的 FTP 工具
FileZilla 来备份整个 WordPress 站点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;WordPress核心安装文件&lt;/li&gt;
&lt;li&gt;WordPress插件&lt;/li&gt;
&lt;li&gt;WordPress主题&lt;/li&gt;
&lt;li&gt;图片和文件&lt;/li&gt;
&lt;li&gt;Javascripts, PHP脚本, 和其他代码文件&lt;/li&gt;
&lt;li&gt;其他文件和静态页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在的大部分主机供应商都备份整个服务器，所以也包括了我们的网站，比如&lt;a class="reference external" href="https://panel.dreamhost.com/index.cgi?tree=home.backup&amp;amp;"&gt;DreamHost&lt;/a&gt;
的就可以在 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://wordpress.org"&gt;WordPress&lt;/a&gt;是一个免费的开源项目,在GNU通用公共许可证下授权发布。目前最新版本为2010年6月18日发布的3.0版。&lt;/p&gt;
&lt;p&gt;经 RC3 测试版过后，WordPress 马上放出 3.0
正式版。登陆管理后台就可以看到更新提示了。作为一位版本控，二话不说马上准备升级。下面就简单介绍一下升级的准备工作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;备份文件到本地机器上&lt;/strong&gt;。可以使用 FTP
工具（&lt;a class="reference external" href="http://filezilla-project.org"&gt;FileZilla&lt;/a&gt;），或 UNIX Shell
（比如，SSH）。由于我的 SSH 被禁用，所以使用比较通用的 FTP 工具
FileZilla 来备份整个 WordPress 站点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;WordPress核心安装文件&lt;/li&gt;
&lt;li&gt;WordPress插件&lt;/li&gt;
&lt;li&gt;WordPress主题&lt;/li&gt;
&lt;li&gt;图片和文件&lt;/li&gt;
&lt;li&gt;Javascripts, PHP脚本, 和其他代码文件&lt;/li&gt;
&lt;li&gt;其他文件和静态页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在的大部分主机供应商都备份整个服务器，所以也包括了我们的网站，比如&lt;a class="reference external" href="https://panel.dreamhost.com/index.cgi?tree=home.backup&amp;amp;"&gt;DreamHost&lt;/a&gt;
的就可以在 CPanel&amp;gt;Dreamhost&amp;gt;Backup Your Account
找到。BTW，想成为一名优秀的站长，应该懂得如何备份和养成良好的经常备份的习惯。&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;strong&gt;备份数据库&lt;/strong&gt;。第一种方法，使用命令行的方式访问（前提条件是必须先安装好
MySQL 软件）：&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;mysql &lt;span class="pre"&gt;-u&lt;/span&gt; username &lt;span class="pre"&gt;-ppassword&lt;/span&gt; &lt;span class="pre"&gt;-h&lt;/span&gt; hostname databasename&lt;/tt&gt;&lt;/div&gt;
&lt;div class="line"&gt;（注意: &lt;strong&gt;在 -p 和 password
之前是没有空格的！&lt;/strong&gt;，另外说明一下，有些主机限制这种连接方式，请用下面这种的方法吧）&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;第二种方法，使用最流行的数据库管理系统之一的
&lt;a class="reference external" href="http://codex.wordpress.org/phpMyAdmin"&gt;phpMyAdmin&lt;/a&gt;。一般主机提供商有提供该工具，在主机
Cpanel 管理后台可找到。万一没有找到，请 Google 吧。下面是操作步骤：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;只勾选包含WordPress站点的数据表&lt;/li&gt;
&lt;li&gt;勾选&amp;quot;Add DROP TABLE&amp;quot;&lt;/li&gt;
&lt;li&gt;勾选&amp;quot;Complete inserts&amp;quot;&lt;/li&gt;
&lt;li&gt;勾选&amp;quot;Save as File&amp;quot;&lt;/li&gt;
&lt;li&gt;压缩那项勾选&amp;quot;None&amp;quot;，如果你的数据库很大，那么选择一种压缩方式。&lt;/li&gt;
&lt;li&gt;点Go，然后数据就会保存到你的电脑中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;把这些文件保存到一个安全的地方 !&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后，回到后台放心地点自动升级&lt;/strong&gt;，很快就可以看到升级到 3.0
后的效果——后台界面变成白灰色。需要注意的是，&lt;strong&gt;现在的 WordPress 3.0
正式版是国际版本，有限支持简单中文，本地化版本暂时没有发布&lt;/strong&gt;。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;WordPress 3.0 介绍文章：&lt;a class="reference external" href="http://www.wordpress.la/WordPress-3.0.html"&gt;WordPress 3.0十大看点 |
WordPress啦!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;详细备份请参考：&lt;a class="reference external" href="http://codex.wordpress.org/zh-cn:WordPress_%E5%A4%87%E4%BB%BD"&gt;WordPress
官方备份说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WordPress 下载：&lt;a class="reference external" href="http://wordpress.org/download/"&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>Ubuntu 10.04 LTS 归来</title><link href="https://magicalboy.com/ubuntu-10-04-lts-comeback.html" rel="alternate"></link><published>2010-06-15T15:10:00+08:00</published><updated>2010-06-15T15:10:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-15:/ubuntu-10-04-lts-comeback.html</id><summary type="html">&lt;p&gt;終于又回到 &lt;a class="reference external" href="http://ubuntu.com"&gt;Ubuntu&lt;/a&gt; 的怀抱! 自上一个版本 Ubuntu
8.04 LTS 版本以来, 转眼已是两年.而我也从大二至现在开始工作. 10.04
改进了很多, 希望一起加油, 一起进步!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;終于又回到 &lt;a class="reference external" href="http://ubuntu.com"&gt;Ubuntu&lt;/a&gt; 的怀抱! 自上一个版本 Ubuntu
8.04 LTS 版本以来, 转眼已是两年.而我也从大二至现在开始工作. 10.04
改进了很多, 希望一起加油, 一起进步!&lt;/p&gt;
</content></entry><entry><title>使用 FileZilla 或 FTP 命令下载隐藏文件 .htaccess</title><link href="https://magicalboy.com/filezilla-or-ftp-command-to-see-hidden-files.html" rel="alternate"></link><published>2010-06-14T11:46:00+08:00</published><updated>2010-06-14T11:46:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-14:/filezilla-or-ftp-command-to-see-hidden-files.html</id><summary type="html">&lt;p&gt;由于服务器主机的 SSH 服务被关掉，只能被迫使用 FTP（File Transfer
Protocol）来管理网站。这不刚好需要修改一个 .htaccess
文件，刚好它是隐藏属性的，使用
&lt;a class="reference external" href="http://filezilla-project.org/"&gt;FileZilla&lt;/a&gt; FTP 工具也查看不了。殊不知
FileZilla 的“服务器”菜单项中有“强制显示隐藏文件”选项。&lt;/p&gt;
&lt;p&gt;启动“强制显示隐藏文件”会有确认信息，需要使用的是 FTP
协议，同时需要服务器支持。&lt;/p&gt;
&lt;p&gt;如果手头上没有 FTP 软件，可以使用 Windows 自带的 FTP 命令，在 CMD
命令行输入 ftp 即进入该模式：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:&amp;gt;ftp&lt;/span&gt; ftp&amp;gt; open yourdomain.com …&lt;/tt&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;由于服务器主机的 SSH 服务被关掉，只能被迫使用 FTP（File Transfer
Protocol）来管理网站。这不刚好需要修改一个 .htaccess
文件，刚好它是隐藏属性的，使用
&lt;a class="reference external" href="http://filezilla-project.org/"&gt;FileZilla&lt;/a&gt; FTP 工具也查看不了。殊不知
FileZilla 的“服务器”菜单项中有“强制显示隐藏文件”选项。&lt;/p&gt;
&lt;p&gt;启动“强制显示隐藏文件”会有确认信息，需要使用的是 FTP
协议，同时需要服务器支持。&lt;/p&gt;
&lt;p&gt;如果手头上没有 FTP 软件，可以使用 Windows 自带的 FTP 命令，在 CMD
命令行输入 ftp 即进入该模式：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C:&amp;gt;ftp&lt;/span&gt; ftp&amp;gt; open yourdomain.com Connected to yourdomain.com. 220 XXXHost FTP Server User &lt;span class="pre"&gt;(yourdomain.com:(none)):&lt;/span&gt; username 331 Password required for tb_cdl. Password: 230 User username logged in. ftp&amp;gt; cd yourdomain.com 250 CWD command successful ftp&amp;gt; get .htaccess 200 PORT command successful 150 Opening ASCII mode data connection for .htaccess (379 bytes) 226 Transfer complete. ftp: 收到 394 字节，用时 0.00Seconds 394000.00Kbytes/sec.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;如果需要上传。htaccess 必须以 ASCII
模式（默认模式）上传，最好将其权限设置为644。&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ftp&amp;gt; mput .htaccess mput .htaccess? 200 PORT command successful 150 Opening ASCII mode data connection for .htaccess 226 Transfer complete. ftp: 发送 394 字节，用时 0.00Seconds 394000.00Kbytes/sec.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;更多命令请见 ftp&amp;gt; help 或参考
&lt;a class="reference external" href="http://www.edu.cn/20010830/210045.shtml"&gt;FTP命令详解&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>WordPress:解决 RSS 没有排版的问题</title><link href="https://magicalboy.com/solved-wordpress-rss-layout-problem.html" rel="alternate"></link><published>2010-06-13T15:58:00+08:00</published><updated>2010-06-13T15:58:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-13:/solved-wordpress-rss-layout-problem.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/RSS"&gt;RSS&lt;/a&gt;（简易资讯聚合），是 Really
Simple Syndication（RSS
2.0）的简写。使用阅读器订阅文章或新闻是一种良好的获得信息的习惯。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;我在使用 Google Reader 订阅几个朋友的 WordPress
博客的时候发现，他们的文章排版有问题，没有标题、段落等格式之分，看上去就是密密麻麻的文字。这样就导致可阅读性很差，严重影响订阅者的心情。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;问题原因&lt;/h2&gt;
&lt;p&gt;刚开始我以为，他们使用了文字处理编辑工具（比如 MS Word
等）来写博文，可能是 HTML
标签没有闭合等原因引起的。于是我建议他们使用纯文本编辑工具，比如WordPress
后台添加新文章的默认编辑器，但不要使用可视化模式，转换到 HTML
源码编辑模式，手动为文章加上 &amp;lt;h3&amp;gt;，&amp;lt;p&amp;gt;等 HTML
标签。这仅是我的个人习惯 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/RSS"&gt;RSS&lt;/a&gt;（简易资讯聚合），是 Really
Simple Syndication（RSS
2.0）的简写。使用阅读器订阅文章或新闻是一种良好的获得信息的习惯。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;我在使用 Google Reader 订阅几个朋友的 WordPress
博客的时候发现，他们的文章排版有问题，没有标题、段落等格式之分，看上去就是密密麻麻的文字。这样就导致可阅读性很差，严重影响订阅者的心情。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;问题原因&lt;/h2&gt;
&lt;p&gt;刚开始我以为，他们使用了文字处理编辑工具（比如 MS Word
等）来写博文，可能是 HTML
标签没有闭合等原因引起的。于是我建议他们使用纯文本编辑工具，比如WordPress
后台添加新文章的默认编辑器，但不要使用可视化模式，转换到 HTML
源码编辑模式，手动为文章加上 &amp;lt;h3&amp;gt;，&amp;lt;p&amp;gt;等 HTML
标签。这仅是我的个人习惯，如果不熟悉 HTML 标签也很正常，使用 DreamWeaver
或标准的可视化修改插件。&lt;/p&gt;
&lt;p&gt;问题仍然存在，这下来了兴趣了，使用 Firebug 查看订阅的文章，发现没有 HTML
标签，超链接和所有的内容都变成了纯文本显示。使用浏览器（FF会直接订阅，使用
IE、Chrome 或 Opera 可以查看 RSS Feed 的内容）直接打开 Feed地址，格式为
&lt;a class="reference external" href="http://domain.com/feed"&gt;http://domain.com/feed&lt;/a&gt;，有不同的显示：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;IE 8:
显示的友好的格式，头部为博客名字和相关介绍，并有“订阅该源”的链接。点击订阅会像收藏夹一样可方便下次阅读。接着是带有版本格式的所有文章。右侧是工具导航功能。其页面源代码是
RSS XML 文档。&lt;/li&gt;
&lt;li&gt;FF 3.6.*: 直接弹出订阅收藏窗口。&lt;/li&gt;
&lt;li&gt;Google Chrome: 显示的是纯文本，如 Google
阅读器显示的效果一样，但是其源代码也是和 IE 8 相同的 RSS XML
扩展文档。&lt;/li&gt;
&lt;li&gt;其它未测试，有兴趣你可以试下。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出可能的原因是，WordPress RSS Feed 虽然提供了 RSS 的 XML
定义文档，但也可能被显示为纯文本的文章订阅内容。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;为了解决这种不统一显示的问题，推荐使用 RSS Feed 托管工具：Google
FeedBurner，国内的 Feedsky 等，这样就可以简单地解决排版问题了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;后语&lt;/h2&gt;
&lt;p&gt;RSS 还有很多设置方法，我在这里就暂时献丑说这么多了。有关更多的 RSS
设置，下面抛砖引玉为大家推荐几个相关资源：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.williamlong.info/archives/843.html"&gt;在FeedSky和FeedBurner中无缝切换-月光博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.happinesz.cn/archives/789/"&gt;10个优化WordPress RSS Feed的技巧(1) -
幸福收藏夹&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.wordpress.la/completely-control-rss-in-wordpress.html"&gt;如何完全掌控WordPress的RSS |
WordPress啦!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content></entry><entry><title>WordPress：为您的博客增加“网站地图”页面</title><link href="https://magicalboy.com/add-your-wordpress-sitemap.html" rel="alternate"></link><published>2010-06-12T13:34:00+08:00</published><updated>2010-06-12T13:34:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-12:/add-your-wordpress-sitemap.html</id><summary type="html">&lt;p&gt;网站地图（Sitemaps）又称站点地图，是一个显示网站所有页面的页面。它是一个很友好的页面，向来访的朋友展示您的站点结构。还有一种站点地图，XML站点地图，专门给搜索引擎看的，SEO
优化必备文件。有很多创建 XML 站点地图的在线工具，比如 Google 的
&lt;a class="reference external" href="https://www.google.com/webmasters/tools/home?hl=zh-CN"&gt;WebMaster
Tools&lt;/a&gt;。这篇文章主要介绍的是前者，使用
WordPress 的模板系统创建一个“网站地图”页面。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;第一步，创建自己的页面模板&lt;/h2&gt;
&lt;p&gt;最简单的方法就是使用 FTP 或 SSH
工具，到当前使用的主题目录（/wp-content/themes/您的主题名/）下复制
paga.php 文件里面的内容到新建的 Sitemap.php 文件，并在头部增加以下代码：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?php&lt;/span&gt; /* Template Name: Sitemap */ &lt;span class="pre"&gt;?&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;以上代码的表示定义一个“Sitemap …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;网站地图（Sitemaps）又称站点地图，是一个显示网站所有页面的页面。它是一个很友好的页面，向来访的朋友展示您的站点结构。还有一种站点地图，XML站点地图，专门给搜索引擎看的，SEO
优化必备文件。有很多创建 XML 站点地图的在线工具，比如 Google 的
&lt;a class="reference external" href="https://www.google.com/webmasters/tools/home?hl=zh-CN"&gt;WebMaster
Tools&lt;/a&gt;。这篇文章主要介绍的是前者，使用
WordPress 的模板系统创建一个“网站地图”页面。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;第一步，创建自己的页面模板&lt;/h2&gt;
&lt;p&gt;最简单的方法就是使用 FTP 或 SSH
工具，到当前使用的主题目录（/wp-content/themes/您的主题名/）下复制
paga.php 文件里面的内容到新建的 Sitemap.php 文件，并在头部增加以下代码：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&amp;lt; &lt;span class="pre"&gt;?php&lt;/span&gt; /* Template Name: Sitemap */ &lt;span class="pre"&gt;?&amp;gt;&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;以上代码的表示定义一个“Sitemap”模板，这样此模板就可以在后台“外观”—&amp;gt;“编辑”的模板列表中可见了，名字为文件的名字，&lt;a class="reference external" href="http://codex.wordpress.org/Theme_Development#Theme_Template_Files_List"&gt;除了
保留的文件名（不可用）&lt;/a&gt;以外。这样就增加了一个自定义的模板了。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sitemap"&gt;
&lt;h2&gt;为 Sitemap 模板增加网站地图程序代码&lt;/h2&gt;
&lt;p&gt;有两种方式实现，下面只介绍最简单的一种，使用 &lt;strong&gt;Dagon Design Sitemap
Generator 3.15&lt;/strong&gt; 插件。&lt;/p&gt;
&lt;p&gt;首先，安装一款生成网站地图所用的插件 Dagon Design Sitemap Generator
3.15，激活后在“页面”—&amp;gt;“添加新页面”中增加一个新页面。页面名字“网站地图”，内容则简单，在
HTML 代码模式下加下面一句即可：&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;接着，在属性选项中选择自定义的模板“Sitemap”。默认值是“默认模板”（page.php），下拉选项可以看到。这就是加了那个段注释的头部代码的作用了。&lt;/p&gt;
&lt;p&gt;最后的工作就是修改 Sitemap 模板。去掉里面的不必要
Widgets，比如评论功能，侧边工具栏等，这样一个结构清晰的网站地图就出来了。&lt;/p&gt;
&lt;p&gt;说到这里应该明白，其实添加页面不需要自定义模板，这样做只是为了个性化页面。使页面显示更加灵活。&lt;/p&gt;
&lt;p&gt;了解更多详细帮助信息，请访问 WordPress.org
官方帮助：&lt;a class="reference external" href="http://codex.wordpress.org/zh-cn:%E9%A1%B5%E9%9D%A2"&gt;创建自己的页面模板（简体中文）&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>递归算法：一个简单的递归函数</title><link href="https://magicalboy.com/a-simple-recursive-function.html" rel="alternate"></link><published>2010-06-10T16:10:00+08:00</published><updated>2010-06-10T16:10:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-10:/a-simple-recursive-function.html</id><summary type="html">&lt;p&gt;今天看了某 C 语言 Primer
教材中一递归（recursion）示例运行结果，一开始让我迷惑不解，后来才发觉原来我一直不懂递归。枉我之前还写过递归读取树结构的文件目录的
Python 脚本（还好是尾随递归，所以不会出问题，惭愧）！且看代码清单如下：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/* recursion.c &lt;span class="pre"&gt;--&lt;/span&gt; 递归演示 */ /* 程序显示递归的级数 n 及存储 n 的内存地址 */ #include&amp;nbsp; void recursion(int);&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;int main(void)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;recursion(1);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;void recursion(int n)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;第%d级递归: n 内存地址 %pn&amp;quot;, n, &amp;amp;n);&lt;/div&gt;
&lt;div class="line"&gt;if (n &amp;lt; 4 …&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天看了某 C 语言 Primer
教材中一递归（recursion）示例运行结果，一开始让我迷惑不解，后来才发觉原来我一直不懂递归。枉我之前还写过递归读取树结构的文件目录的
Python 脚本（还好是尾随递归，所以不会出问题，惭愧）！且看代码清单如下：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/* recursion.c &lt;span class="pre"&gt;--&lt;/span&gt; 递归演示 */ /* 程序显示递归的级数 n 及存储 n 的内存地址 */ #include&amp;nbsp; void recursion(int);&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;int main(void)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;recursion(1);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;void recursion(int n)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;第%d级递归: n 内存地址 %pn&amp;quot;, n, &amp;amp;n);&lt;/div&gt;
&lt;div class="line"&gt;if (n &amp;lt; 4)&lt;/div&gt;
&lt;div class="line"&gt;recursion(n+1); // 注意此处 n+1 并不等于 ++n!&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;第%d级递归: n 内存地址 %pn&amp;quot;, n, &amp;amp;n);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;第1级递归: n 内存地址 0022FF30 第2级递归: n 内存地址 0022FF10 第3级递归: n 内存地址 0022FEF0 第4级递归: n 内存地址 0022FED0 第4级递归: n 内存地址 0022FED0 第3级递归: n 内存地址 0022FEF0 第2级递归: n 内存地址 0022FF10 第1级递归: n 内存地址 0022FF30&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;递归函数分析&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;递归函数即是直接或间接调用自身的函数。在上面的程序中，recursion()
递归函数定义代码中，局部变量 n&amp;lt;4 不是正好调用自己三次打印 3 次，另加上
if 控制语句外的 1 条打印语句，应该是打印输出 4 打语句才对的啊，Why？&lt;/p&gt;
&lt;p&gt;如果有人和我开始的想法一样，那下面开始分析。&lt;/p&gt;
&lt;p&gt;首先看调用函数 main() 中，使用参数 1 调用了 recursion()
函数。recursion() 的形参 n 为 1，故打印输出的 n 值为 1。接着由于
n=1&amp;lt;4，第一级递归使用 n=n+1 即 n=2 调用 recursion(), 使得 n
在第二级中调用被赋值为 2，打印输出 n 的值为
2。依此类推，下面的调用输出的为第 3 级递归和第 4 级递归。&lt;/p&gt;
&lt;p&gt;这都没问题，好，继续看当开始执行第四级调用时，此时 n=4，由于 n&amp;lt;4
不成立不再调用 recursion()
函数，直接执行下面的语句，输出：“第4级递归...”。现在看关键的地方，&lt;strong&gt;第四级递归调用至此已经执行完毕了，那接着做些什么事呢。按我们开始的想法是函数调用结束，回到调用函数
main()
整个程序运行结束。&lt;/strong&gt;问题正是出于此，&lt;strong&gt;当第四级调用结束会把返回给当前被调用函数（即第四级递归）的调用函数（即第三级递归），而非直接返回到第一级递归调用的
main() 函数！&lt;/strong&gt;，就这么简单的逻辑却被我们忽略了，哈哈&lt;/p&gt;
&lt;p&gt;同时注意到第层的调用中 n
的内存地址有所变化，说明每一级的递归使用的是它自己的私有变量。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果是刚接触递归可能会有些迷惑，使用递归必须注意几点：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;递归可以使程序结构简单，但递归的执行效率没有循环语句高，需注意使用。&lt;/li&gt;
&lt;li&gt;递归每一级函数的调用都有它自己的私有变量。&lt;/li&gt;
&lt;li&gt;每一次函数调用完都有一次返回，这是容易疏忽的一点。&lt;/li&gt;
&lt;li&gt;递归调用&lt;strong&gt;前&lt;/strong&gt;的语句和各级被调用函数具有相同的执行顺序。这点看输出结果就知道了，不难理解。&lt;/li&gt;
&lt;li&gt;递归调用&lt;strong&gt;后&lt;/strong&gt;的语句和各级被调用函数的执行顺序相反。&lt;/li&gt;
&lt;li&gt;递归的深度不宜太深，会很快消耗掉计算机资源。同时必须包含终止递归的语句。&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>老生常谈：CSS overflow 那些事儿</title><link href="https://magicalboy.com/css-overflow-usages.html" rel="alternate"></link><published>2010-06-10T11:23:00+08:00</published><updated>2010-06-10T11:23:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-10:/css-overflow-usages.html</id><summary type="html">&lt;p&gt;css 的 overflow 属性的用法很广泛也很重要，最近在修改 WordPress 和 CMS
的模板的时候就发现有很多地方是因为不正确地使用 overflow
属性而导致跨浏览器使用会出现诡异的渲染结果。&lt;/p&gt;
&lt;div class="section" id="overflow"&gt;
&lt;h2&gt;overflow 属性定义和说明&lt;/h2&gt;
&lt;p&gt;overflow 中文即溢出的意思，在 CSS
中则是指当前元素的内容溢出后应该怎么处理。&lt;/p&gt;
&lt;p&gt;overflow 属性值有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;visible&lt;/strong&gt;：默认值，表示当前元素显示的内容不可截断，这表示它可能会从当前容器元素中溢出，跑到盒模型外面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt;：此值表示的内容是剪辑，也没有滚动用户界面应提供查看剪辑区域以外的内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scroll&lt;/strong&gt;：使用滚动条来显示溢出的内容，使用这一值时，它却不管用户是否需要都使用滚动条机制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto&lt;/strong&gt;：自动模式，根据需要使用滚动条。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inherit&lt;/strong&gt;：从父元素继承。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你参考 W3school 的 &lt;a class="reference external" href="http://www.w3school.com.cn/css/pr_pos_overflow.asp"&gt;CSS
overflow&lt;/a&gt;
属性，你会发现它的 overflow 定义说明中表格中的默认值为
auto，这是错误的。请参考 W3C …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;css 的 overflow 属性的用法很广泛也很重要，最近在修改 WordPress 和 CMS
的模板的时候就发现有很多地方是因为不正确地使用 overflow
属性而导致跨浏览器使用会出现诡异的渲染结果。&lt;/p&gt;
&lt;div class="section" id="overflow"&gt;
&lt;h2&gt;overflow 属性定义和说明&lt;/h2&gt;
&lt;p&gt;overflow 中文即溢出的意思，在 CSS
中则是指当前元素的内容溢出后应该怎么处理。&lt;/p&gt;
&lt;p&gt;overflow 属性值有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;visible&lt;/strong&gt;：默认值，表示当前元素显示的内容不可截断，这表示它可能会从当前容器元素中溢出，跑到盒模型外面。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt;：此值表示的内容是剪辑，也没有滚动用户界面应提供查看剪辑区域以外的内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scroll&lt;/strong&gt;：使用滚动条来显示溢出的内容，使用这一值时，它却不管用户是否需要都使用滚动条机制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto&lt;/strong&gt;：自动模式，根据需要使用滚动条。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inherit&lt;/strong&gt;：从父元素继承。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你参考 W3school 的 &lt;a class="reference external" href="http://www.w3school.com.cn/css/pr_pos_overflow.asp"&gt;CSS
overflow&lt;/a&gt;
属性，你会发现它的 overflow 定义说明中表格中的默认值为
auto，这是错误的。请参考 W3C 标准中的
&lt;a class="reference external" href="http://www.w3.org/TR/CSS2/visufx.html"&gt;overflow&lt;/a&gt; 定义吧。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;跨浏览器问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;overflow:scroll 时滚动条位置：Firefox 3.0.10
的滚动条在盒子里面，标准的应该是在框模型外面，更新版本已经更正。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;IE 8 扩展盒子的bug&lt;/p&gt;
&lt;p&gt;这里有一个介绍得很详细的&lt;a class="reference external" href="http://edskes.net/ie8overflowandexpandingboxbugs.htm"&gt;参考文章&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;破坏浮动布局&lt;/p&gt;
&lt;p&gt;IE 6, 7 和 8都会扭曲 overflow 默认的 visible
值并将水平的扩展一个盒子一匹配内容(比如图片)。
这对使用浮动列布局的结构非常痛苦，而且单个扩展的列就能够将其它列挤下去并使布局乱掉！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;IE6 中 overflow:hidden 必须指定宽度和高度才能起作用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;overflow 的妙用&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;清除浮动&lt;/li&gt;
&lt;li&gt;去掉 IE 浏览器的默认滚动条：设置 body 标签中的 overflow:auto
就可以了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;相关博文阅读&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://paranimage.com/css-overflow-attribute/"&gt;CSS Overflow属性详解 |
帕兰映像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://dudo.org/2009/05/289/"&gt;快速认识CSS中的overflow属性 |
dudo博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://biotechgo.net/blog/css-overflow-hidden-bug-in-ie6/"&gt;解决IE6下CSS中overflow: hidden问题 |
百奥博&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些文章写得很好，推荐之！&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>翻译：Adobe Dreamweaver CS5 HTML 5 扩展包</title><link href="https://magicalboy.com/adobe-dreamweaver-cs5-html5pack.html" rel="alternate"></link><published>2010-06-09T13:52:00+08:00</published><updated>2010-06-09T13:52:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-09:/adobe-dreamweaver-cs5-html5pack.html</id><summary type="html">&lt;p&gt;跟着主研究员 Jorge Taylor 演示一个 Dreamweaver 扩展的 CS5 HTML5 的包，为
Adobe Creative Suite 5 用户提供更多创新的选择。&lt;/p&gt;
&lt;p&gt;通过该扩展包，DW CS5 将获得以下新特性：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;多屏幕预览面板，适用于同时为不同设备开发 HTML 应用&lt;/li&gt;
&lt;li&gt;支持对 HTML 5 新增的标签库的代码提示&lt;/li&gt;
&lt;li&gt;支持对 CSS 3 代码提示&lt;/li&gt;
&lt;li&gt;增加 Video 和 Audio 标签的实时预览&lt;/li&gt;
&lt;li&gt;改进 CSS 3 实时预览效果&lt;/li&gt;
&lt;li&gt;改进设计视图下对 HTML 5 新增标签的渲染效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_313&amp;quot; align=&amp;quot;alignnone&amp;quot; caption …&lt;/p&gt;</summary><content type="html">&lt;p&gt;跟着主研究员 Jorge Taylor 演示一个 Dreamweaver 扩展的 CS5 HTML5 的包，为
Adobe Creative Suite 5 用户提供更多创新的选择。&lt;/p&gt;
&lt;p&gt;通过该扩展包，DW CS5 将获得以下新特性：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;多屏幕预览面板，适用于同时为不同设备开发 HTML 应用&lt;/li&gt;
&lt;li&gt;支持对 HTML 5 新增的标签库的代码提示&lt;/li&gt;
&lt;li&gt;支持对 CSS 3 代码提示&lt;/li&gt;
&lt;li&gt;增加 Video 和 Audio 标签的实时预览&lt;/li&gt;
&lt;li&gt;改进 CSS 3 实时预览效果&lt;/li&gt;
&lt;li&gt;改进设计视图下对 HTML 5 新增标签的渲染效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_313&amp;quot; align=&amp;quot;alignnone&amp;quot; caption=&amp;quot;Adobe Extension
Manager CS 5, HTML 5 PACK&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/06/DW_CS5_HTML5.png"&gt;&lt;img alt="Adobe Extension Manager CS 5" class="size-full wp-image-313" src="http://magicalboy.com/wp-content/uploads/2010/06/DW_CS5_HTML5.png" style="height: 217px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;点击&lt;a class="reference external" href="http://download.macromedia.com/pub/labs/html5pack/html5pack_p1_051910.zxp"&gt;这里&lt;/a&gt;下载。&lt;/p&gt;
&lt;p&gt;安装成功后，DreamWeaver CS 5
就有上面所提到的相应功能了，例如上篇文章所提到的 SVG
标签自动提示，更多功能请君自行体验。&lt;/p&gt;
</content></entry><entry><title>IE9 预览版演示 HTML 5 图形测试</title><link href="https://magicalboy.com/ie9-platform-preview-graphics-demos.html" rel="alternate"></link><published>2010-06-07T23:59:00+08:00</published><updated>2010-06-07T23:59:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-07:/ie9-platform-preview-graphics-demos.html</id><summary type="html">&lt;p&gt;首先访问&lt;a class="reference external" href="http://ie.microsoft.com/testdrive/"&gt;Internet Explorer 9: Platform
Demos&lt;/a&gt;，首次访问会提示您下载安装
IE9 预览版，一个全新的 Web 平台功能。&lt;/p&gt;
&lt;p&gt;点击“Install the Preview!”，下载一个 14.3M 的安装文件
iepreview.msi，点击开始安装。注意：不支持 Win XP，安装的只是一个 IE
预览平台，不会替换掉当前系统的 IE 版本。平台演示的这些功能将会随正式版
IE9 发布。&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_289&amp;quot; align=&amp;quot;alignnone&amp;quot; caption=&amp;quot;HTML 5&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/06/html5.png"&gt;&lt;img alt="HTML 5" class="size-full wp-image-289" src="http://magicalboy.com/wp-content/uploads/2010/06/html5.png" style="height: 313px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;下面就开始测试一下 HTML 5 的图形显示——SVG …&lt;/p&gt;</summary><content type="html">&lt;p&gt;首先访问&lt;a class="reference external" href="http://ie.microsoft.com/testdrive/"&gt;Internet Explorer 9: Platform
Demos&lt;/a&gt;，首次访问会提示您下载安装
IE9 预览版，一个全新的 Web 平台功能。&lt;/p&gt;
&lt;p&gt;点击“Install the Preview!”，下载一个 14.3M 的安装文件
iepreview.msi，点击开始安装。注意：不支持 Win XP，安装的只是一个 IE
预览平台，不会替换掉当前系统的 IE 版本。平台演示的这些功能将会随正式版
IE9 发布。&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_289&amp;quot; align=&amp;quot;alignnone&amp;quot; caption=&amp;quot;HTML 5&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/06/html5.png"&gt;&lt;img alt="HTML 5" class="size-full wp-image-289" src="http://magicalboy.com/wp-content/uploads/2010/06/html5.png" style="height: 313px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;下面就开始测试一下 HTML 5 的图形显示——SVG 标签&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&amp;lt; !DOCTYPE html&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;width=&amp;quot;100&amp;quot; height=&amp;quot;200&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;fill=&amp;quot;blue&amp;quot; stroke=&amp;quot;red&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;stroke-width=&amp;quot;5px&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;rx=&amp;quot;8&amp;quot; ry=&amp;quot;8&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;id=&amp;quot;myRect&amp;quot; class=&amp;quot;chart&amp;quot; /&amp;gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;IE9 下运行效果图&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_291&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;327&amp;quot;
caption=&amp;quot;HTML5_SVG&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/06/HTML5_SVG.png"&gt;&lt;img alt="HTML5_SVG" class="size-full wp-image-291" src="http://magicalboy.com/wp-content/uploads/2010/06/HTML5_SVG.png" style="width: 327px; height: 274px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;目前只有 IE9 预览版支持 SVG 标签，所以必须在 IE9 下测试哦&lt;/p&gt;
</content></entry><entry><title>翻译：全面的 HTML 5 视频教程</title><link href="https://magicalboy.com/html-5-video-tutorial-and-comprehensive.html" rel="alternate"></link><published>2010-06-07T06:42:00+08:00</published><updated>2010-06-07T06:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-07:/html-5-video-tutorial-and-comprehensive.html</id><summary type="html">&lt;p&gt;这是一个老的视频教程，由一位叫 Brad Neuberg 的 Google
员工发布的介绍HTML5的教程。这篇文章专为那些时间很忙但又想跟进HTML5发展步伐的人而写的。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/6691519"&gt;Introduction to HTML 5&lt;/a&gt; from &lt;a class="reference external" href="http://vimeo.com/user1005914"&gt;Brad
Neuberg&lt;/a&gt; on
&lt;a class="reference external" href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;本篇文章包括的话题有：&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Web 矢量图形：Canvas 标签和可缩放矢量图形（SVG）&lt;/li&gt;
&lt;li&gt;地理定位接口&lt;/li&gt;
&lt;li&gt;HTML 5 视频&lt;/li&gt;
&lt;li&gt;HTML 5 数据库和应用程序缓存&lt;/li&gt;
&lt;li&gt;Web 工作者&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;视频比较长，坐下来尽情享受吧。&lt;/p&gt;
&lt;p&gt;假如你喜欢传统类型的教程，我们在这里准备了另一个教程：&lt;a class="reference external" href="http://www.html5trends.com/tutorials/an-html5-tutorial-by-a-google-employee/"&gt;An HTML5
Tutorial by a Google
Employee&lt;/a&gt;，也是出自一位
Google 员工之手。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a class="reference external" href="http://www.html5trends.com/tutorials/comprehensive-video-tutorial-on-html5/"&gt;Comprehensive video tutorial …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;这是一个老的视频教程，由一位叫 Brad Neuberg 的 Google
员工发布的介绍HTML5的教程。这篇文章专为那些时间很忙但又想跟进HTML5发展步伐的人而写的。&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://vimeo.com/6691519"&gt;Introduction to HTML 5&lt;/a&gt; from &lt;a class="reference external" href="http://vimeo.com/user1005914"&gt;Brad
Neuberg&lt;/a&gt; on
&lt;a class="reference external" href="http://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;本篇文章包括的话题有：&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Web 矢量图形：Canvas 标签和可缩放矢量图形（SVG）&lt;/li&gt;
&lt;li&gt;地理定位接口&lt;/li&gt;
&lt;li&gt;HTML 5 视频&lt;/li&gt;
&lt;li&gt;HTML 5 数据库和应用程序缓存&lt;/li&gt;
&lt;li&gt;Web 工作者&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;视频比较长，坐下来尽情享受吧。&lt;/p&gt;
&lt;p&gt;假如你喜欢传统类型的教程，我们在这里准备了另一个教程：&lt;a class="reference external" href="http://www.html5trends.com/tutorials/an-html5-tutorial-by-a-google-employee/"&gt;An HTML5
Tutorial by a Google
Employee&lt;/a&gt;，也是出自一位
Google 员工之手。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a class="reference external" href="http://www.html5trends.com/tutorials/comprehensive-video-tutorial-on-html5/"&gt;Comprehensive video tutorial on
HTML5&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>C语言基础：输入缓冲区</title><link href="https://magicalboy.com/c-input-buffer.html" rel="alternate"></link><published>2010-06-06T03:40:00+08:00</published><updated>2010-06-06T03:40:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-06:/c-input-buffer.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;缓冲定义&lt;/strong&gt;：暂时存放输入或输出数据的存储区域&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;strong&gt;实例代码&lt;/strong&gt;：缓冲输入的实例——延时回显&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/* echo.c &lt;span class="pre"&gt;--&lt;/span&gt; 回显输入 */ #include&amp;nbsp; int main(void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char ch;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;while((ch=getchar()) != '#')&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;程序示例1：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;hello,welcome to magicalboy.com【回车】 hello,welcome to magicalboy.com you are always the &lt;span class="pre"&gt;#1!【回车】&lt;/span&gt; you are always the&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;程序示例2：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;hheelloo,,wweellccoommee&lt;/span&gt; ttoo&amp;nbsp; &lt;span class="pre"&gt;mmaaggiiccaallbbooyy..ccoomm【回车 …&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;缓冲定义&lt;/strong&gt;：暂时存放输入或输出数据的存储区域&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;strong&gt;实例代码&lt;/strong&gt;：缓冲输入的实例——延时回显&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/* echo.c &lt;span class="pre"&gt;--&lt;/span&gt; 回显输入 */ #include&amp;nbsp; int main(void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char ch;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;while((ch=getchar()) != '#')&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;程序示例1：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;hello,welcome to magicalboy.com【回车】 hello,welcome to magicalboy.com you are always the &lt;span class="pre"&gt;#1!【回车】&lt;/span&gt; you are always the&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;程序示例2：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;hheelloo,,wweellccoommee&lt;/span&gt; ttoo&amp;nbsp; &lt;span class="pre"&gt;mmaaggiiccaallbbooyy..ccoomm【回车】&lt;/span&gt; yyoouu&amp;nbsp; aarree aallwwaayyss&amp;nbsp; tthhee&amp;nbsp; #&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;程序分析&lt;/h2&gt;
&lt;p&gt;输入的字符被临时存储在缓冲区中，直到按下回车键，所缓冲的字符才变得可用，同时，缓冲区被清空。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;为什么需要缓冲区&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提高数据传输效率，将若干个字符作为一个块传输比逐个发送这些字符耗费的时间少。&lt;/li&gt;
&lt;li&gt;及时修改数据，如果输入有误，可以及时更正，直到按下回车键发送正确的输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;缓冲的分类&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;完全缓冲
I/O：缓冲区满时被清空，即缓冲区数据被发送到目的地。此类缓冲通常用在文件输入中。缓冲区的大小取决于系统，常见的值有512字节和4096字节。&lt;/li&gt;
&lt;li&gt;行缓冲
I/O：这种就是前面例子演示的缓冲，当遇到一个换行字符或按下回车键时将被清空缓冲区，键盘输入是标准的行缓冲。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;非缓冲输入&lt;/h2&gt;
&lt;p&gt;直接输入，表示输入的数据对程序马上可用，例如，前面的程序运行示例2中，我们在命令行输入的字符马上回显。再如游戏中的输入，按下一个键马上执行某一个命令。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;结束语&lt;/h2&gt;
&lt;p&gt;ANSI
C规定应该对输入进行缓冲，但K&amp;amp;R则将选择权留给了编译器的实现。运行上面的程序，大多数系统都能看到如程序示例1的结果，大家可以动手试一下。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>手绘风格的原型设计工具Mockups</title><link href="https://magicalboy.com/hand-painted-style-of-prototyping-tools.html" rel="alternate"></link><published>2010-06-05T01:37:00+08:00</published><updated>2010-06-05T01:37:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-05:/hand-painted-style-of-prototyping-tools.html</id><summary type="html">&lt;p&gt;由于需要为美工MM提供线框图，在网上找了几个有手绘效果的模型设计工具：Cacoo
和 Balsamiq Mockups。&lt;/p&gt;
&lt;div class="section" id="cacoo"&gt;
&lt;h2&gt;Cacoo&lt;/h2&gt;
&lt;p&gt;Cacoo是一款在线的Web App，功能确实很强大，不仅仅可以画手绘效果的Freehand
Wireframe，还可以画流程图，UML图等。不足之处是可用元素比较少，而且以国内的网速使用Web
App体验效果不佳。Cacoo(カクー)由日本人开发的，可以免费体验4个月。网址：&lt;a class="reference external" href="http://cacoo.com/"&gt;http://cacoo.com/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="balsamiq-mockups"&gt;
&lt;h2&gt;Balsamiq Mockups&lt;/h2&gt;
&lt;p&gt;Mockups，顾名思其义，一款实体模型设计工具。具有丰富的UI元素，IPHONE应用程序界面，RIA
UI等。Mockups 也是基于Adobe 的 Flex 技术开发的，有Web App和Desktop
App两个版本，即使没有网络也可以通过下载桌面版的AIR程序安装使用。Mockups
不是免费软件，不过有免费的途径获取注册码，比如写信给Balsamiq，写博文介绍Mockups等。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Mockups 官方截图 …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;由于需要为美工MM提供线框图，在网上找了几个有手绘效果的模型设计工具：Cacoo
和 Balsamiq Mockups。&lt;/p&gt;
&lt;div class="section" id="cacoo"&gt;
&lt;h2&gt;Cacoo&lt;/h2&gt;
&lt;p&gt;Cacoo是一款在线的Web App，功能确实很强大，不仅仅可以画手绘效果的Freehand
Wireframe，还可以画流程图，UML图等。不足之处是可用元素比较少，而且以国内的网速使用Web
App体验效果不佳。Cacoo(カクー)由日本人开发的，可以免费体验4个月。网址：&lt;a class="reference external" href="http://cacoo.com/"&gt;http://cacoo.com/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="balsamiq-mockups"&gt;
&lt;h2&gt;Balsamiq Mockups&lt;/h2&gt;
&lt;p&gt;Mockups，顾名思其义，一款实体模型设计工具。具有丰富的UI元素，IPHONE应用程序界面，RIA
UI等。Mockups 也是基于Adobe 的 Flex 技术开发的，有Web App和Desktop
App两个版本，即使没有网络也可以通过下载桌面版的AIR程序安装使用。Mockups
不是免费软件，不过有免费的途径获取注册码，比如写信给Balsamiq，写博文介绍Mockups等。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Mockups 官方截图&lt;/h2&gt;
&lt;p&gt;[gallery]&lt;/p&gt;
&lt;p&gt;更多介绍请访问&lt;a class="reference external" href="http://www.balsamiq.com/products/mockups/examples"&gt;http://www.balsamiq.com/products/mockups/examples&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>C语言基础：打印长字符串</title><link href="https://magicalboy.com/c-print-a-long-string.html" rel="alternate"></link><published>2010-06-02T14:31:00+08:00</published><updated>2010-06-02T14:31:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-06-02:/c-print-a-long-string.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;C语言重登王位，赶紧学好C混个铁饭碗才行了。确实，不管C语言有没有王者归来，它都是一门很强大的语言。Linux/Unix
核心是用C写的，Java，Python等高级语言也是用C来实现，学习C简直是百益而无一害啊！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;好了好了，说回本次话题，打印长字符串在Java中直接使用重载的“+”运算符，即可在下一行断行继续输入，那么在C中要怎么写呢：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/** * LongStrg.java &lt;span class="pre"&gt;--&lt;/span&gt; 打印长字符串 * &amp;#64;author magicalboy */ public class LongStrg {&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public static void main(String[] args) {&lt;/div&gt;
&lt;div class="line"&gt;System.out.println(&amp;quot;Hello, Welcome to magicalboy's blog!n&amp;quot; +&lt;/div&gt;
&lt;div class="line"&gt;&amp;quot;Any problems please contact &lt;a class="reference external" href="mailto:admin&amp;#64;magicalboy.com"&gt;admin&amp;#64;magicalboy.com&lt;/a&gt;. Thanks …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;C语言重登王位，赶紧学好C混个铁饭碗才行了。确实，不管C语言有没有王者归来，它都是一门很强大的语言。Linux/Unix
核心是用C写的，Java，Python等高级语言也是用C来实现，学习C简直是百益而无一害啊！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;好了好了，说回本次话题，打印长字符串在Java中直接使用重载的“+”运算符，即可在下一行断行继续输入，那么在C中要怎么写呢：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/** * LongStrg.java &lt;span class="pre"&gt;--&lt;/span&gt; 打印长字符串 * &amp;#64;author magicalboy */ public class LongStrg {&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public static void main(String[] args) {&lt;/div&gt;
&lt;div class="line"&gt;System.out.println(&amp;quot;Hello, Welcome to magicalboy's blog!n&amp;quot; +&lt;/div&gt;
&lt;div class="line"&gt;&amp;quot;Any problems please contact &lt;a class="reference external" href="mailto:admin&amp;#64;magicalboy.com"&gt;admin&amp;#64;magicalboy.com&lt;/a&gt;. Thanks! \n&amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决问题&lt;/h2&gt;
&lt;p&gt;C没有这样的写法，也不能在引号括起来的字符串中间断行，要实现上面的效果，有如下三种方法：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;/* longstrg.c &lt;span class="pre"&gt;--&lt;/span&gt; 打印长字符串 */ #include int main(void) { /* 第 1 种方法，使用多个 printf() 语句 */ &lt;span class="pre"&gt;printf(&amp;quot;Hello,&lt;/span&gt; Welcome to magicalboy's &lt;span class="pre"&gt;blog!\n&amp;quot;);&lt;/span&gt; &lt;span class="pre"&gt;printf(&amp;quot;Any&lt;/span&gt; problems please contact admin&amp;#64;magicalboy.com. &lt;span class="pre"&gt;Thanks!\n&amp;quot;);&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;/* 第 2 种方法，使用反斜线符号（）和回车键组合 （同Python）*/&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;Hello, Welcome to magicalboy's blog!n&lt;/div&gt;
&lt;div class="line"&gt;Any problems please contact &lt;a class="reference external" href="mailto:admin&amp;#64;magicalboy.com"&gt;admin&amp;#64;magicalboy.com&lt;/a&gt;. Thanks!n&amp;quot;);&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;/* 第 3 种方法，采用 ANSI C 标准的字符串连接方法 */&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;Hello, Welcome to magicalboy's blog!n&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;&amp;quot;Any problems please contact &lt;a class="reference external" href="mailto:admin&amp;#64;magicalboy.com"&gt;admin&amp;#64;magicalboy.com&lt;/a&gt;. Thanks!n&amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;getchar(); // 等待输入字符，防止执行窗口关闭&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;结束语&lt;/h2&gt;
&lt;p&gt;方法有很多种，选择哪一种见仁见智吧。不要死钻牛角尖搞起科研就好，就比如孔乙己说的回字有四样写法的典范。就当作一下笔记吧，别忘了又翻书去，这是最不想看到的结果！&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>演示文章——图片浮动问题</title><link href="https://magicalboy.com/mages-float-problem-demonstrate.html" rel="alternate"></link><published>2010-05-30T09:30:00+08:00</published><updated>2010-05-30T09:30:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-30:/mages-float-problem-demonstrate.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;测试文章——图片浮动问题&lt;/h2&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_179&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;441&amp;quot;
caption=&amp;quot;后台添加图像&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png"&gt;&lt;img alt="后台添加图像" class="alignnone size-full wp-image-194" src="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png" style="width: 391px; height: 103px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;文章内容测试&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;测试文章——图片浮动问题2&lt;/h2&gt;
&lt;p&gt;文章内容测试&lt;/p&gt;
&lt;p&gt;解决方法见&lt;a class="reference external" href="http://magicalboy.com/archives/189.html"&gt;wordpress的文章图像浮动解决方法&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;测试文章——图片浮动问题&lt;/h2&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_179&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;441&amp;quot;
caption=&amp;quot;后台添加图像&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png"&gt;&lt;img alt="后台添加图像" class="alignnone size-full wp-image-194" src="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png" style="width: 391px; height: 103px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;文章内容测试&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;测试文章——图片浮动问题2&lt;/h2&gt;
&lt;p&gt;文章内容测试&lt;/p&gt;
&lt;p&gt;解决方法见&lt;a class="reference external" href="http://magicalboy.com/archives/189.html"&gt;wordpress的文章图像浮动解决方法&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>wordpress的文章图片浮动解决方法</title><link href="https://magicalboy.com/wordpress-article-image-floating-solution.html" rel="alternate"></link><published>2010-05-30T08:56:00+08:00</published><updated>2010-05-30T08:56:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-30:/wordpress-article-image-floating-solution.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为文章添加图像&lt;/h2&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_179&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;441&amp;quot;
caption=&amp;quot;后台添加图像&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png"&gt;&lt;img alt="后台添加图像" class="alignnone size-full wp-image-194" src="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png" style="width: 391px; height: 103px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;我们在后台为文章添加图像，使用左对齐显示的时候，可能会出现图像在文章中向左靠，标题文章向右靠等问题，点击查看示例文章&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;先看默认设置时所插入图片的代码&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;[caption &lt;span class="pre"&gt;id=&amp;quot;attachment_179&amp;quot;&lt;/span&gt;&amp;nbsp; &lt;span class="pre"&gt;align=&amp;quot;alignleft&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;width=&amp;quot;441&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;caption=&amp;quot;后台添加图像&amp;quot;]&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;http://www.wordpress.la/WordPress中图片属性caption的使用.html。&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;再看[caption]中的属性align=&amp;quot;alignleft&amp;quot;的CSS代码&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.alignleft {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; float:left;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;margin-right:10px;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;text-align:left;&lt;/span&gt; }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;其中的float:left使图片向左浮动，这是出现问题的原因之处了吧。所以我们在插入图片时要注意修改一下 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;为文章添加图像&lt;/h2&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_179&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;441&amp;quot;
caption=&amp;quot;后台添加图像&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png"&gt;&lt;img alt="后台添加图像" class="alignnone size-full wp-image-194" src="http://magicalboy.com/wp-content/uploads/2010/05/后台添加图像.png" style="width: 391px; height: 103px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;我们在后台为文章添加图像，使用左对齐显示的时候，可能会出现图像在文章中向左靠，标题文章向右靠等问题，点击查看示例文章&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;先看默认设置时所插入图片的代码&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;[caption &lt;span class="pre"&gt;id=&amp;quot;attachment_179&amp;quot;&lt;/span&gt;&amp;nbsp; &lt;span class="pre"&gt;align=&amp;quot;alignleft&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;width=&amp;quot;441&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;caption=&amp;quot;后台添加图像&amp;quot;]&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;http://www.wordpress.la/WordPress中图片属性caption的使用.html。&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;再看[caption]中的属性align=&amp;quot;alignleft&amp;quot;的CSS代码&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;.alignleft {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; float:left;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;margin-right:10px;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;text-align:left;&lt;/span&gt; }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;其中的float:left使图片向左浮动，这是出现问题的原因之处了吧。所以我们在插入图片时要注意修改一下，去掉align=&amp;quot;alignleft&amp;quot;或者在添加图像时，对齐方式选项设置为无，等于align=&amp;quot;alignnone&amp;quot;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/图片位置.png"&gt;&lt;img alt="图片位置" class="size-full wp-image-197" src="http://magicalboy.com/wp-content/uploads/2010/05/图片位置.png" style="width: 322px; height: 218px;" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>dev-c++自动缩进设置</title><link href="https://magicalboy.com/dev-c-automatically-indent-settings.html" rel="alternate"></link><published>2010-05-30T07:12:00+08:00</published><updated>2010-05-30T07:12:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-30:/dev-c-automatically-indent-settings.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Dev-C++&lt;/h2&gt;
&lt;blockquote&gt;
&lt;strong&gt;Dev-C++&lt;/strong&gt;是一套用于开发C/C++的&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6"&gt;自由的&lt;/a&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83"&gt;整合性开发环境&lt;/a&gt;（IDE），并以&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81"&gt;GPL&lt;/a&gt;作为散布许可。使用
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/MinGW"&gt;MinGW&lt;/a&gt; 及
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/GDB"&gt;GDB&lt;/a&gt;
作为编译系统与除错系统。Dev-C++的IDE是利用&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Delphi"&gt;Delphi&lt;/a&gt;开发
的。&lt;/blockquote&gt;
&lt;p&gt;它使用包管理器，集成GCC，MinGW等包，支持C99标准，基于GPL让它得到很好的改进，但似乎有段时间没有更新了。当前IDE最新版本为4.9.9.2&lt;/p&gt;
&lt;p&gt;下载最新版本的dev-c++：&lt;a class="reference external" href="http://sourceforge.net/projects/dev-cpp/files/"&gt;http://sourceforge.net/projects/dev-cpp/files/&lt;/a&gt;，Windows平台下载并运行devcpp-4.9.9.2_setup.exe直接安装&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决自动缩进问题&lt;/h2&gt;
&lt;p&gt;默认的缩进代码如下：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* divisible.c &lt;span class="pre"&gt;--&lt;/span&gt; 求约数 */ #include&amp;nbsp; #include …&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;Dev-C++&lt;/h2&gt;
&lt;blockquote&gt;
&lt;strong&gt;Dev-C++&lt;/strong&gt;是一套用于开发C/C++的&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6"&gt;自由的&lt;/a&gt;&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83"&gt;整合性开发环境&lt;/a&gt;（IDE），并以&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81"&gt;GPL&lt;/a&gt;作为散布许可。使用
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/MinGW"&gt;MinGW&lt;/a&gt; 及
&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/GDB"&gt;GDB&lt;/a&gt;
作为编译系统与除错系统。Dev-C++的IDE是利用&lt;a class="reference external" href="http://zh.wikipedia.org/zh-cn/Delphi"&gt;Delphi&lt;/a&gt;开发
的。&lt;/blockquote&gt;
&lt;p&gt;它使用包管理器，集成GCC，MinGW等包，支持C99标准，基于GPL让它得到很好的改进，但似乎有段时间没有更新了。当前IDE最新版本为4.9.9.2&lt;/p&gt;
&lt;p&gt;下载最新版本的dev-c++：&lt;a class="reference external" href="http://sourceforge.net/projects/dev-cpp/files/"&gt;http://sourceforge.net/projects/dev-cpp/files/&lt;/a&gt;，Windows平台下载并运行devcpp-4.9.9.2_setup.exe直接安装&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;解决自动缩进问题&lt;/h2&gt;
&lt;p&gt;默认的缩进代码如下：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* divisible.c &lt;span class="pre"&gt;--&lt;/span&gt; 求约数 */ #include&amp;nbsp; #include&amp;nbsp; int main(void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int num;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; int div;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;printf(&amp;quot;请输入一个整数：&amp;quot;);&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;scanf(&amp;quot;%d&amp;quot;,&lt;/span&gt; &amp;amp;num);&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;for(div=2; div {&lt;/div&gt;
&lt;div class="line"&gt;if(num%div == 0)&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;%d 为 %d 的约数n&amp;quot;, div, num);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;// getchar();&lt;/div&gt;
&lt;div class="line"&gt;system(&amp;quot;pause&amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;默认的缩进截图：&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_178&amp;quot; align=&amp;quot;alignleft&amp;quot; width=&amp;quot;788&amp;quot;
caption=&amp;quot;dev-c++代码自动缩进&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/devc-1.png"&gt;&lt;img alt="dev-c++代码自动缩进" class="size-full wp-image-178" src="http://magicalboy.com/wp-content/uploads/2010/05/devc-1.png" style="width: 788px; height: 509px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;设置编辑选项：Tools菜单—&amp;gt;Editor Options—&amp;gt;General标签项，取消选中的Smart
Tabs，问题就解决了！&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_179&amp;quot; width=&amp;quot;441&amp;quot;
caption=&amp;quot;dev-c++编辑设置&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/devc-2.png"&gt;&lt;img alt="dev-c++编辑设置" class="size-full wp-image-179" src="http://magicalboy.com/wp-content/uploads/2010/05/devc-2.png" style="width: 441px; height: 443px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;另外，Dev-C++还支持国际化，支持中文，可在“工具”—&amp;gt;“环境选项”—&amp;gt;“界面”—&amp;gt;“语言”中选择“Chinese”即可。&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>典型的C编程风格</title><link href="https://magicalboy.com/a-typical-c-programming-style.html" rel="alternate"></link><published>2010-05-28T15:37:00+08:00</published><updated>2010-05-28T15:37:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-28:/a-typical-c-programming-style.html</id><summary type="html">&lt;p&gt;C语法很灵活，如果我们都遵循一些良好的编程风格，可以写出高效率，思路清晰的代码。同时这也是一个程序员应该养成的良好习惯。良好的编程习惯有：写注释，代码对齐，规范命名等等。这篇文章只简单的展示一个经典的编程风格，请先看以下程序清单：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* cypher1.c &lt;span class="pre"&gt;--&lt;/span&gt; 改变输入，只保留其中的空格 */ #include&amp;nbsp; #define SPACE ' ' int main(void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char ch;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ch = getchar(); // 读入一个字符&lt;/div&gt;
&lt;div class="line"&gt;while(ch != 'n') // 当一行未结束时&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;if(ch == SPACE) // 空格不变&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch);&lt;/div&gt;
&lt;div class="line"&gt;else&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch+1);&lt;/div&gt;
&lt;div class="line"&gt;ch = getchar(); // 获取下一个字符&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch); // 打印换行符&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里一个读取字符语句在while循环之前，另一个 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;C语法很灵活，如果我们都遵循一些良好的编程风格，可以写出高效率，思路清晰的代码。同时这也是一个程序员应该养成的良好习惯。良好的编程习惯有：写注释，代码对齐，规范命名等等。这篇文章只简单的展示一个经典的编程风格，请先看以下程序清单：&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;/* cypher1.c &lt;span class="pre"&gt;--&lt;/span&gt; 改变输入，只保留其中的空格 */ #include&amp;nbsp; #define SPACE ' ' int main(void) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char ch;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;ch = getchar(); // 读入一个字符&lt;/div&gt;
&lt;div class="line"&gt;while(ch != 'n') // 当一行未结束时&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;if(ch == SPACE) // 空格不变&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch);&lt;/div&gt;
&lt;div class="line"&gt;else&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch+1);&lt;/div&gt;
&lt;div class="line"&gt;ch = getchar(); // 获取下一个字符&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;putchar(ch); // 打印换行符&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这里一个读取字符语句在while循环之前，另一个“读”在循环的结尾，这样，我们可以通过C灵活的语法来将读取字符和判断字符合并为一个表达式：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;ch = &lt;span class="pre"&gt;getchar();&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; // 读入一个字符 while(ch != 'n')&amp;nbsp;&amp;nbsp; // 当一行未结束时 {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ……&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ch = &lt;span class="pre"&gt;getchar();&lt;/span&gt; // 获取下一个字符 }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;替换为下面这种形式&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;while((ch&lt;/span&gt; = &lt;span class="pre"&gt;getchar())&lt;/span&gt; != 'n')&amp;nbsp;&amp;nbsp; // 当一行未结束时 {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; …… // 处理字符 }&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;这种典型的习惯用法在C及其它现在语言中很常见，我们应当熟悉它&lt;/p&gt;
</content></entry><entry><title>防止浏览器缓存的简单方法</title><link href="https://magicalboy.com/prevent-the-browser-cache.html" rel="alternate"></link><published>2010-05-19T01:33:00+08:00</published><updated>2010-05-19T01:33:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-19:/prevent-the-browser-cache.html</id><summary type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;这是一个老问题了，在WEB开发中，我们经常会忽略它的重要性以至于遇到奇妙的问题时而不知所措。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在项目开发中使用到Ajax，其中Ajax请求提交后返回的数据在IE6显示总是一成不变，甚至直接从浏览器缓存中直接读取而不去服务器请求！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在请求的地址后面加上一个随机数参数即可：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;…… &lt;span class="pre"&gt;$.get(&amp;quot;/getdata?nocache=&amp;quot;+Math.random(),&lt;/span&gt; function(data) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; alert(data);&amp;nbsp; // demo }); ……&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;后语&lt;/h2&gt;
&lt;p&gt;在WEB开发中，还真不要小看浏览器缓存所带来的影响，当遇到寞名的问题时而无从下手时，不妨清理一下浏览器缓存看看&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;前言&lt;/h2&gt;
&lt;p&gt;这是一个老问题了，在WEB开发中，我们经常会忽略它的重要性以至于遇到奇妙的问题时而不知所措。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;问题描述&lt;/h2&gt;
&lt;p&gt;在项目开发中使用到Ajax，其中Ajax请求提交后返回的数据在IE6显示总是一成不变，甚至直接从浏览器缓存中直接读取而不去服务器请求！&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;在请求的地址后面加上一个随机数参数即可：&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;…… &lt;span class="pre"&gt;$.get(&amp;quot;/getdata?nocache=&amp;quot;+Math.random(),&lt;/span&gt; function(data) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; alert(data);&amp;nbsp; // demo }); ……&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;后语&lt;/h2&gt;
&lt;p&gt;在WEB开发中，还真不要小看浏览器缓存所带来的影响，当遇到寞名的问题时而无从下手时，不妨清理一下浏览器缓存看看&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>QQ邮箱之申请认领该博客测试</title><link href="https://magicalboy.com/qq-mail-blog-test.html" rel="alternate"></link><published>2010-05-15T16:21:00+08:00</published><updated>2010-05-15T16:21:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-15:/qq-mail-blog-test.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;成为认证博主，认领自己的博客&lt;/h2&gt;
&lt;p&gt;这是QQ邮箱的阅读空间里面的一个推广博客的功能，认领成功后，订阅您博客读者可以同时看到您的广播，本博客也会列在您的广播主页上。可以使更多使用QQ邮箱的好友关注您的博客哦&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;提交认领申请&lt;/h2&gt;
&lt;p&gt;提交认领申请后，需要注意:&lt;/p&gt;
&lt;p&gt;更多请查看
&lt;a class="reference external" href="http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;amp;&amp;amp;id=40&amp;amp;&amp;amp;no=1000483"&gt;http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;amp;&amp;amp;id=40&amp;amp;&amp;amp;no=1000483&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;成为认证博主，认领自己的博客&lt;/h2&gt;
&lt;p&gt;这是QQ邮箱的阅读空间里面的一个推广博客的功能，认领成功后，订阅您博客读者可以同时看到您的广播，本博客也会列在您的广播主页上。可以使更多使用QQ邮箱的好友关注您的博客哦&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;提交认领申请&lt;/h2&gt;
&lt;p&gt;提交认领申请后，需要注意:&lt;/p&gt;
&lt;p&gt;更多请查看
&lt;a class="reference external" href="http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;amp;&amp;amp;id=40&amp;amp;&amp;amp;no=1000483"&gt;http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;amp;&amp;amp;id=40&amp;amp;&amp;amp;no=1000483&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>浅谈JavaScript全局变量与局部变量</title><link href="https://magicalboy.com/javascript-global-and-local-variables.html" rel="alternate"></link><published>2010-05-13T06:44:00+08:00</published><updated>2010-05-13T06:44:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-13:/javascript-global-and-local-variables.html</id><summary type="html">&lt;p&gt;JavaScript是一门具有非常丰富特性的脚本语言，它有着其他编程语言一样的复杂性，甚至有时更复杂。下面就谈谈JavaScript的全局变量与局部变量的作用范围。&lt;/p&gt;
&lt;p&gt;先看一个简单示例，&lt;strong&gt;修改全局变量的值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;var message = &amp;quot;Hello, Welcome to magicalboy.com&amp;quot;;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;function show() {&lt;/div&gt;
&lt;div class="line"&gt;message=&amp;quot;magicalboy&amp;quot;;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;show();&lt;/div&gt;
&lt;div class="line"&gt;alert(message);&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;运行结果为弹出窗口警告信息：magicalboy.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JavaScript(ECMAScript)
的解释程序遇到未声明过的标识符时，用该变量名创建一个全局变量，并将其初始化为指定的值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以message是一个全局变量。show()函数中遇到message，首先在函数里面即当前内存空间去找，找不到再向上在全局空间继续找，如果找到了，那好，为它所指向的内存地址赋新的值&amp;quot;magicalboy&amp;quot;。如果找不到呢，正如前面所说，用该变量名创建一个全局变量，并将其初始化为指定的值。&lt;/p&gt;
&lt;p&gt;JavaScript像Python等其它动态脚本语言一样支持闭包（closure）这一特性，使得函数可以使用函数之外定义的变量。&lt;/p&gt;
&lt;p&gt;对代码作如下修改，会有什么样的输出呢&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;var message = &amp;quot;Hello, Welcome …&lt;/tt&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;JavaScript是一门具有非常丰富特性的脚本语言，它有着其他编程语言一样的复杂性，甚至有时更复杂。下面就谈谈JavaScript的全局变量与局部变量的作用范围。&lt;/p&gt;
&lt;p&gt;先看一个简单示例，&lt;strong&gt;修改全局变量的值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;var message = &amp;quot;Hello, Welcome to magicalboy.com&amp;quot;;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;function show() {&lt;/div&gt;
&lt;div class="line"&gt;message=&amp;quot;magicalboy&amp;quot;;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;show();&lt;/div&gt;
&lt;div class="line"&gt;alert(message);&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;运行结果为弹出窗口警告信息：magicalboy.&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JavaScript(ECMAScript)
的解释程序遇到未声明过的标识符时，用该变量名创建一个全局变量，并将其初始化为指定的值。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以message是一个全局变量。show()函数中遇到message，首先在函数里面即当前内存空间去找，找不到再向上在全局空间继续找，如果找到了，那好，为它所指向的内存地址赋新的值&amp;quot;magicalboy&amp;quot;。如果找不到呢，正如前面所说，用该变量名创建一个全局变量，并将其初始化为指定的值。&lt;/p&gt;
&lt;p&gt;JavaScript像Python等其它动态脚本语言一样支持闭包（closure）这一特性，使得函数可以使用函数之外定义的变量。&lt;/p&gt;
&lt;p&gt;对代码作如下修改，会有什么样的输出呢&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;var message = &amp;quot;Hello, Welcome to magicalboy.com&amp;quot;;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;function show() {&lt;/div&gt;
&lt;div class="line"&gt;var message; // 增加var关键字显式声明变量&lt;/div&gt;
&lt;div class="line"&gt;message=&amp;quot;magicalboy&amp;quot;;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;show();&lt;/div&gt;
&lt;div class="line"&gt;alert(message);&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;没错，这次输出的是全局变量的值：&lt;tt class="docutils literal"&gt;Hello, Welcome to magicalboy.com&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;在show函数里面，我们重要用var显式声明了message变量。因为是在show函数里面显式声明的，它是一个局部变量。我们在函数里面修改了它的值，但它没有改变与之同名的全局变量的值，由此说明&lt;strong&gt;全局变量与局部变量的作用空间是相互独立的&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;学过Python语言的人会觉得有点奇怪，他们会这两种情况和Python刚好相反，虽然Python中全局变量是使用global关键字声明的。&lt;/p&gt;
</content></entry><entry><title>让IE6支持PNG透明(alpha通道)之FixPNG_jQuery_Plugin</title><link href="https://magicalboy.com/fixpng-jquery-plugin.html" rel="alternate"></link><published>2010-05-12T03:42:00+08:00</published><updated>2010-05-12T03:42:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-12:/fixpng-jquery-plugin.html</id><summary type="html">&lt;p&gt;IE6与生俱来就支持png8的索引色透明度，但不支持png或8位以上的 alpha
透明度。而对于非动画的GIF建议你使用PNG8，因为体积会更小。在这里，介绍一个jQuery的插件，它能让IE6支持PNG的
alpha 透明度，方便使用jQuery JS库的朋友使用。&lt;/p&gt;
&lt;div class="section" id="fixpng-jqueryie6png"&gt;
&lt;h2&gt;使用FixPNG jQuery插件使IE6支持PNG透明&lt;/h2&gt;
&lt;p&gt;插件官方下载地址：&lt;a class="reference external" href="http://plugins.jquery.com/project/fixpng"&gt;http://plugins.jquery.com/project/fixpng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载解压后，有简单的使用Demo，使用方法如下：&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;需要注意的是：在fixpng.js插件里，第18行&amp;quot;gif_file =
&amp;quot;img/vazio.gif&amp;quot;;&amp;quot;指向空白像素点的gif图片的路径需要根据你的路径修改一下。如果JS有报错：
&amp;quot;$ is not a function&amp;quot;，将&amp;quot;$&amp;quot;换为&amp;quot;jQuery&amp;quot;即可&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="htcie6png"&gt;
&lt;h2&gt;使用HTC组件方法使IE6支持PNG透明&lt;/h2&gt;
&lt;blockquote&gt;
htc的全称就是Html
Components，由微软在IE5.0后开始提供的一种新的指令组合，它可以把某种特定功能的代码封装在一个组件之中，从而实现了代码的重复使用 …&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;IE6与生俱来就支持png8的索引色透明度，但不支持png或8位以上的 alpha
透明度。而对于非动画的GIF建议你使用PNG8，因为体积会更小。在这里，介绍一个jQuery的插件，它能让IE6支持PNG的
alpha 透明度，方便使用jQuery JS库的朋友使用。&lt;/p&gt;
&lt;div class="section" id="fixpng-jqueryie6png"&gt;
&lt;h2&gt;使用FixPNG jQuery插件使IE6支持PNG透明&lt;/h2&gt;
&lt;p&gt;插件官方下载地址：&lt;a class="reference external" href="http://plugins.jquery.com/project/fixpng"&gt;http://plugins.jquery.com/project/fixpng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载解压后，有简单的使用Demo，使用方法如下：&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;需要注意的是：在fixpng.js插件里，第18行&amp;quot;gif_file =
&amp;quot;img/vazio.gif&amp;quot;;&amp;quot;指向空白像素点的gif图片的路径需要根据你的路径修改一下。如果JS有报错：
&amp;quot;$ is not a function&amp;quot;，将&amp;quot;$&amp;quot;换为&amp;quot;jQuery&amp;quot;即可&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="htcie6png"&gt;
&lt;h2&gt;使用HTC组件方法使IE6支持PNG透明&lt;/h2&gt;
&lt;blockquote&gt;
htc的全称就是Html
Components，由微软在IE5.0后开始提供的一种新的指令组合，它可以把某种特定功能的代码封装在一个组件之中，从而实现了代码的重复使用，据说是用来代替activex和applet的。&lt;/blockquote&gt;
&lt;div class="section" id="ie-png-fix-v1-0-2-0-alpha-2"&gt;
&lt;h3&gt;IE PNG Fix v1.0 / 2.0 Alpha 2&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>腾讯微博邀请码，要赶紧联系啦</title><link href="https://magicalboy.com/t-blog-invite-code.html" rel="alternate"></link><published>2010-05-07T04:53:00+08:00</published><updated>2010-05-07T04:53:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-07:/t-blog-invite-code.html</id><summary type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;昨天中午开通的腾讯微博，当晚就获得了三个邀请资格，有以下图为证，喜欢的网友赶紧啦，截至发稿还剩三个&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_124&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;232&amp;quot;
caption=&amp;quot;邀请听众&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/t-blog-invite-code.html/invite2"&gt;&lt;img alt="邀请听众" class="size-full wp-image-124" src="http://magicalboy.com/wp-content/uploads/2010/05/invite2.png" style="width: 232px; height: 60px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_125&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;241&amp;quot;
caption=&amp;quot;QQ面板提示信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/invite.png"&gt;&lt;img alt="QQ面板提示信息" class="size-full wp-image-125" src="http://magicalboy.com/wp-content/uploads/2010/05/invite.png" style="width: 241px; height: 127px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;晕哦，图截得小了，证明不了，再截一张&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_126&amp;quot; align=&amp;quot;alignnone&amp;quot;
caption=&amp;quot;腾讯微博邀请&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/t-blog-invite-code.html/invite1"&gt;&lt;img alt="腾讯微博邀请" class="size-full wp-image-126" src="http://magicalboy.com/wp-content/uploads/2010/05/invite1.png" style="width: 717px; height: 185px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;怎么说还能获取2个种子，因为我获取了一个，还没复制发过别人，所以说还剩下三个！&lt;/div&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="line-block"&gt;
&lt;div class="line"&gt;昨天中午开通的腾讯微博，当晚就获得了三个邀请资格，有以下图为证，喜欢的网友赶紧啦，截至发稿还剩三个&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_124&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;232&amp;quot;
caption=&amp;quot;邀请听众&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/t-blog-invite-code.html/invite2"&gt;&lt;img alt="邀请听众" class="size-full wp-image-124" src="http://magicalboy.com/wp-content/uploads/2010/05/invite2.png" style="width: 232px; height: 60px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_125&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;241&amp;quot;
caption=&amp;quot;QQ面板提示信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/wp-content/uploads/2010/05/invite.png"&gt;&lt;img alt="QQ面板提示信息" class="size-full wp-image-125" src="http://magicalboy.com/wp-content/uploads/2010/05/invite.png" style="width: 241px; height: 127px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;晕哦，图截得小了，证明不了，再截一张&lt;/div&gt;
&lt;div class="line"&gt;[caption id=&amp;quot;attachment_126&amp;quot; align=&amp;quot;alignnone&amp;quot;
caption=&amp;quot;腾讯微博邀请&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/t-blog-invite-code.html/invite1"&gt;&lt;img alt="腾讯微博邀请" class="size-full wp-image-126" src="http://magicalboy.com/wp-content/uploads/2010/05/invite1.png" style="width: 717px; height: 185px;" /&gt;&lt;/a&gt;[/caption]&lt;/div&gt;
&lt;div class="line"&gt;怎么说还能获取2个种子，因为我获取了一个，还没复制发过别人，所以说还剩下三个！&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>写给新入IT的新人们</title><link href="https://magicalboy.com/the-new-it-people.html" rel="alternate"></link><published>2010-05-04T01:34:00+08:00</published><updated>2010-05-04T01:34:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-05-04:/the-new-it-people.html</id><summary type="html">&lt;p&gt;IT=挨踢，这是IT人的自嘲，进入IT行业是有四五年了，也算得上是一个“老人”了吧，见了不少新人，面试了不少新人，也带了一些新人，多多少少
还是有点发言权的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于书本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新人们常常会说我看了多少多少的书，看过某某人写的书，仿佛书看了就会做了。其实不然，很多新人在面试的时候夸夸其谈，说啥啥都知道一点，到真正做的时候，啥都不会。归根到底是没有经验，技术这玩意儿经验
非常重要，很多东西如果不是你碰到了，你从书上一辈子都找不到答案。&lt;/p&gt;
&lt;p&gt;我看书的习惯一般都是先把整个书翻翻，了解一下书的基本内容，然后
在实际项目中遇到相应的问题再去翻书，当然这是因为我对技术已经有一定的了解，不需要通读整本书。初学者应该找一些适合自己的书，通读一遍，其中的例子要
认真做，一定要自己去写代码，而不是Copy。我以前在学做网页的时候，别人都用Dreamweaver去做，只有我打开源代码编辑器学习HTML源代码
的编写。&lt;/p&gt;
&lt;p&gt;做完书的例子只能说明你会削木头了，但会削木头离会做柜子还有很远的路要走。还记得达·芬奇画鸡蛋的故事么？不停地重复肯定是
枯燥的，所以你需要自己尝试去做一些实际的东西，比如做一个个人主页 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;IT=挨踢，这是IT人的自嘲，进入IT行业是有四五年了，也算得上是一个“老人”了吧，见了不少新人，面试了不少新人，也带了一些新人，多多少少
还是有点发言权的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于书本&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新人们常常会说我看了多少多少的书，看过某某人写的书，仿佛书看了就会做了。其实不然，很多新人在面试的时候夸夸其谈，说啥啥都知道一点，到真正做的时候，啥都不会。归根到底是没有经验，技术这玩意儿经验
非常重要，很多东西如果不是你碰到了，你从书上一辈子都找不到答案。&lt;/p&gt;
&lt;p&gt;我看书的习惯一般都是先把整个书翻翻，了解一下书的基本内容，然后
在实际项目中遇到相应的问题再去翻书，当然这是因为我对技术已经有一定的了解，不需要通读整本书。初学者应该找一些适合自己的书，通读一遍，其中的例子要
认真做，一定要自己去写代码，而不是Copy。我以前在学做网页的时候，别人都用Dreamweaver去做，只有我打开源代码编辑器学习HTML源代码
的编写。&lt;/p&gt;
&lt;p&gt;做完书的例子只能说明你会削木头了，但会削木头离会做柜子还有很远的路要走。还记得达·芬奇画鸡蛋的故事么？不停地重复肯定是
枯燥的，所以你需要自己尝试去做一些实际的东西，比如做一个个人主页、一个留言本、一个通信地址本......在这些实际的东西中去实现你的创意，去实现
你在书本上所学习的例子，并且将这些例子加入你的思想。&lt;/p&gt;
&lt;p&gt;永远不要认为书本能给你带来多少东西，虽然它们很有用，但它们只是一个Key，
一个引你入门的Key。我买的技术书中，最多的是
VB.Net，但这却是我最烂的一门技术。而我用得比较好的Delphi、Sql
Server、Photoshop、CoreDRAW、CSS、HTML、Javascript、Xslt、Xml，我几乎没有买书，但因为实际的项目需
要，或者是我个人的兴趣爱好。&lt;/p&gt;
&lt;p&gt;当然，我并不是反对你去买书，去读书，我只是想告诉你，你需要有一种平和的心态。但你要记住，书本只是一
个Key。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于基础&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在很多新人们都是好高骛远，目空一切，基础的东西不想做，
难一点的东西又做不了，真的很令人头疼。其实技术人员，尤其是中国技术人员，你要懂的东西太多太多了。我们拿
Web程序员举例吧，HTML、Javascript、CSS、Photoshop切图，这些都是很基础的东西，但很多人就是不愿意去学，认为这些东西太
低级，甚至有些老程序员也不擅长这些。但我要告诉你，在Web开发中，这些都很重要，尤其是CSS和HTML、Javascript，如果你不是做一个
OA之类办公的Web系统的话，这些在网站用得太多太多了，是一些Web应用的基础。&lt;/p&gt;
&lt;p&gt;虽然我们现在涌现一大批如ASP.Net的优秀开
发环境，可以让你完全不懂HTML也能开发出一套“网站”来，但正如其它程序化的东西一些，它会限制你的灵感与思维，它们都很霸道，所以才会有开源的兴
起。我以前甚至不愿意用ASP.Net内置的GridView，我宁愿自己去构造
Table，这觉得这样我更便于控制。&lt;/p&gt;
&lt;p&gt;很多新人们喜
欢拿新兴的技术说事，比如说AJAX，但实质他根本就不懂AJAX实现的原理，连多线程的原理都不懂，怎么能明白AJAX呢？有些做了一年多
ASP.Net的人，居然还不知道.Net
Framework框架的本质是什么，不知道ASP.Net是如何实现的，也不知道客户端也服务器端是如何交互的。&lt;/p&gt;
&lt;p&gt;在这里，我建议做 Web开发的新人们，HTML、
Javascript，CSS是实现一些Web功能的基础，一定要打好基础，当你会你记事本编辑这些代码的时候，恭喜你，你过关了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于语言的选择&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;语言之争都是大公司战斗的结果，套用一句管理上的话来说，把合适的的技术用在合适的地方。我们没有必要
跟风去不停地换新的语言，每种语言都有它的优劣，但在一般的项目中，很难看得出来。如果我们做一个只需要新闻发布功能的小公司网站，你说是Java
和.Net好，还是Asp和PHP好呢？在很多时候，Java与.Net、Asp与PHP是难分高下的，他们之间的差异或许是你一辈子也不需要用到，我们
范得着把自己拉入某一些阵营吗？&lt;/p&gt;
&lt;p&gt;当技术达到一定的水平之后，语言只不过是锦上添花了，武侠小说常无招胜有招就是这个道理。你现在让我换
成Java或者是PHP，我很快就可以做项目，因为我掌握的不是语言，而是对技术深层次的理解，现在Java阵营也好，.Net阵营也好，不管你说它们之
间有多少差别，但他们的本质始终没有变，掌握这些本质，换一种语言就好比换一辆车，只需要一个熟悉的过程和一个磨合期而已。&lt;/p&gt;
&lt;p&gt;最后，我建议新手们选择一种在你实质工作中需要的语言，坦坦实实地学好，不要中途“变节”，这样的成本太高了。.Net也好，Java也罢，只是一辆车而已，学好开
本田就会驾丰田。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于学习态度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;学习嘛，在学习的过程中自然会遇到一些问题，遇到
问题自然会想到求助。古人有云：礼下于人，必有所求，言下之意是有求于人，必要礼下于人。可是现在有些人不仅不礼下于人，反而还趾高气扬，仿佛谁欠着他似
的。我们老家有句俗话叫拜师学艺要吃二十四碗鼻涕，可见在学习过程中要受到多少的委屈。&lt;/p&gt;
&lt;p&gt;吃得苦中苦，方为人上人，做技术尤是如此。我以
前在学ASP的时候，同寝室有一哥们是学VB的，因为ASP也是用VBScript做为默认脚本，所以有很多问题请教他，他当是也是给了我不少的嘲笑，像
“这些简单的问题都还要问”之类的话我倒是听了不少。但到后我们一起学Delphi的时候，我就已经超过他了。&lt;/p&gt;
&lt;p&gt;新人们碰到问题的时候，
第一个想法就是想找人解决，当你去帮他解决的时候，他却去做其它事了，好像这个问题是需要你来解决的，下次出现同样的问题他还得找你。遇到问题最好的办法
是先排查问题，然后到互联网上查找问题的原因，这样你才不会忘记，不要忽略了互联网这个最好的老师。我以前在学ASP的时候，为了一个插入数据的问题，查
了一个星期，但这个问题我永远也忘记不了，再也不会范同样的错误。&lt;/p&gt;
&lt;p&gt;高手们一般都比较忙，虽然我不是高手，但我还是不原意在我写代码正酣
的时候，有人打断我的思路。先把问题记下来，趁机会问问高手，不要让他为你解决问题，你要的是一种解决问题的思路。公司常常有新人问我，这个地方出问题
了，怎么办？我便问他，你上网查了吗？不是我不愿意帮他，而是授人鱼不如授人以渔，我直接告诉他怎么做，那不是在帮他，那是我在害他，我只能是告诉他排错
的方法，解决问题的思路，否则他永远也不知道这个问题是怎么解决的，没有人会珍惜轻易得到的东西的。&lt;/p&gt;
&lt;p&gt;最后，我想给踏入这行的新人们一个
忠告，编程没有捷径可言，如果一定要找出一个捷径，那只有六个字——多看、多问、多写。&lt;/p&gt;
&lt;p&gt;来源：本文来自涂雅投稿，&lt;a class="reference external" href="http://iove.net/733/"&gt;原文网址&lt;/a&gt;，转载请保留此链接，否则视为侵权。&lt;/p&gt;
</content></entry><entry><title>CodeColorer插件的BUG</title><link href="https://magicalboy.com/codecolorer-bug.html" rel="alternate"></link><published>2010-04-25T01:49:00+08:00</published><updated>2010-04-25T01:49:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-25:/codecolorer-bug.html</id><summary type="html">&lt;p&gt;换了N多个代码语法高亮插件之后，发现CodeColorer比较适合这个主题，美中不足的是，CodeColorer竟然有JS错误的BUG，在IE和FF都有报错，插件列表页
/wp-admin/plugins.php&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_64&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;596&amp;quot;
caption=&amp;quot;Firebug下提示的错误信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/archives/codecolorer-bug.html/error_ff"&gt;&lt;img alt="CodeColorer_FF_Err" class="size-full wp-image-64" src="http://magicalboy.com/wp-content/uploads/2010/04/error_ff.png" style="width: 596px; height: 351px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_67&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;691&amp;quot;
caption=&amp;quot;IE8下提示错误信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/archives/codecolorer-bug.html/error_ie8"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-67" src="http://magicalboy.com/wp-content/uploads/2010/04/error_ie8.png" style="width: 691px; height: 272px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;出错的JS文件代码：/wp-content/plugins/codecolorer/js/quicktags.js&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(function($)&lt;/span&gt; {&amp;nbsp;&amp;nbsp; $.fn.codeColorerQuickTags = function(options) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; var codeTagIndex = &lt;span class="pre"&gt;-1;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* 出错原因：edButtons 未定义&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (var i …&lt;/tt&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;换了N多个代码语法高亮插件之后，发现CodeColorer比较适合这个主题，美中不足的是，CodeColorer竟然有JS错误的BUG，在IE和FF都有报错，插件列表页
/wp-admin/plugins.php&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_64&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;596&amp;quot;
caption=&amp;quot;Firebug下提示的错误信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/archives/codecolorer-bug.html/error_ff"&gt;&lt;img alt="CodeColorer_FF_Err" class="size-full wp-image-64" src="http://magicalboy.com/wp-content/uploads/2010/04/error_ff.png" style="width: 596px; height: 351px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_67&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;691&amp;quot;
caption=&amp;quot;IE8下提示错误信息&amp;quot;]&lt;a class="reference external" href="http://magicalboy.com/archives/codecolorer-bug.html/error_ie8"&gt;&lt;img alt="image1" class="alignnone size-full wp-image-67" src="http://magicalboy.com/wp-content/uploads/2010/04/error_ie8.png" style="width: 691px; height: 272px;" /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;出错的JS文件代码：/wp-content/plugins/codecolorer/js/quicktags.js&lt;/div&gt;
&lt;div class="line"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(function($)&lt;/span&gt; {&amp;nbsp;&amp;nbsp; $.fn.codeColorerQuickTags = function(options) {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; var codeTagIndex = &lt;span class="pre"&gt;-1;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* 出错原因：edButtons 未定义&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (var i = 0; i &amp;lt; edButtons.length; &lt;span class="pre"&gt;i++)&lt;/span&gt; {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if &lt;span class="pre"&gt;(edButtons[i].id&lt;/span&gt; == 'ed_code') {&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;edButtons[i].id&lt;/span&gt; = 'ed_cc';&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;edButtons[i].display&lt;/span&gt; = 'cc';&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;edButtons[i].tagStart&lt;/span&gt; = '';&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span class="pre"&gt;edButtons[i].tagEnd&lt;/span&gt; = &lt;span class="pre"&gt;'[/cc]';&lt;/span&gt;&lt;/tt&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;codeTagIndex = i;&lt;/div&gt;
&lt;div class="line"&gt;break;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;} */&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;var button = '';&lt;/div&gt;
&lt;div class="line"&gt;$(this).replaceWith(button);&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;$('#ed_cc').bind('click', insertCodeColorer);&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;function insertCodeColorer() {&lt;/div&gt;
&lt;div class="line"&gt;if (!edCheckOpenTags(codeTagIndex)) {&lt;/div&gt;
&lt;div class="line"&gt;var URL = prompt(codeColorerL10n.enterLanguage, '');&lt;/div&gt;
&lt;div class="line"&gt;if (URL) {&lt;/div&gt;
&lt;div class="line"&gt;/* edButtons 未定义&lt;/div&gt;
&lt;div class="line"&gt;edButtons[codeTagIndex].tagStart = '[cc lang=&amp;quot;' + URL + '&amp;quot;]'; */&lt;/div&gt;
&lt;div class="line"&gt;edInsertTag(edCanvas, codeTagIndex);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;} else {&lt;/div&gt;
&lt;div class="line"&gt;edInsertTag(edCanvas, codeTagIndex);&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;})(jQuery);&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;jQuery('#ed_code').codeColorerQuickTags();&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;按照上面那些修改就不会提示错误了，这可能是快速标签[cc]引起的，没深入了解。BTW，当然可以忽略这个小Bug，在前台浏览Blog是不会有什么问题的&lt;/p&gt;
</content></entry><entry><title>程序人生之始：初定目标职业技能</title><link href="https://magicalboy.com/initially-for-target-vocational-skills.html" rel="alternate"></link><published>2010-04-23T06:59:00+08:00</published><updated>2010-04-23T06:59:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-23:/initially-for-target-vocational-skills.html</id><summary type="html">&lt;p&gt;职业技能和目标&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;熟悉一两门高级语言（比如，Java、Python）和C/C++&lt;/li&gt;
&lt;li&gt;熟悉数据库SQL语言及操作&lt;/li&gt;
&lt;li&gt;熟悉操作系统Linux&lt;/li&gt;
&lt;li&gt;提高个人素质涵养，交际沟通能力，团队合作的Teamwork&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;p&gt;职业技能和目标&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;熟悉一两门高级语言（比如，Java、Python）和C/C++&lt;/li&gt;
&lt;li&gt;熟悉数据库SQL语言及操作&lt;/li&gt;
&lt;li&gt;熟悉操作系统Linux&lt;/li&gt;
&lt;li&gt;提高个人素质涵养，交际沟通能力，团队合作的Teamwork&lt;/li&gt;
&lt;/ol&gt;
</content></entry><entry><title>代码语法高亮显示插件</title><link href="https://magicalboy.com/codecolorer-for-wordpress.html" rel="alternate"></link><published>2010-04-22T01:26:00+08:00</published><updated>2010-04-22T01:26:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-22:/codecolorer-for-wordpress.html</id><summary type="html">&lt;div class="section" id="java-hellomidlet-java"&gt;
&lt;h2&gt;Java - HelloMidlet.java&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;import javax.microedition.lcdui.Display; import javax.microedition.lcdui.TextBox; import &lt;span class="pre"&gt;javax.microedition.midlet.*;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;public class HelloMidlet extends MIDlet {&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public HelloMidlet(){&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public void startApp() {&lt;/div&gt;
&lt;div class="line"&gt;String info = this.getAppProperty(&amp;quot;MIDlet-Vendor&amp;quot;) +
this.getAppProperty(&amp;quot;MIDlet-Jar-Size&amp;quot;)&lt;/div&gt;
&lt;div class="line"&gt;+ this.getAppProperty(&amp;quot;MIDlet-Description&amp;quot;) + &amp;quot;wtf&amp;quot;;&lt;/div&gt;
&lt;div class="line"&gt;// System.out.println(info);&lt;/div&gt;
&lt;div class="line"&gt;Display.getDisplay(this).setCurrent(&lt;/div&gt;
&lt;div class="line"&gt;new TextBox(&amp;quot;MIDlet属性 …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="java-hellomidlet-java"&gt;
&lt;h2&gt;Java - HelloMidlet.java&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;import javax.microedition.lcdui.Display; import javax.microedition.lcdui.TextBox; import &lt;span class="pre"&gt;javax.microedition.midlet.*;&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;public class HelloMidlet extends MIDlet {&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public HelloMidlet(){&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public void startApp() {&lt;/div&gt;
&lt;div class="line"&gt;String info = this.getAppProperty(&amp;quot;MIDlet-Vendor&amp;quot;) +
this.getAppProperty(&amp;quot;MIDlet-Jar-Size&amp;quot;)&lt;/div&gt;
&lt;div class="line"&gt;+ this.getAppProperty(&amp;quot;MIDlet-Description&amp;quot;) + &amp;quot;wtf&amp;quot;;&lt;/div&gt;
&lt;div class="line"&gt;// System.out.println(info);&lt;/div&gt;
&lt;div class="line"&gt;Display.getDisplay(this).setCurrent(&lt;/div&gt;
&lt;div class="line"&gt;new TextBox(&amp;quot;MIDlet属性&amp;quot;, info, 20, 0));&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public void pauseApp() {&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;public void destroyApp(boolean unconditional) {&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;Python&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;#! /usr/bin/env python &lt;span class="pre"&gt;#coding=utf-8&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;copyright (c) magicalboy(&lt;a class="reference external" href="mailto:cdlmagical&amp;#64;gmail.com"&gt;cdlmagical&amp;#64;gmail.com&lt;/a&gt;)&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This is a free software. It's destributed under the terms of GPL.&lt;/div&gt;
&lt;div class="line"&gt;You can use it to grab HTML documents begin with specified url.&lt;/div&gt;
&lt;div class="line"&gt;When you give a url, it'll first grab it, and parses all the links&lt;/div&gt;
&lt;div class="line"&gt;in the page, then grab them all. Enjoy it!&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;import os&lt;/div&gt;
&lt;div class="line"&gt;from os.path import isdir&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;def changefilepath(pathname):&lt;/div&gt;
&lt;div class="line"&gt;if(os.path.isdir(pathname)):&lt;/div&gt;
&lt;div class="line"&gt;for f in os.listdir(pathname):&lt;/div&gt;
&lt;div class="line"&gt;filename = pathname +''+f&lt;/div&gt;
&lt;div class="line"&gt;if(os.path.isdir(filename)):&lt;/div&gt;
&lt;div class="line"&gt;changefilepath(filename);&lt;/div&gt;
&lt;div class="line"&gt;else:&lt;/div&gt;
&lt;div class="line"&gt;updateURL(filename);&lt;/div&gt;
&lt;div class="line"&gt;else:&lt;/div&gt;
&lt;div class="line"&gt;updateURL(pathname);&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;def updateURL(pathname):&lt;/div&gt;
&lt;div class="line"&gt;suffix = pathname.split('#')[1]&lt;/div&gt;
&lt;div class="line"&gt;id = pathname.split('#')[0]&lt;/div&gt;
&lt;div class="line"&gt;if suffix == &amp;quot;st.html&amp;quot;:&lt;/div&gt;
&lt;div class="line"&gt;print id&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;changefilepath(r&amp;quot;F:studydata&amp;quot;)&lt;/div&gt;
&lt;div class="line"&gt;注意：codecolorer有些小Bug，它将我的反斜杠转义后再显示，所以要显示上面的文件路径，必须在code标签里面这样写：filename
= pathname +''+f&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql"&gt;
&lt;h2&gt;MySQL&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;CREATE USER &lt;span class="pre"&gt;'magicalboy'&amp;#64;'localhost'&lt;/span&gt; IDENTIFIED BY 'magicalboypw'&lt;/tt&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="c"&gt;
&lt;h2&gt;C&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;#include&lt;/tt&gt;&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;int main(void)&lt;/div&gt;
&lt;div class="line"&gt;{&lt;/div&gt;
&lt;div class="line"&gt;printf(&amp;quot;hello world!n&amp;quot;);&lt;/div&gt;
&lt;div class="line"&gt;return 0;&lt;/div&gt;
&lt;div class="line"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;支持的语言详见：&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://wordpress.org/extend/plugins/codecolorer/other_notes/"&gt;http://wordpress.org/extend/plugins/codecolorer/other_notes/&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://wordpress.org/extend/plugins/codecolorer/installation/"&gt;http://wordpress.org/extend/plugins/codecolorer/installation/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title>sad but true, what is the date...</title><link href="https://magicalboy.com/sad-but-true-what-is-the-date.html" rel="alternate"></link><published>2010-04-21T00:44:00+08:00</published><updated>2010-04-21T00:44:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-21:/sad-but-true-what-is-the-date.html</id><summary type="html">&lt;p&gt;sad but true, what is the date tody&lt;/p&gt;
</summary><content type="html">&lt;p&gt;sad but true, what is the date tody&lt;/p&gt;
</content></entry><entry><title>MagicWiki正式开通上线了</title><link href="https://magicalboy.com/magicwiki-online.html" rel="alternate"></link><published>2010-04-18T13:04:00+08:00</published><updated>2010-04-18T13:04:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-18:/magicwiki-online.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wiki/"&gt;MagicWiki&lt;/a&gt;知识共享平台已正式开通，详情请访问&lt;a class="reference external" href="http://magicalboy.com/wiki/"&gt;http://magicalboy.com/wiki/&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://magicalboy.com/wiki/"&gt;MagicWiki&lt;/a&gt;知识共享平台已正式开通，详情请访问&lt;a class="reference external" href="http://magicalboy.com/wiki/"&gt;http://magicalboy.com/wiki/&lt;/a&gt;&lt;/p&gt;
</content></entry><entry><title>Hello world！</title><link href="https://magicalboy.com/hello-world-2.html" rel="alternate"></link><published>2010-04-18T06:47:00+08:00</published><updated>2010-04-18T06:47:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-04-18:/hello-world-2.html</id><summary type="html">&lt;p&gt;欢迎访问MAGICALBOY的博客。这虽然是系统自动生成的演示文章。我已经编辑它，开始我的博客，和大家分享我的程序人生！&lt;/p&gt;
</summary><content type="html">&lt;p&gt;欢迎访问MAGICALBOY的博客。这虽然是系统自动生成的演示文章。我已经编辑它，开始我的博客，和大家分享我的程序人生！&lt;/p&gt;
</content></entry><entry><title>Flex learning~~http://livedocs...</title><link href="https://magicalboy.com/flex-learninghttplivedocs.html" rel="alternate"></link><published>2010-03-16T00:56:00+08:00</published><updated>2010-03-16T00:56:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-03-16:/flex-learninghttplivedocs.html</id><summary type="html">&lt;p&gt;Flex learning~~http://livedocs.adobe.com/flex/3/html/index.html&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Flex learning~~http://livedocs.adobe.com/flex/3/html/index.html&lt;/p&gt;
</content></entry><entry><title>Hello, magicalboy!</title><link href="https://magicalboy.com/hello-magicalboy.html" rel="alternate"></link><published>2010-03-12T07:24:00+08:00</published><updated>2010-03-12T07:24:00+08:00</updated><author><name>donly</name></author><id>tag:magicalboy.com,2010-03-12:/hello-magicalboy.html</id><summary type="html">&lt;p&gt;Hello, magicalboy!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Hello, magicalboy!&lt;/p&gt;
</content></entry></feed>