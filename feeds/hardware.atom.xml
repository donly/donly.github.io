<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MAG's Note - Hardware</title><link href="https://magicalboy.com/" rel="alternate"></link><link href="https://magicalboy.com//feeds/hardware.atom.xml" rel="self"></link><id>https://magicalboy.com/</id><updated>2016-05-24T10:05:00+08:00</updated><entry><title>树莓派 GPIO 模拟器：GPIOSim</title><link href="https://magicalboy.com/raspberry-pi-gpio-sim.html" rel="alternate"></link><published>2016-05-24T10:05:00+08:00</published><updated>2016-05-24T10:05:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-24:/raspberry-pi-gpio-sim.html</id><summary type="html">&lt;p&gt;GPIOSim 是一个树莓派 GPIO 模拟器，目前支持 Linux 和 OS X。它能够在 PC 上进行开发调试使用 RPi.GPIO 模块编写的树莓派应用。&lt;/p&gt;
&lt;p&gt;这是一个开源项目：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github：&lt;a class="reference external" href="https://github.com/bobvann/GPIOSim"&gt;bobvann/GPIOSim: Raspberry Pi GPIO simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;博客主页：&lt;a class="reference external" href="http://bobvann.noip.me/gpiosim-raspberry-pi-gpio-simulator-for-linux-os-x/"&gt;GPIOSim: Raspberry Pi GPIO Simulator for Linux / OS X - Bob Vann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 上安装使用&lt;/h2&gt;
&lt;p&gt;运行环境：&lt;strong&gt;OS X 10.11.5，Python 3.5&lt;/strong&gt;
运行效果：&lt;/p&gt;
&lt;img alt="run on OS X" src="images/raspberry_pi_gpiosim_run_on_osx.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;安装 …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;GPIOSim 是一个树莓派 GPIO 模拟器，目前支持 Linux 和 OS X。它能够在 PC 上进行开发调试使用 RPi.GPIO 模块编写的树莓派应用。&lt;/p&gt;
&lt;p&gt;这是一个开源项目：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Github：&lt;a class="reference external" href="https://github.com/bobvann/GPIOSim"&gt;bobvann/GPIOSim: Raspberry Pi GPIO simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;博客主页：&lt;a class="reference external" href="http://bobvann.noip.me/gpiosim-raspberry-pi-gpio-simulator-for-linux-os-x/"&gt;GPIOSim: Raspberry Pi GPIO Simulator for Linux / OS X - Bob Vann&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="os-x"&gt;
&lt;h2&gt;在 OS X 上安装使用&lt;/h2&gt;
&lt;p&gt;运行环境：&lt;strong&gt;OS X 10.11.5，Python 3.5&lt;/strong&gt;
运行效果：&lt;/p&gt;
&lt;img alt="run on OS X" src="images/raspberry_pi_gpiosim_run_on_osx.png" /&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;安装&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;安装 Python 3.x，可使用 Homebrew 工具安装。&lt;/li&gt;
&lt;li&gt;安装 Pillow，(Python 2.x 上叫 PIL)：&lt;em&gt;$ pip3.5 install Pillow&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;安装 configparser&lt;/li&gt;
&lt;li&gt;&lt;em&gt;git clone&lt;/em&gt; 源码并进入目录，执行 &lt;em&gt;$ python3.5 GPIOSim.py&lt;/em&gt;，即可运行 GUI。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;示例&lt;/h3&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RPi.GPIO&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;GPIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="c1"&gt;# BOARD编号方式，基于插座引脚编号&lt;/span&gt;
&lt;span class="c1"&gt;#GPIO.setmode(GPIO.BOARD)&lt;/span&gt;
&lt;span class="c1"&gt;# 输出模式&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#GPIO.cleanup()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;可以看到上面的代码有两行被注释的代码，因为这是一个小项目，没有模拟实现完整的 RPi.GPIO 模块。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="GPIO"></category><category term="RaspberryPi"></category><category term="Python"></category></entry><entry><title>树莓派 GPIO 入门</title><link href="https://magicalboy.com/raspberry-pi-gpio.html" rel="alternate"></link><published>2016-05-23T18:05:00+08:00</published><updated>2016-05-23T18:05:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-23:/raspberry-pi-gpio.html</id><summary type="html">&lt;p&gt;GPIO，通用型之输入输出（General Purpose I/O）的简称。树莓派内核中已经编译自带了 GPIO 的驱动，可以直接使用第三方函数库来进行编程。&lt;/p&gt;
&lt;p&gt;比较常用的第三方函数库有：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python GPIO&lt;/li&gt;
&lt;li&gt;wiringPi&lt;/li&gt;
&lt;li&gt;BCM2835 C Library&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="model-b-40-pin-gpio"&gt;
&lt;h2&gt;树莓派 3 Model B 的 40 Pin GPIO 编号&lt;/h2&gt;
&lt;img alt="树莓派 3 Model B 的 40 Pin GPIO" src="https://www.element14.com/community/servlet/JiveServlet/previewBody/73950-102-10-339300/pi3_gpio.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="gpio-led"&gt;
&lt;h2&gt;使用 GPIO 接口控制 LED 闪烁&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;硬件清单&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;树莓派 3 Model B x1。本人机子出自 Element14，GPIO 请参考上图。&lt;/li&gt;
&lt;li&gt;LED 发光二极管 x1。&lt;/li&gt;
&lt;li&gt;母头杜邦线 x2。这些材料在国内很容易买到的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;原理说明 …&lt;/h3&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;GPIO，通用型之输入输出（General Purpose I/O）的简称。树莓派内核中已经编译自带了 GPIO 的驱动，可以直接使用第三方函数库来进行编程。&lt;/p&gt;
&lt;p&gt;比较常用的第三方函数库有：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python GPIO&lt;/li&gt;
&lt;li&gt;wiringPi&lt;/li&gt;
&lt;li&gt;BCM2835 C Library&lt;/li&gt;
&lt;li&gt;Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="model-b-40-pin-gpio"&gt;
&lt;h2&gt;树莓派 3 Model B 的 40 Pin GPIO 编号&lt;/h2&gt;
&lt;img alt="树莓派 3 Model B 的 40 Pin GPIO" src="https://www.element14.com/community/servlet/JiveServlet/previewBody/73950-102-10-339300/pi3_gpio.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="gpio-led"&gt;
&lt;h2&gt;使用 GPIO 接口控制 LED 闪烁&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;硬件清单&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;树莓派 3 Model B x1。本人机子出自 Element14，GPIO 请参考上图。&lt;/li&gt;
&lt;li&gt;LED 发光二极管 x1。&lt;/li&gt;
&lt;li&gt;母头杜邦线 x2。这些材料在国内很容易买到的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;原理说明&lt;/h3&gt;
&lt;p&gt;LED 发光二极管有一长一短两根针脚。长的针脚接正极（GPIO 有 3.3V 或 5V 的高电平针脚输出），较短的针脚接 GND 形成电位差产生电流流动从而点亮 LED。
本示例没有直接连接正极端，而是连接到一个 GPIO 针脚上。最后通过程序控制 GPIO 口的电位高低状态即可控制LED的亮（GPIO口设置为高电平）或灭（GPIO口设置为低电平）。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;硬件连接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;面包版图&lt;/p&gt;
&lt;img alt="Use Raspberry pi 3 GPIO control LED to blink" src="images/raspberry_pi_3_gpio_led_bb.png" /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;PCB 连接图：&lt;/p&gt;
&lt;img alt="PCB diag" src="images/raspberry_pi_3_gpio_led_pcb.png" /&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;代码示例&lt;/h3&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# encoding: utf-8&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;RPi.GPIO&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;GPIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="c1"&gt;# 指定 GPIO 口的选定模式为 GPIO 引脚编号模式（而非主板编号模式）&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setmode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BCM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 指定 GPIO15（就是 LED 长针连接的 GPIO 针脚）的模式为输出模式&lt;/span&gt;
&lt;span class="c1"&gt;# 如果上面 GPIO 口的选定模式指定为主板模式的话，这里就应该指定8号而不是15号&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 循环10次&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 最后清理 GPIO 口&lt;/span&gt;
&lt;span class="n"&gt;GPIO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleanup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="GPIO"></category><category term="RaspberryPi"></category></entry></feed>