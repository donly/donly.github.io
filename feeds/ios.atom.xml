<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>MAG's Note - iOS</title><link href="https://magicalboy.com/" rel="alternate"></link><link href="https://magicalboy.com/feeds/ios.atom.xml" rel="self"></link><id>https://magicalboy.com/</id><updated>2018-01-25T15:00:00+08:00</updated><subtitle>关注移动应用开发</subtitle><entry><title>iOS 11.3 Developer beta</title><link href="https://magicalboy.com/ios-11-3-beta-update.html" rel="alternate"></link><published>2018-01-25T15:00:00+08:00</published><updated>2018-01-25T15:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2018-01-25:/ios-11-3-beta-update.html</id><summary type="html">&lt;p&gt;这是 iOS 11.3 的第一个 &lt;code&gt;beta&lt;/code&gt; 版本，更新后版本号为：&lt;code&gt;11.3 (15E5167f)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配套的 Xcode 9.3 beta 版本号为 &lt;code&gt;9Q98q&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;主要更新亮点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Message on iCloud&lt;/li&gt;
&lt;li&gt;iBooks 改名为 Books&lt;/li&gt;
&lt;li&gt;AirPlay 2&lt;/li&gt;
&lt;li&gt;Business Chat&lt;/li&gt;
&lt;li&gt;ARKit 1.5&lt;/li&gt;
&lt;li&gt;Health App 增加 Health Records&lt;/li&gt;
&lt;li&gt;iPhone X 新增4个 “动话表情”&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;这是 iOS 11.3 的第一个 &lt;code&gt;beta&lt;/code&gt; 版本，更新后版本号为：&lt;code&gt;11.3 (15E5167f)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;配套的 Xcode 9.3 beta 版本号为 &lt;code&gt;9Q98q&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;主要更新亮点有：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Message on iCloud&lt;/li&gt;
&lt;li&gt;iBooks 改名为 Books&lt;/li&gt;
&lt;li&gt;AirPlay 2&lt;/li&gt;
&lt;li&gt;Business Chat&lt;/li&gt;
&lt;li&gt;ARKit 1.5&lt;/li&gt;
&lt;li&gt;Health App 增加 Health Records&lt;/li&gt;
&lt;li&gt;iPhone X 新增4个 “动话表情”&lt;/li&gt;
&lt;/ul&gt;
</content><category term="apple"></category></entry><entry><title>macOS Hight Sierra Security Update</title><link href="https://magicalboy.com/macos-hight-sierra-security-update.html" rel="alternate"></link><published>2017-11-30T10:30:00+08:00</published><updated>2017-11-30T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-30:/macos-hight-sierra-security-update.html</id><summary type="html">&lt;p&gt;Apple 最新版本的系统 macOS Hight Sierra 被暴出 &lt;strong&gt;严重安全漏洞&lt;/strong&gt;，即使是小学生也能轻易以管理员身份登录陌生人的Mac。具体描述为：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
macOS Sierra 以及之前的旧版本并没有这个 bug，但所有的 macOS High Sierra 都会受这一漏洞影响，在打开 Mac 到登陆界面或者进入系统偏好设置里修改用户群组管理、安全隐私等选项时，用户名输入 “root” 密码填空，然后多试几次 Return 按钮就能顺利登陆。
&lt;/pre&gt;
刚好有同学过来借宿，不知道我的&lt;del&gt;小秘密以及相关&lt;/del&gt;隐私暴光了没。&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;亡羊补牢，打上 &lt;code&gt;2017-001&lt;/code&gt; 安全补丁。&lt;/p&gt;
&lt;p&gt;建议将自动更新打开，关闭访客户账户等提高安全性。&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;Apple 最新版本的系统 macOS Hight Sierra 被暴出 &lt;strong&gt;严重安全漏洞&lt;/strong&gt;，即使是小学生也能轻易以管理员身份登录陌生人的Mac。具体描述为：&lt;/p&gt;
&lt;pre class="literal-block"&gt;
macOS Sierra 以及之前的旧版本并没有这个 bug，但所有的 macOS High Sierra 都会受这一漏洞影响，在打开 Mac 到登陆界面或者进入系统偏好设置里修改用户群组管理、安全隐私等选项时，用户名输入 “root” 密码填空，然后多试几次 Return 按钮就能顺利登陆。
&lt;/pre&gt;
刚好有同学过来借宿，不知道我的&lt;del&gt;小秘密以及相关&lt;/del&gt;隐私暴光了没。&lt;div class="section" id="id1"&gt;
&lt;h2&gt;解决方法&lt;/h2&gt;
&lt;p&gt;亡羊补牢，打上 &lt;code&gt;2017-001&lt;/code&gt; 安全补丁。&lt;/p&gt;
&lt;p&gt;建议将自动更新打开，关闭访客户账户等提高安全性。&lt;/p&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>iOS 11.2 Developer beta</title><link href="https://magicalboy.com/ios-11-2-beta-update.html" rel="alternate"></link><published>2017-11-28T10:30:00+08:00</published><updated>2017-11-30T11:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-28:/ios-11-2-beta-update.html</id><summary type="html">&lt;p&gt;iOS 11.2 更新至 &lt;code&gt;beta 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11.2 (15C5111a)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 新增了自动更新订阅功能，新增类 &lt;code&gt;SKProductDiscount&lt;/code&gt; 和 &lt;code&gt;SKProductSubscriptionPeriod&lt;/code&gt;，以及 &lt;cite&gt;SKProduct&lt;/cite&gt; 类属性 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936878-introductoryprice"&gt;introductoryPrice&lt;/a&gt; 和 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936884-subscriptionperiod"&gt;subscriptionPeriod&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 Beta 相关的 Bugs 修复和已知问题列表&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_17_2017/iOS_11.2_beta_4_Release_Notes.pdf"&gt;iOS 11.2 beta 4 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_28_2017/iOS_11.2_beta_5_Release_Notes.pdf"&gt;iOS 11.2 beta 5 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;p&gt;iOS 11.2 更新至 &lt;code&gt;beta 5&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11.2 (15C5111a)&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 新增了自动更新订阅功能，新增类 &lt;code&gt;SKProductDiscount&lt;/code&gt; 和 &lt;code&gt;SKProductSubscriptionPeriod&lt;/code&gt;，以及 &lt;cite&gt;SKProduct&lt;/cite&gt; 类属性 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936878-introductoryprice"&gt;introductoryPrice&lt;/a&gt; 和 &lt;a class="reference external" href="https://developer.apple.com/documentation/storekit/skproduct/2936884-subscriptionperiod"&gt;subscriptionPeriod&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11.2 Beta 相关的 Bugs 修复和已知问题列表&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_17_2017/iOS_11.2_beta_4_Release_Notes.pdf"&gt;iOS 11.2 beta 4 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://download.developer.apple.com/Documentation/Beta_Release_Notes_Nov_28_2017/iOS_11.2_beta_5_Release_Notes.pdf"&gt;iOS 11.2 beta 5 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content><category term="apple"></category></entry><entry><title>Cocoa Auto Layout</title><link href="https://magicalboy.com/cocoa-auto-layout.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/cocoa-auto-layout.html</id><summary type="html">&lt;p&gt;Auto Layout 是 iOS 6.0 和 Xcode 4.5 的新特性。&lt;/p&gt;
&lt;p&gt;使用 Cocoa Auto Layout 系统为用户界面元素定义布局约束，其中约束（Constraints）表示用户界面控件之间的关系，比如 “这些视图从头至尾排列”。&lt;/p&gt;
&lt;p&gt;Cocoa Auto Layout 让用户来定义界面元素的布局规则。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;视图之间的约束表示&lt;/h2&gt;
&lt;/div&gt;
</summary><content type="html">&lt;p&gt;Auto Layout 是 iOS 6.0 和 Xcode 4.5 的新特性。&lt;/p&gt;
&lt;p&gt;使用 Cocoa Auto Layout 系统为用户界面元素定义布局约束，其中约束（Constraints）表示用户界面控件之间的关系，比如 “这些视图从头至尾排列”。&lt;/p&gt;
&lt;p&gt;Cocoa Auto Layout 让用户来定义界面元素的布局规则。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;视图之间的约束表示&lt;/h2&gt;
&lt;/div&gt;
</content><category term="cocoa"></category><category term="iOS"></category><category term="auto layout"></category></entry><entry><title>iOS 设计模式: Model View Controller</title><link href="https://magicalboy.com/ios-design-patterns-model-view-controller.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-design-patterns-model-view-controller.html</id><summary type="html">&lt;p&gt;MVC 设计模式的主要目的是可重用性，能够在不同的视图中使用重用同一个模型。&lt;/p&gt;
&lt;img alt="Model View Controller (MVC) Design Pattern" src="static/images/mvc.jpg" /&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;模型 Model&lt;/h2&gt;
&lt;p&gt;模型包含了数据。例如，一个 Book 对象包含有关书的信息：标题和作者。此外，Book 对象能够被其它对象关联，建立一对一或一对多的关系。例如 Category 对象可包含多个 Book 对象。模型中的数据可以来源于本地数据库或文件，也可以从网络请求回来。&lt;/p&gt;
&lt;p&gt;模型不应该直接和视图打交道，应该在需要的时候访问通过控制器来访问。&lt;/p&gt;
&lt;p&gt;在 iOS 中，模型通常是 NSObject 或 NSManagedObject的子类。任何模型对象包括一些实例变量和对应的 getter/setter 方法。大多数面向对象编程语言都有提供封装的机制。在 iOS 中使用 &amp;#64;property 封装，和可选的 &amp;#64;synthesize 自动生成 getter/setter 方法。以 Book 模型为例 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;MVC 设计模式的主要目的是可重用性，能够在不同的视图中使用重用同一个模型。&lt;/p&gt;
&lt;img alt="Model View Controller (MVC) Design Pattern" src="static/images/mvc.jpg" /&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;模型 Model&lt;/h2&gt;
&lt;p&gt;模型包含了数据。例如，一个 Book 对象包含有关书的信息：标题和作者。此外，Book 对象能够被其它对象关联，建立一对一或一对多的关系。例如 Category 对象可包含多个 Book 对象。模型中的数据可以来源于本地数据库或文件，也可以从网络请求回来。&lt;/p&gt;
&lt;p&gt;模型不应该直接和视图打交道，应该在需要的时候访问通过控制器来访问。&lt;/p&gt;
&lt;p&gt;在 iOS 中，模型通常是 NSObject 或 NSManagedObject的子类。任何模型对象包括一些实例变量和对应的 getter/setter 方法。大多数面向对象编程语言都有提供封装的机制。在 iOS 中使用 &amp;#64;property 封装，和可选的 &amp;#64;synthesize 自动生成 getter/setter 方法。以 Book 模型为例：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt; : &lt;span class="bp"&gt;NSObject&lt;/span&gt;

&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;// 会自动生成 _title 实例变量&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="c1"&gt;// 会自动生成 _author 实例变量&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;视图 View&lt;/h2&gt;
&lt;p&gt;视图显示模型的一些信息。例如，视图能够显示书本列表。尽管视图不会直接从模型中获取信息，而是使用控制器来协调什么时候该显示什么。&lt;/p&gt;
&lt;p&gt;在 iOS 中，大多数视图继承自 UIView，UIView 能够捕捉触摸事件和绘图显示。UIKit 框架包括各种绘制系统标准界面元素的类，如表格，按钮，输入框，滑动条等。以下是一个书的列表：&lt;/p&gt;
&lt;img alt="a list of books" src="static/images/book_list_table.jpg" /&gt;
&lt;/div&gt;
&lt;div class="section" id="controller"&gt;
&lt;h2&gt;控制器 Controller&lt;/h2&gt;
&lt;p&gt;控制器能够访问模型的数据，然后将它们显示到视图。同一个控制器可以作为几个视图和模型之间的中间体。控制器监控着视图上的用户交互，并将产生的变化与模型通信。反过来，也可将由控制器观察到模型中的更改，呈现到视图上。&lt;/p&gt;
&lt;p&gt;控制器是多数应用所依赖的。在 iOS 中，控制器作为 UIViewController 的子类管理着视图。它也负责 委托（delegate） 消息和 目标－动作（target-action）消息的响应。以下是 UITableViewController （ UIViewController 的子类）如何管理 UITableView 的图解：&lt;/p&gt;
&lt;img alt="UITableViewController manages a UITableView" src="static/images/tableviewcontroller_using_mvc.jpg" /&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://blog.teamtreehouse.com/ios-design-patterns-model-view-controller-part-3"&gt;iOS Design Patterns: Model View Controller&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="design pattern"></category></entry><entry><title>iOS Frameworks</title><link href="https://magicalboy.com/ios-frameworks.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-frameworks.html</id><summary type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 的架构是分层的&lt;/h2&gt;
&lt;img alt="Layers of iOS" class="align-left" src="http://developer.apple.com/library/ios/documentation/miscellaneous/conceptual/iphoneostechoverview/Art/SystemLayers_2x.png" style="width: 366px; height: 202px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frameworks"&gt;
&lt;h2&gt;Frameworks&lt;/h2&gt;
&lt;p&gt;iOS 提供了一套框架，将 iOS 应用程序的技术，服务和功能结合了起来。&lt;/p&gt;
&lt;/div&gt;
</summary><content type="html">&lt;div class="section" id="ios"&gt;
&lt;h2&gt;iOS 的架构是分层的&lt;/h2&gt;
&lt;img alt="Layers of iOS" class="align-left" src="http://developer.apple.com/library/ios/documentation/miscellaneous/conceptual/iphoneostechoverview/Art/SystemLayers_2x.png" style="width: 366px; height: 202px;" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frameworks"&gt;
&lt;h2&gt;Frameworks&lt;/h2&gt;
&lt;p&gt;iOS 提供了一套框架，将 iOS 应用程序的技术，服务和功能结合了起来。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category></entry><entry><title>iOS 国际化/本地化</title><link href="https://magicalboy.com/ios-i18n.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-i18n.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;获取首选语言&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 获取首选语言&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;preferredLanguages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;preferredLanguages&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// 另一种方式&lt;/span&gt;
&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;AppleLanguages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;languages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果是一样的，都是数组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;zh-Hans&amp;quot;&lt;/span&gt;,
en,
fr,
de,
ja,
...
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组中第一个就是当前选择的语言，名称符合 ISO 639-1 代码表。同时需要注意区域和语言是独立不同的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;两者有什么不同，请看这：&lt;a class="reference external" href="http://stackoverflow.com/questions/7872356/what-is-the-difference-between-nslocale-preferredlanguages-and-nsuserdefault"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;苹果开发者官网专题：&lt;a class="reference external" href="http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPInternational/Articles/ChoosingLocalizations.html"&gt;Internationalization Programming Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;获取当前地区&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;currentLocale&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;localeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="nl"&gt;displayNameForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NSLocaleIdentifier&lt;/span&gt;
                                         &lt;span class="nl"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="n"&gt;localeIdentifier …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;获取首选语言&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// 获取首选语言&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;preferredLanguages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;preferredLanguages&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

&lt;span class="c1"&gt;// 另一种方式&lt;/span&gt;
&lt;span class="bp"&gt;NSArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;languages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSUserDefaults&lt;/span&gt; &lt;span class="n"&gt;standardUserDefaults&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;objectForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;AppleLanguages&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;languages:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;languages&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果是一样的，都是数组：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;zh-Hans&amp;quot;&lt;/span&gt;,
en,
fr,
de,
ja,
...
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;数组中第一个就是当前选择的语言，名称符合 ISO 639-1 代码表。同时需要注意区域和语言是独立不同的。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;两者有什么不同，请看这：&lt;a class="reference external" href="http://stackoverflow.com/questions/7872356/what-is-the-difference-between-nslocale-preferredlanguages-and-nsuserdefault"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;苹果开发者官网专题：&lt;a class="reference external" href="http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPInternational/Articles/ChoosingLocalizations.html"&gt;Internationalization Programming Topics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;获取当前地区&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSLocale&lt;/span&gt; &lt;span class="n"&gt;currentLocale&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;NSString&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;localeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="nl"&gt;displayNameForKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;NSLocaleIdentifier&lt;/span&gt;
                                         &lt;span class="nl"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="n"&gt;locale&lt;/span&gt; &lt;span class="n"&gt;localeIdentifier&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;localeName:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;localeName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="i18n"></category></entry><entry><title>iOS 支持矩阵</title><link href="https://magicalboy.com/ios-support-matrix.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-support-matrix.html</id><summary type="html">&lt;img alt="iOS Support Matrix" src="images/ios_support_matrix.png" /&gt;
</summary><content type="html">&lt;img alt="iOS Support Matrix" src="images/ios_support_matrix.png" /&gt;
</content><category term="iOS"></category><category term="support"></category></entry><entry><title>iOS 多线程学习</title><link href="https://magicalboy.com/ios-thread.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/ios-thread.html</id><summary type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id9"&gt;基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsthread" id="id10"&gt;NSThread&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id11"&gt;创建和启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id12"&gt;线程同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id13"&gt;线程交互&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsoperation" id="id14"&gt;NSOperation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id15"&gt;并发执行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id16"&gt;非并发执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gcd" id="id17"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;线程概念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#run-loops" id="id19"&gt;Run Loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;基础知识&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;并发和并行。从技术角度来看，并发是程序的属性，而并行运作是机器的属性。并行和并发是两种分开的概念。作为程序员，你不能保证你的代码会在能并行执行你的代码的机器上运行。然而，你可以设计你的代码，让它使用并发操作。&lt;/p&gt;
&lt;p&gt;主要术语：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;任务&lt;/strong&gt;：一项需要完成的，简单，单一的任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程&lt;/strong&gt;：一种由操作系统提供的机制，允许多条指令在一个单独的程序中同时执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程&lt;/strong&gt;：一段可执行的代码，它可以由几个线程组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程，线程和任务之间的关系：&lt;/p&gt;
&lt;img alt="进程，线程和任务" src="images/Process_Thread_Task.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在iPhone和Mac中，线程功能是由POSIX Threads API（或者pthreads）提供的，它是操作系统的一部分。这是相当底层的东西，你会发现很容易犯错；也许线程最坏的地方就是那些极难被发现的错误吧！&lt;/p&gt;
&lt;p&gt;Foundation 框架包含了一个叫做NSThread的类 …&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目录&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id2" id="id9"&gt;基础知识&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsthread" id="id10"&gt;NSThread&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id3" id="id11"&gt;创建和启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id4" id="id12"&gt;线程同步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id5" id="id13"&gt;线程交互&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#nsoperation" id="id14"&gt;NSOperation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id6" id="id15"&gt;并发执行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id7" id="id16"&gt;非并发执行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gcd" id="id17"&gt;GCD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#id8" id="id18"&gt;线程概念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#run-loops" id="id19"&gt;Run Loops&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;基础知识&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;并发和并行。从技术角度来看，并发是程序的属性，而并行运作是机器的属性。并行和并发是两种分开的概念。作为程序员，你不能保证你的代码会在能并行执行你的代码的机器上运行。然而，你可以设计你的代码，让它使用并发操作。&lt;/p&gt;
&lt;p&gt;主要术语：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;任务&lt;/strong&gt;：一项需要完成的，简单，单一的任务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;线程&lt;/strong&gt;：一种由操作系统提供的机制，允许多条指令在一个单独的程序中同时执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程&lt;/strong&gt;：一段可执行的代码，它可以由几个线程组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进程，线程和任务之间的关系：&lt;/p&gt;
&lt;img alt="进程，线程和任务" src="images/Process_Thread_Task.png" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在iPhone和Mac中，线程功能是由POSIX Threads API（或者pthreads）提供的，它是操作系统的一部分。这是相当底层的东西，你会发现很容易犯错；也许线程最坏的地方就是那些极难被发现的错误吧！&lt;/p&gt;
&lt;p&gt;Foundation 框架包含了一个叫做NSThread的类，他更容易处理，但是使用NSThread管理多个线程仍然是件令人头疼的事情。NSOperation和NSOperationQueue是更高级别的类，他们大大简化了处理多个线程的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="nsthread"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id10"&gt;NSThread&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id11"&gt;创建和启动&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;看文档可以了解到，创建一个线程主要有两个方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// designated initializer&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;initWithTarget:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="nf"&gt;selector:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;selector&lt;/span&gt; &lt;span class="nf"&gt;object:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用以上两种方法创建的线程需要手动启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外还有一种比较特殊，就是使用所谓的 convenient method，这个方法可以直接生成一个线程并启动它，而且无需为线程的清理负责。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;detachNewThreadSelector:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;selector&lt;/span&gt; &lt;span class="nf"&gt;toTarget:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;target&lt;/span&gt; &lt;span class="nf"&gt;withObject:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id12"&gt;线程同步&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;想一下多个窗口同时售票的售票系统。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  AppDelegate.h&lt;/span&gt;
&lt;span class="c1"&gt;//  SellTicket&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  Created by Chan Donly on 13-1-6.&lt;/span&gt;
&lt;span class="c1"&gt;//  Copyright (c) 2013年 Diaoser. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;

&lt;span class="cp"&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;


&lt;span class="k"&gt;@interface&lt;/span&gt; &lt;span class="nc"&gt;AppDelegate&lt;/span&gt; : &lt;span class="bp"&gt;UIResponder&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="bp"&gt;UIApplicationDelegate&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="bp"&gt;NSCondition&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;UIWindow&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;类的实现：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  AppDelegate.m&lt;/span&gt;
&lt;span class="c1"&gt;//  SellTicket&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;//  Created by Chan Donly on 13-1-6.&lt;/span&gt;
&lt;span class="c1"&gt;//  Copyright (c) 2013年 Diaoser. All rights reserved.&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;

&lt;span class="cp"&gt;#import &amp;quot;AppDelegate.h&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;@implementation&lt;/span&gt; &lt;span class="nc"&gt;AppDelegate&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;dealloc&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_window&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;super&lt;/span&gt; &lt;span class="n"&gt;dealloc&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;application:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;UIApplication&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;application&lt;/span&gt; &lt;span class="nf"&gt;didFinishLaunchingWithOptions:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSDictionary&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;launchOptions&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="bp"&gt;UIWindow&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithFrame&lt;/span&gt;&lt;span class="p"&gt;:[[&lt;/span&gt;&lt;span class="bp"&gt;UIScreen&lt;/span&gt; &lt;span class="n"&gt;mainScreen&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="n"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// Override point for customization after application launch.&lt;/span&gt;

    &lt;span class="n"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// 锁对象&lt;/span&gt;
    &lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSCondition&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithTarget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="nl"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Thread-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadone&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="nl"&gt;initWithTarget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;object&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="nl"&gt;setName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;Thread-2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsThreadtwo&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;//[NSThread detachNewThreadSelector:@selector(run) toTarget:self withObject:nil];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="n"&gt;makeKeyAndVisible&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;YES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// 上锁&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="n"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tickets&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="nl"&gt;sleepForTimeInterval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;NSLog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;当前票数是:%d,售出:%d,线程名:%@&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSThread&lt;/span&gt; &lt;span class="n"&gt;currentThread&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="n"&gt;tickets&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// [ticketsCondition signal];&lt;/span&gt;
        &lt;span class="c1"&gt;// 解除锁&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ticketsCondition&lt;/span&gt; &lt;span class="n"&gt;unlock&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;当前票数是:100,售出:0,线程名:Thread-1
当前票数是:99,售出:1,线程名:Thread-2
当前票数是:98,售出:2,线程名:Thread-1
当前票数是:97,售出:3,线程名:Thread-2
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;线程交互&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;如在主线程中修改界面。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;performSelectorOnMainThread:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SEL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;aSelector&lt;/span&gt; &lt;span class="nf"&gt;withObject:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt; &lt;span class="nf"&gt;waitUntilDone:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;wait&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在本过程中，可能需要释放一些资源，则需要使用NSAutoreleasePool来进行管理。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;startTheBackgroundJob&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="bp"&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSAutoreleasePool&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// to do something in your thread job&lt;/span&gt;

    &lt;span class="p"&gt;...&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="nl"&gt;performSelectorOnMainThread&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;makeMyProgressBarMoving&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nl"&gt;withObject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nil&lt;/span&gt; &lt;span class="nl"&gt;waitUntilDone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;NO&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pool&lt;/span&gt; &lt;span class="k"&gt;release&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;如果某个ViewController里运行了一个Thread，Thread还没结束的时候，这个ViewController被Release了，结果会如何？&lt;/strong&gt;&lt;/p&gt;
&lt;p style="color:red;"&gt;经过的的测试，Thread 不结束，ViewController 一直保留，不会执行 dealloc 方法。&lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nsoperation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id14"&gt;NSOperation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NSoperation也是多线程的一种，NSopertaion有2种形式&lt;/p&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;并发执行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;并发执行你需要重载如下4个方法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;//执行任务主函数，线程运行的入口函数&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;//是否允许并发，返回YES，允许并发，返回NO不允许。默认返回NO&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isConcurrent&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isExecuting&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;//是否已经完成，这个必须要重载，不然放在放在NSOperationQueue里的NSOpertaion不能正常释放。&lt;/span&gt;
&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;BOOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;isFinished&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比如一个 TestNSOperation:NSoperaion 对象 testOperation 重载上述的4个方法，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;NSOperationQueue&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="bp"&gt;NSOperationQueue&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;autorelease&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="nl"&gt;addOperation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;testOperation&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;会自动调用 testOperation 里的 start 函数，如果需要多个 NSOperation, 你需要设置 queue 的一些属性，如果多个 NSOperation 之间又依赖关系，也可以设置，具体可以参考 &lt;a class="reference external" href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/NSOperation_class/Reference/Reference.html"&gt;API&lt;/a&gt; 文档。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;非并发执行&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;只需要重载这个 main 方法就可以了。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;-(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gcd"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;GCD&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;iOS 4.0+ 才支持。&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id18"&gt;线程概念&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="run-loops"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id19"&gt;Run Loops&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;一个 run loop 就是一个事件处理的循环，用来不停的调度工作以及处理输入事件。使用 run loop 的目的是让你的线程在有工作的时候忙于工作，而没工作的时候处于休眠状态。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="thread"></category></entry><entry><title>UIImage 使用</title><link href="https://magicalboy.com/uiimage.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/uiimage.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIImage_Class/Reference/Reference.html"&gt;UIImage Class Reference&lt;/a&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Inherits from&lt;/td&gt;
&lt;td&gt;NSObject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Framework&lt;/td&gt;
&lt;td&gt;/System/Library/Frameworks/UIKit.framework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Availability&lt;/td&gt;
&lt;td&gt;Available in iOS 2.0 and later.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="stretch"&gt;
&lt;h2&gt;Stretch&lt;/h2&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/IPNUm.png" /&gt;
&lt;p&gt;拉伸为&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/1skMj.png" /&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="nl"&gt;imageNamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;myImage.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// iOS 5 and obove.&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="bp"&gt;UIEdgeInsets&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a class="reference external" href="http://developer.apple.com/library/ios/#documentation/uikit/reference/UIImage_Class/Reference/Reference.html"&gt;UIImage Class Reference&lt;/a&gt;&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Inherits from&lt;/td&gt;
&lt;td&gt;NSObject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Framework&lt;/td&gt;
&lt;td&gt;/System/Library/Frameworks/UIKit.framework&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Availability&lt;/td&gt;
&lt;td&gt;Available in iOS 2.0 and later.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="stretch"&gt;
&lt;h2&gt;Stretch&lt;/h2&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/IPNUm.png" /&gt;
&lt;p&gt;拉伸为&lt;/p&gt;
&lt;img alt="" src="http://i.stack.imgur.com/1skMj.png" /&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="nl"&gt;imageNamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;@&amp;quot;myImage.png&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="bp"&gt;UIImage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;respondsToSelector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;@selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:)])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// iOS 5 and obove.&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="bp"&gt;UIEdgeInsets&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;newImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;originalImage&lt;/span&gt; &lt;span class="nl"&gt;stretchableImageWithLeftCapWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="nl"&gt;topCapHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A stretchable image is divided into 9 parts, if both leftCapWidth and topCapHeight are nonzero.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;leftCapWidth&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;-----&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;+--------------+&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;topCapHeight&lt;/span&gt;
&lt;span class="o"&gt;|-----+&lt;/span&gt;&lt;span class="err"&gt;·&lt;/span&gt;&lt;span class="o"&gt;+------|&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="o"&gt;|-----+&lt;/span&gt;&lt;span class="err"&gt;·&lt;/span&gt;&lt;span class="o"&gt;+------|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+--------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The central parts are always 1 px in size, and this is the part that is stretched, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;leftCapWidth&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;-----&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;+------------------+&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;B&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;topCapHeight&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;|-----+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+------|&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="o"&gt;|-----+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;+------|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;D&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+------------------+&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;-----&amp;lt;&lt;/span&gt;
    &lt;span class="n"&gt;stretched&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a &amp;quot;glass pill button&amp;quot;, you should fill the rounded border into the regions A, B, C and D above, and supply the radius of that pill into both the leftCapWidth and topCapHeight.&lt;/p&gt;
&lt;p&gt;Also, a stretchable image is not shrinkable. If you try to use stretchable images bigger than the buttons (or whatever else) you want to apply it to, they may be rendered incorrectly (especially on older iOSes).&lt;/p&gt;
&lt;p&gt;引用 &lt;a class="reference external" href="http://stackoverflow.com/questions/2924408/iphone-stretchableimagewithleftcapwidth-only-makes-ds"&gt;Stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="UIImage"></category><category term="iOS"></category></entry><entry><title>Xcode</title><link href="https://magicalboy.com/xcode.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/xcode.html</id><summary type="html">&lt;p&gt;Xcode 目前最新版本 &lt;a class="reference external" href="http://magicalboy.com/xcode-5-0/"&gt;Xcode 5.0&lt;/a&gt; ，支持 iPhone 5s, iOS 7 开发。&lt;/p&gt;
&lt;div class="section" id="what-s-new"&gt;
&lt;h2&gt;What's New&lt;/h2&gt;
&lt;p&gt;各个版本的 Xcode 新增功能说明。&lt;/p&gt;
&lt;div class="section" id="xcode-5-0-x"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;Help you design an app that looks gorgeous on iOS 7 or OS X Mavericks.&lt;/p&gt;
&lt;p&gt;WWDC地址：&lt;a class="reference external" href="https://developer.apple.com/wwdc/videos/?id=400"&gt;What’s New in Xcode 5&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;素材管理（Asset Management）：素材目录(Asset Catalogs)，后缀名为.xcassets …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Xcode 目前最新版本 &lt;a class="reference external" href="http://magicalboy.com/xcode-5-0/"&gt;Xcode 5.0&lt;/a&gt; ，支持 iPhone 5s, iOS 7 开发。&lt;/p&gt;
&lt;div class="section" id="what-s-new"&gt;
&lt;h2&gt;What's New&lt;/h2&gt;
&lt;p&gt;各个版本的 Xcode 新增功能说明。&lt;/p&gt;
&lt;div class="section" id="xcode-5-0-x"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;Help you design an app that looks gorgeous on iOS 7 or OS X Mavericks.&lt;/p&gt;
&lt;p&gt;WWDC地址：&lt;a class="reference external" href="https://developer.apple.com/wwdc/videos/?id=400"&gt;What’s New in Xcode 5&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;素材管理（Asset Management）：素材目录(Asset Catalogs)，后缀名为.xcassets，只能在 Xcode 5 中打开使用。通过它可以创建和使用每个图片的所有版本，而不需管理单独的文件，或不需要单独的文件命名约定。素材目录还可以创建图片的切片，使得图片可以在用户界面上动态拉伸过程中保持文件大小。可惜这个功能是 iOS7 才支持。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ios"&gt;
&lt;h2&gt;支持 iOS 情况&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Xcode 5.0.x&lt;/h3&gt;
&lt;p&gt;最低支持 iOS 4.3，但生成的 xib 在之前版本的 Xcode 中打不开。解决方法见：&lt;a class="reference external" href="http://stackoverflow.com/questions/17281073/cant-open-project-in-xcode-4-6-after-opening-in-5-0"&gt;Can't Open Project in Xcode 4.6 After Opening in 5.0&lt;/a&gt; 。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode-4-4-x"&gt;
&lt;h3&gt;Xcode 4.4.x&lt;/h3&gt;
&lt;p&gt;虽然可以支持到iOS 3.0，但不支持 nib，只能用代码实现 UI 编写。只有 Xcode 4.2.x 版本及以下才支持 nib。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode-4-5-x"&gt;
&lt;h3&gt;Xcode 4.5.x&lt;/h3&gt;
&lt;p&gt;不再支持 iOS 4.3 以下版本开发，即不再支持 armv 6。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;相关连接：&lt;a class="reference external" href="http://stackoverflow.com/questions/9961631/build-universal-app-for-ios-3-0-using-xcode-4-3-x-nskeyedunarchiver-exception"&gt;Build universal app for iOS 3.0 using Xcode 4.3.x - NSKeyedUnarchiver Exception - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="linker-flags"&gt;
&lt;h2&gt;Linker Flags&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;-all_load Loads all members of static archive libraries.&lt;/li&gt;
&lt;li&gt;-ObjC Loads all members of static archive libraries that implement an Objective-C class or category.&lt;/li&gt;
&lt;li&gt;-force_load (path_to_archive) Loads all members of the specified static archive library. Note: -all_load forces all members of all archives to be loaded. This option allows you to target a specific archive.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体请参考苹果Q&amp;amp;A文档：&lt;a class="reference external" href="https://developer.apple.com/library/mac/#qa/qa2006/qa1490.html"&gt;Building Objective-C static libraries with categories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StackOverflow：&lt;a class="reference external" href="http://stackoverflow.com/a/8179905"&gt;Objective-C categories in static library&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;启用 Xcode 编译版本自增功能&lt;/h2&gt;
&lt;p&gt;使用苹果自带的 agvtool 工具，方法见 &lt;a class="reference external" href="https://developer.apple.com/library/ios/qa/qa1827/_index.html"&gt;Automating Version and Build Numbers Using agvtool&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在 Xcode 项目中选中 Target，在Build Phases中新增一个 Run Script：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
agvtool next-version -all
&lt;/pre&gt;
&lt;p&gt;之后每 Build 一次 Bundle version 的号码就会自增一次。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>Xcode 7 清除多余的 Woking copies</title><link href="https://magicalboy.com/xcode-remove-working-copies.html" rel="alternate"></link><published>2017-11-23T15:54:43+08:00</published><updated>2017-11-23T15:54:43+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-11-23:/xcode-remove-working-copies.html</id><summary type="html">&lt;p&gt;Xcode 版本：Version 7.1 (7B91b)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;
由于项目从 SVN 切到 Git，所以在项目的 Source Control 里面的 Woking copies 里面有旧项目残留的 SVN。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;
删除 &lt;em&gt;ProjectName.xcworkspace &amp;gt; xcshareddata &amp;gt; ProjectName.xcscmblueprint&lt;/em&gt;，重启 Xcode。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/a/27535601"&gt;http://stackoverflow.com/a/27535601&lt;/a&gt;&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Xcode 版本：Version 7.1 (7B91b)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;
由于项目从 SVN 切到 Git，所以在项目的 Source Control 里面的 Woking copies 里面有旧项目残留的 SVN。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;
删除 &lt;em&gt;ProjectName.xcworkspace &amp;gt; xcshareddata &amp;gt; ProjectName.xcscmblueprint&lt;/em&gt;，重启 Xcode。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a class="reference external" href="http://stackoverflow.com/a/27535601"&gt;http://stackoverflow.com/a/27535601&lt;/a&gt;&lt;/p&gt;
</content><category term="iOS"></category><category term="Xcode"></category></entry><entry><title>iOS 11 Developer beta 2</title><link href="https://magicalboy.com/ios-11-beta-2-update.html" rel="alternate"></link><published>2017-06-22T10:30:00+08:00</published><updated>2017-06-22T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-06-22:/ios-11-beta-2-update.html</id><summary type="html">&lt;p&gt;iOS 11 更新至 beta 2。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11 (15A5304i)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Jun_21_2017/iOS_11_beta_2_Release_Notes.pdf"&gt;iOS 11 beta 2 Release Notes&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11 第一个 beta 版本问题还是很多的，而且部分 bug 还严重影响设备的正常使用。&lt;/p&gt;
&lt;p&gt;关于 iOS 11 的新特性请见 &lt;a class="reference external" href="https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS_11_0.html#//apple_ref/doc/uid/TP40017637-SW1"&gt;What's New in iOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本次更新主要亮点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;32 位应用程序将不会运行在 iOS 11 的未来版本上。（26402174）&lt;/li&gt;
&lt;li&gt;iOS 11 不再支持 armv7 或 armv7s（32位）。 如果 iOS 目标的 iOS 部署目标为 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;iOS 11 更新至 beta 2。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;11 (15A5304i)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Jun_21_2017/iOS_11_beta_2_Release_Notes.pdf"&gt;iOS 11 beta 2 Release Notes&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;iOS 11 第一个 beta 版本问题还是很多的，而且部分 bug 还严重影响设备的正常使用。&lt;/p&gt;
&lt;p&gt;关于 iOS 11 的新特性请见 &lt;a class="reference external" href="https://developer.apple.com/library/content/releasenotes/General/WhatsNewIniOS/Articles/iOS_11_0.html#//apple_ref/doc/uid/TP40017637-SW1"&gt;What's New in iOS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本次更新主要亮点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;32 位应用程序将不会运行在 iOS 11 的未来版本上。（26402174）&lt;/li&gt;
&lt;li&gt;iOS 11 不再支持 armv7 或 armv7s（32位）。 如果 iOS 目标的 iOS 部署目标为 11，则不会为 32 位构建。 默认情况下，针对早于11的iOS部署目标的iOS目标仍将生成32位。（32163517）&lt;/li&gt;
&lt;/ol&gt;
&lt;img alt="install on iPhone 6s plus" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-11-beta-2.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
</content><category term="apple"></category></entry><entry><title>iOS 10.3 正式版发布</title><link href="https://magicalboy.com/ios-10-3-release.html" rel="alternate"></link><published>2017-03-28T10:30:00+08:00</published><updated>2017-03-28T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-28:/ios-10-3-release.html</id><summary type="html">&lt;p&gt;今天苹果 iOS 10.3 正式版已经发布。版本号为：&lt;code&gt;10.3 (14E277)&lt;/code&gt;，对应的开发工具 Xcode 8.3 版本号为 8E162。&lt;/p&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.3 推出了包括使用“查找我的 iPhone”定位 AirPods 在内的全新功能，并提供了使用 Siri 进行支付、叫车以及与车载设备配合使用的更多途径。&lt;/p&gt;
&lt;p&gt;查找我的 iPhone&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看您 AirPods 的当前位置或最后已知位置&lt;/li&gt;
&lt;li&gt;在一侧或左右 AirPods 上同时播放声音，帮助您找到它们&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Siri&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持配合支付应用进行支付和检查账单状态&lt;/li&gt;
&lt;li&gt;支持配合叫车应用预约车辆&lt;/li&gt;
&lt;li&gt;支持配合车载应用检查油量及车锁状态，并可开灯和鸣喇叭&lt;/li&gt;
&lt;li&gt;支持印度超级板球联赛和国际板球理事会的板球运动比分和统计数据 …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;今天苹果 iOS 10.3 正式版已经发布。版本号为：&lt;code&gt;10.3 (14E277)&lt;/code&gt;，对应的开发工具 Xcode 8.3 版本号为 8E162。&lt;/p&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.3 推出了包括使用“查找我的 iPhone”定位 AirPods 在内的全新功能，并提供了使用 Siri 进行支付、叫车以及与车载设备配合使用的更多途径。&lt;/p&gt;
&lt;p&gt;查找我的 iPhone&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;查看您 AirPods 的当前位置或最后已知位置&lt;/li&gt;
&lt;li&gt;在一侧或左右 AirPods 上同时播放声音，帮助您找到它们&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Siri&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;支持配合支付应用进行支付和检查账单状态&lt;/li&gt;
&lt;li&gt;支持配合叫车应用预约车辆&lt;/li&gt;
&lt;li&gt;支持配合车载应用检查油量及车锁状态，并可开灯和鸣喇叭&lt;/li&gt;
&lt;li&gt;支持印度超级板球联赛和国际板球理事会的板球运动比分和统计数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CarPlay&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;状态栏增加了快捷键，方便访问上次使用的应用&lt;/li&gt;
&lt;li&gt;在 Apple Music 的“播放中”屏幕上即可访问“接着播放”及在播歌曲的专辑&lt;/li&gt;
&lt;li&gt;Apple Music 可提供每日精选播放列表和全新音乐类别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其它改进和修复&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;只需租借一次，即可在您所有设备上欣赏 iTunes 电影&lt;/li&gt;
&lt;li&gt;全新“设置”整合了 Apple ID 帐户信息、设置和设备，集中一处供您查看&lt;/li&gt;
&lt;li&gt;在“地图”中显示的当前温度上使用 3D Touch 即可查看逐时天气&lt;/li&gt;
&lt;li&gt;现可支持在“地图”中搜索“停车位置”&lt;/li&gt;
&lt;li&gt;“日历”新增了删除不必要的邀请并报告为垃圾信息的功能&lt;/li&gt;
&lt;li&gt;“家庭”应用现支持使用带开关和按钮的配件来触发场景&lt;/li&gt;
&lt;li&gt;“家庭”应用现支持检查配件电池电量状态&lt;/li&gt;
&lt;li&gt;“播客”现支持使用 3D Touch 和在“今日” Widget 中访问最近更新的节目&lt;/li&gt;
&lt;li&gt;“播客”中的节目或单集现可通过“信息”共享，并提供完整的播放支持&lt;/li&gt;
&lt;li&gt;修复了还原“位置与隐私”后，可能造成“地图”不显示当前位置的问题&lt;/li&gt;
&lt;li&gt;改进了 VoiceOver 针对“电话”、Safari 和“邮件”的稳定性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关 Apple 软件更新的安全性内容，请访问此网站：
&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-release.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;END&lt;/p&gt;
</content><category term="apple"></category></entry><entry><title>iOS 10.3 Beta 7</title><link href="https://magicalboy.com/ios-10-3-beta-7-update.html" rel="alternate"></link><published>2017-03-20T10:30:00+08:00</published><updated>2017-03-20T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-20:/ios-10-3-beta-7-update.html</id><summary type="html">&lt;p&gt;今天苹果前几天又发布了 iOS 10.3 Beta 7 更新，距离上个 Beta 版本才 3 天左右。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;10.3 (14E5277a)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_16_2017/iOS_10.3_beta_7_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 7&lt;/a&gt;。&lt;/p&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-7.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;iPhone 6s 更新后没有发现有什么明显不同。&lt;/p&gt;
&lt;p&gt;关于 10.3 Beta 补充几点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;10.3 Beta 版开机时按住 Home 和 音量加，可进入诊断模式。&lt;/li&gt;
&lt;li&gt;关机时少了中间的加载动画，即菊花。&lt;/li&gt;
&lt;li&gt;增加了对 32 位应用的警告提示：此应用在未来的 iOS 版本下将无法使用 …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;今天苹果前几天又发布了 iOS 10.3 Beta 7 更新，距离上个 Beta 版本才 3 天左右。&lt;/p&gt;
&lt;p&gt;更新后版本号为：&lt;code&gt;10.3 (14E5277a)&lt;/code&gt;，详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_16_2017/iOS_10.3_beta_7_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 7&lt;/a&gt;。&lt;/p&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-7.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;p&gt;iPhone 6s 更新后没有发现有什么明显不同。&lt;/p&gt;
&lt;p&gt;关于 10.3 Beta 补充几点：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;10.3 Beta 版开机时按住 Home 和 音量加，可进入诊断模式。&lt;/li&gt;
&lt;li&gt;关机时少了中间的加载动画，即菊花。&lt;/li&gt;
&lt;li&gt;增加了对 32 位应用的警告提示：此应用在未来的 iOS 版本下将无法使用。应用开发者需要更新此应用以改进兼容性。&lt;/li&gt;
&lt;/ol&gt;
</content><category term="apple"></category></entry><entry><title>iOS 10.3 Beta6</title><link href="https://magicalboy.com/ios-10-3-beta-install.html" rel="alternate"></link><published>2017-03-14T09:30:00+08:00</published><updated>2017-03-14T09:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2017-03-14:/ios-10-3-beta-install.html</id><summary type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.3 Beta6 更新。更新后版本号为：&lt;code&gt;10.3 (14E5273a)&lt;/code&gt;，更新如下：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;相对于上一个版本 Beta5，比较重要一点更新就是没有通过 MFi 认证的 Lightning 会提示：&lt;code&gt;此 iPhone 不支持此配件&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对系统底层进行了优化，当用户完成升级后，iOS 设备的文件系统也更新至了全新的苹果文件系统 &lt;code&gt;APFS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;苹果还计划在 iOS 10.3 中对 App Store 进行一些功能调整，允许开发者直接回复应用的评价，这点早已在 Google Play 实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_13_2017/iOS_10.3_beta_6_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 6&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="beta-ios"&gt;
&lt;h2&gt;安装 …&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.3 Beta6 更新。更新后版本号为：&lt;code&gt;10.3 (14E5273a)&lt;/code&gt;，更新如下：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;相对于上一个版本 Beta5，比较重要一点更新就是没有通过 MFi 认证的 Lightning 会提示：&lt;code&gt;此 iPhone 不支持此配件&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;对系统底层进行了优化，当用户完成升级后，iOS 设备的文件系统也更新至了全新的苹果文件系统 &lt;code&gt;APFS&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;苹果还计划在 iOS 10.3 中对 App Store 进行一些功能调整，允许开发者直接回复应用的评价，这点早已在 Google Play 实现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的更新日志见官网：&lt;a class="reference external" href="http://adcdownload.apple.com/Documentation/Beta_Release_Notes_Mar_13_2017/iOS_10.3_beta_6_Release_Notes.pdf"&gt;iOS Release Notes for iOS 10.3 beta 6&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="beta-ios"&gt;
&lt;h2&gt;安装 Beta 版 iOS&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;需要 iOS 开发者账号，登陆打开 &lt;a class="reference external" href="https://developer.apple.com/download/"&gt;https://developer.apple.com/download/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载 &lt;code&gt;iOS_10_beta_Configuration_Profile.mobileconfig&lt;/code&gt; 并发送到需要安装 Beta 版系统的 iOS 设备上，或者想办法让手机访问。&lt;/li&gt;
&lt;li&gt;在 iOS 设备上安装此描述文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img alt="install on iPhone 6s" class="align-left" src="https://github.com/donly/note/blob/master/images/ios-10-3-beta-install-01.PNG?raw=true" style="width: 320px; height: 568px;" /&gt;
&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;接着就可以通过系统设置-通用-软件更新来进行 OTA 升级安装了。&lt;/li&gt;
&lt;li&gt;如果想恢复到之前的系统，必须下载恢复固件，使用 iTunes 来还原。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最重要一点：&lt;strong&gt;更新之前请先做好备份，数据无价！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>Fastlane 插件开发</title><link href="https://magicalboy.com/fastlane_plugin.html" rel="alternate"></link><published>2016-12-21T09:39:00+08:00</published><updated>2016-12-21T09:39:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-21:/fastlane_plugin.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;能用计算机自动处理的事情，为什么还要手动重复劳动。&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="fastlane" src="https://docs.fastlane.tools/img/fastlane_text.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fastlane.tools/"&gt;Fastlane&lt;/a&gt; 是一个优秀的 CI 工具，移动开发少不了它。&lt;/p&gt;
&lt;blockquote&gt;
The easiest way to automate building and releasing your iOS and Android apps&lt;/blockquote&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;创建插件&lt;/h2&gt;
&lt;p&gt;详细步骤：&lt;a class="reference external" href="https://docs.fastlane.tools/plugins/create-plugin/"&gt;https://docs.fastlane.tools/plugins/create-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;开发&amp;amp;调试&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Autogenerated by fastlane&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Ensure this file is checked in to source control!&lt;/span&gt;

&lt;span class="c1"&gt;#gem &amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;~/Documents …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;能用计算机自动处理的事情，为什么还要手动重复劳动。&lt;/strong&gt;&lt;/p&gt;
&lt;img alt="fastlane" src="https://docs.fastlane.tools/img/fastlane_text.png" /&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fastlane.tools/"&gt;Fastlane&lt;/a&gt; 是一个优秀的 CI 工具，移动开发少不了它。&lt;/p&gt;
&lt;blockquote&gt;
The easiest way to automate building and releasing your iOS and Android apps&lt;/blockquote&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;创建插件&lt;/h2&gt;
&lt;p&gt;详细步骤：&lt;a class="reference external" href="https://docs.fastlane.tools/plugins/create-plugin/"&gt;https://docs.fastlane.tools/plugins/create-plugin/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;开发&amp;amp;调试&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Pluginfile&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Autogenerated by fastlane&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Ensure this file is checked in to source control!&lt;/span&gt;

&lt;span class="c1"&gt;#gem &amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fastlane-plugin-ftp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:path&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;~/Documents/Workspace/Project/fastlane-ftp-plugin&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;以开发模式安装插件：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ bundle install --with development
&lt;/pre&gt;&lt;/div&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;添加到项目 &lt;code&gt;Fastfile&lt;/code&gt; 的 Action 中&lt;/li&gt;
&lt;li&gt;使用详细输出模式运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bundle &lt;span class="nb"&gt;exec&lt;/span&gt; fastlane &lt;span class="o"&gt;[&lt;/span&gt;action&lt;span class="o"&gt;]&lt;/span&gt; --verbose
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Android"></category></entry><entry><title>iOS 10.2 更新</title><link href="https://magicalboy.com/ios-10-2-update.html" rel="alternate"></link><published>2016-12-15T09:30:00+08:00</published><updated>2016-12-15T09:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-12-15:/ios-10-2-update.html</id><summary type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.2 更新。更新后版本号为：10.2 (14C92)，上一个版本是 10.1.1 (14B100)。&lt;/p&gt;
&lt;p&gt;详细的更新日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 加入了多项新功能，其中包括“电视”应用（仅限美国），这款全新的聚合应用使用户可在一处观看多个视频应用内的电视节目和影片。经过重新设计的表情符号更加精美、细致，新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型。本更新还包括稳定性提升和错误修复。&lt;/p&gt;
&lt;p&gt;电视&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用“接着播放”来查看当前正在观看的影片和节目，并从暂停播放的位置继续观看&lt;/li&gt;
&lt;li&gt;在“立即观看”中获取新影片和电视节目的推荐&lt;/li&gt;
&lt;li&gt;在“商店”中发现新的应用和 iTunes 最新发布的内容&lt;/li&gt;
&lt;li&gt;访问“资料库”中的 …&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;今天苹果公司发布了 iOS 10.2 更新。更新后版本号为：10.2 (14C92)，上一个版本是 10.1.1 (14B100)。&lt;/p&gt;
&lt;p&gt;详细的更新日志：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 加入了多项新功能，其中包括“电视”应用（仅限美国），这款全新的聚合应用使用户可在一处观看多个视频应用内的电视节目和影片。经过重新设计的表情符号更加精美、细致，新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型。本更新还包括稳定性提升和错误修复。&lt;/p&gt;
&lt;p&gt;电视&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;使用“接着播放”来查看当前正在观看的影片和节目，并从暂停播放的位置继续观看&lt;/li&gt;
&lt;li&gt;在“立即观看”中获取新影片和电视节目的推荐&lt;/li&gt;
&lt;li&gt;在“商店”中发现新的应用和 iTunes 最新发布的内容&lt;/li&gt;
&lt;li&gt;访问“资料库”中的 iTunes 已购项目和租借项目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;表情符号&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;经过重新设计的表情符号更加精美、细致&lt;/li&gt;
&lt;li&gt;新增了 100 多个表情符号，包括表情、食物、动物、运动和职业等各类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;照片&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;提高了 Live Photo 的防抖动功能并带来了更快的帧速率&lt;/li&gt;
&lt;li&gt;提高了在“人物”相簿中，对同一人物的类似照片进行分组的准确性&lt;/li&gt;
&lt;li&gt;修复了“回忆”可能基于屏幕快照、白板或回执的照片生成回忆的问题&lt;/li&gt;
&lt;li&gt;修复了 iPhone 7 Plus 上从“相机胶卷”切回后，摄像头仍然放大对焦的问题&lt;/li&gt;
&lt;li&gt;对 RAW 数码相机的更多支持&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;信息&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;在“信息”中新增了爱心和欢庆全屏幕效果&lt;/li&gt;
&lt;li&gt;修复了“信息”中键盘有时无法显示的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;音乐&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;向上轻扫“播放中”屏幕可更加轻松地访问“随机播放”、“重复播放”和“接着播放”&lt;/li&gt;
&lt;li&gt;在“音乐资料库”中选取如何排序播放列表、专辑和歌曲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;News&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;存储供稍后阅读的报道现会在新的“已存储”部分中显示&lt;/li&gt;
&lt;li&gt;订阅频道的最佳付费报道现将在“为你推荐”的专属版块中显示&lt;/li&gt;
&lt;li&gt;现在前往下一篇报道更加简单，只需在阅读时向左轻扫或轻点“下一则报道”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;邮件&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;修复了在“邮件”中将邮件移到文件夹后，“移动”表单仍然显示的问题&lt;/li&gt;
&lt;li&gt;解决了在“邮件”中长按无法激活拷贝和粘贴的问题&lt;/li&gt;
&lt;li&gt;修复了删除“邮件”会话后，可能选择错误邮件的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;辅助功能&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;VoiceOver 支持 BraillePen14&lt;/li&gt;
&lt;li&gt;修复了使用 VoiceOver 时，盲文表格可能意外切换的问题&lt;/li&gt;
&lt;li&gt;修复了 VoiceOver 用户有时无法使用 Siri 优化语音的问题&lt;/li&gt;
&lt;li&gt;修复了 VoiceOver 用户无法对列表中项目进行重新排列的问题&lt;/li&gt;
&lt;li&gt;修复了“切换控制”有时无法删除语音留言的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他功能改进和错误修复&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;增加了对 HomeKit 配件的通知支持，其中包括窗帘传感器、人体传感器、动作传感器、门窗传感器、烟雾传感器、一氧化碳传感器和漏水传感器&lt;/li&gt;
&lt;li&gt;增加了 HomeKit 配件有软件更新时的通知支持&lt;/li&gt;
&lt;li&gt;提高了蓝牙的性能以及与第三方配件的连接性&lt;/li&gt;
&lt;li&gt;修复了可能导致 FaceTime 通话参与者无法对焦的问题&lt;/li&gt;
&lt;li&gt;修复了可能导致 FaceTime 通话以错误的宽高比和方向显示的问题&lt;/li&gt;
&lt;li&gt;修复了部分 Visual Voicemail 无法完成播放的问题&lt;/li&gt;
&lt;li&gt;修复了 Safari 阅读器打开文章时可能显示空白页面的问题&lt;/li&gt;
&lt;li&gt;修复了将“阅读列表”中的项目标记为已读后，可能导致 Safari 意外退出的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关 Apple 软件更新安全性内容的信息，请访问此网站：
&lt;a class="reference external" href="https://support.apple.com/zh-cn/HT201222"&gt;https://support.apple.com/zh-cn/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;英文版更新日志&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;iOS 10.2 introduces new features including the TV app (US Only), a new and unified experience for accessing your TV shows and movies across multiple video apps. Emoji have been beautifully redesigned to reveal even more detail and over 100 new emoji have been added including new faces, food, animals, sports, and professions. This update also includes stability improvements and bug fixes.&lt;/p&gt;
&lt;p&gt;TV&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use Up Next to see the movies and shows you’re currently watching and pick up where you left off&lt;/li&gt;
&lt;li&gt;Get recommendations for new movies and TV shows in Watch Now&lt;/li&gt;
&lt;li&gt;Discover new apps and the latest iTunes releases in the Store&lt;/li&gt;
&lt;li&gt;Access the Library for your iTunes purchases and rentals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Emoji&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Beautifully redesigned emoji that reveal even more detail&lt;/li&gt;
&lt;li&gt;Over 100 new emoji including new faces, food, animals, sports, and professions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Photos&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Improves stabilization and delivers faster frame rate for Live Photos&lt;/li&gt;
&lt;li&gt;Improves accuracy of groupings of similar photos of the same person in the People album&lt;/li&gt;
&lt;li&gt;Fixes an issue where Memories might generate a memory from photos of screenshots, whiteboards or receipts&lt;/li&gt;
&lt;li&gt;Fixes an issue where the camera would stay zoomed in after switching back from the Camera Roll on iPhone 7 Plus&lt;/li&gt;
&lt;li&gt;Additional support for RAW digital cameras&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Messages&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds new love and celebration full screen effects in Messages&lt;/li&gt;
&lt;li&gt;Fixes an issue that sometimes prevented the keyboard from displaying in Messages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Music&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Swipe up the Now Playing screen to more easily access Shuffle, Repeat and Up Next&lt;/li&gt;
&lt;li&gt;Choose how to sort Playlists, Albums, and Songs in Library&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;News&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Stories you’ve saved for later now appear the new Saved section&lt;/li&gt;
&lt;li&gt;The best paid stories from channels you subscribe to will now appear in a dedicated section in For You&lt;/li&gt;
&lt;li&gt;It’s now easier than ever to get to the next story, just swipe left or tap Next Story while reading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mail&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fixes an issue that caused the Move sheet to persist after filing a Mail message&lt;/li&gt;
&lt;li&gt;Addresses an issue with long press activating copy and paste in Mail&lt;/li&gt;
&lt;li&gt;Fixes an issue in which the wrong message would be selected after deleting a Mail conversation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Accessibility&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds BraillePen14 support to VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where the braille table could switch unexpectedly with VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where sometimes Siri enhanced voices were unavailable to VoiceOver&lt;/li&gt;
&lt;li&gt;Fixes an issue where VoiceOver users could not re-order items in lists&lt;/li&gt;
&lt;li&gt;Fixes an issue where Switch Control was sometimes unable to delete Voicemails&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other improvements and fixes&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Adds notification support for HomeKit accessories including window coverings, occupancy, motion, door/window, smoke, carbon monoxide, and water leak sensors&lt;/li&gt;
&lt;li&gt;Adds notification support for HomeKit accessories when software updates are available to HomeKit accessories&lt;/li&gt;
&lt;li&gt;Improves Bluetooth performance and connectivity with 3rd party accessories&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause FaceTime participants to appear out of focus&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause FaceTime calls to appear with incorrect aspect ratio and orientation&lt;/li&gt;
&lt;li&gt;Fixes an issue that prevented some Visual Voicemail from completing playback&lt;/li&gt;
&lt;li&gt;Fixes a Safari Reader issue that could cause articles to open as empty pages&lt;/li&gt;
&lt;li&gt;Fixes an issue that could cause Safari to quit unexpectedly after marking an item as read in Reading List&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For information on the security content of Apple software updates, please visit this website:
&lt;a class="reference external" href="https://support.apple.com/HT201222"&gt;https://support.apple.com/HT201222&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</content><category term="apple"></category></entry><entry><title>Swift 中的 Lazy 初始化</title><link href="https://magicalboy.com/lazy_load_with_swift.html" rel="alternate"></link><published>2016-10-29T00:00:00+08:00</published><updated>2016-10-29T00:00:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-10-29:/lazy_load_with_swift.html</id><summary type="html">&lt;p&gt;Lazy 初始化技术早在 Objective C 时代经常被使用，是一种用来延时创建一些比较消耗资源的对象的技术。&lt;/p&gt;
&lt;p&gt;这种技术在 iOS 开发里面很有用，确保只有在需要使用某些资源的时候才开始分配内存。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;老的方式&lt;/h2&gt;
&lt;p&gt;这是在 Objective C 里面的写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;players&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swift"&gt;
&lt;h2&gt;Swift 新方式&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简单，就一句话！&lt;/p&gt;
&lt;p&gt;需要注意的是，声明 &lt;code&gt;lazy&lt;/code&gt; 变量必须用 &lt;code&gt;var&lt;/code&gt; 关键字，不能使用 &lt;code&gt;let&lt;/code&gt;。因为常量对象初始化完成的时候必须有一个初始值。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;Closure&lt;/code&gt; 定义 …&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Lazy 初始化技术早在 Objective C 时代经常被使用，是一种用来延时创建一些比较消耗资源的对象的技术。&lt;/p&gt;
&lt;p&gt;这种技术在 iOS 开发里面很有用，确保只有在需要使用某些资源的时候才开始分配内存。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;老的方式&lt;/h2&gt;
&lt;p&gt;这是在 Objective C 里面的写法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;nonatomic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;strong&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;players&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_players&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="bp"&gt;NSMutableArray&lt;/span&gt; &lt;span class="n"&gt;alloc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;_players&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="swift"&gt;
&lt;h2&gt;Swift 新方式&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非常简单，就一句话！&lt;/p&gt;
&lt;p&gt;需要注意的是，声明 &lt;code&gt;lazy&lt;/code&gt; 变量必须用 &lt;code&gt;var&lt;/code&gt; 关键字，不能使用 &lt;code&gt;let&lt;/code&gt;。因为常量对象初始化完成的时候必须有一个初始值。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;Closure&lt;/code&gt; 定义 lazy 属性：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;temporaryPlayers&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;
    &lt;span class="n"&gt;temporaryPlayers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;temporaryPlayers&lt;/span&gt;
&lt;span class="p"&gt;}()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用实例方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或类方法：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;lazy&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TestClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;func&lt;/span&gt; &lt;span class="n"&gt;initialPlayers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;players&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;John Doe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;players&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;很明显，一般情况下使用 Closure 方式创建是最简单的，能够一目了然。&lt;/p&gt;
&lt;p&gt;本文翻译并修改自 &lt;a class="reference external" href="http://mikebuss.com/2014/06/22/lazy-initialization-swift/"&gt;Lazy Initialization with Swift&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="Swift"></category></entry><entry><title>苹果发布会视频下载</title><link href="https://magicalboy.com/apple-event-download.html" rel="alternate"></link><published>2016-09-08T16:30:00+08:00</published><updated>2016-09-08T16:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-09-08:/apple-event-download.html</id><summary type="html">&lt;p&gt;苹果的发布会通常在中国北京时间凌晨一点。如果因为睡觉错过了想回顾，除了在官网在线回看，还可以在 Youtube 或其他网站上观看。&lt;/p&gt;
&lt;p&gt;如果想下载完整版回来收藏，可以使用 VLC 或 ffmpeg 工具。&lt;/p&gt;
&lt;p&gt;比如，使用 ffmpeg 下载苹果九月发布会命令：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ ffmpeg -i &lt;span class="s2"&gt;&amp;quot;http://p.events-delivery.apple.com.edgesuite.net/1609lijbsdfvoihbadfvohbsdfvljhb/vod/8500/8500_vod.m3u8&amp;quot;&lt;/span&gt; -c copy apple.ts
&lt;/pre&gt;
&lt;p&gt;提示：1080p 的 m3u8 流地址可以复制视频地址分析得到。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;苹果的发布会通常在中国北京时间凌晨一点。如果因为睡觉错过了想回顾，除了在官网在线回看，还可以在 Youtube 或其他网站上观看。&lt;/p&gt;
&lt;p&gt;如果想下载完整版回来收藏，可以使用 VLC 或 ffmpeg 工具。&lt;/p&gt;
&lt;p&gt;比如，使用 ffmpeg 下载苹果九月发布会命令：&lt;/p&gt;
&lt;pre class="code shell literal-block"&gt;
$ ffmpeg -i &lt;span class="s2"&gt;&amp;quot;http://p.events-delivery.apple.com.edgesuite.net/1609lijbsdfvoihbadfvohbsdfvljhb/vod/8500/8500_vod.m3u8&amp;quot;&lt;/span&gt; -c copy apple.ts
&lt;/pre&gt;
&lt;p&gt;提示：1080p 的 m3u8 流地址可以复制视频地址分析得到。&lt;/p&gt;
</content><category term="apple"></category></entry><entry><title>iOS 固件信息 API</title><link href="https://magicalboy.com/ios-firmware-api.html" rel="alternate"></link><published>2016-08-31T11:30:00+08:00</published><updated>2016-08-31T11:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-08-31:/ios-firmware-api.html</id><summary type="html">&lt;p&gt;收藏几个有意思的第三方 API，主要获取固件信息，实时的 Apple TSS 服务状态：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ineal.me/tss/docs"&gt;Real time status of every iOS firmware currently being signed by Apple's TSS server.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ios.icj.me/docs/"&gt;IPSW Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;p&gt;收藏几个有意思的第三方 API，主要获取固件信息，实时的 Apple TSS 服务状态：&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ineal.me/tss/docs"&gt;Real time status of every iOS firmware currently being signed by Apple's TSS server.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.ios.icj.me/docs/"&gt;IPSW Downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content><category term="iOS"></category><category term="crack"></category></entry><entry><title>苹果九月发布会</title><link href="https://magicalboy.com/apple-event-2016-september.html" rel="alternate"></link><published>2016-08-31T00:30:00+08:00</published><updated>2016-08-31T00:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-08-31:/apple-event-2016-september.html</id><summary type="html">&lt;img alt="Apple Event" src="images/hero_image_large.jpg" /&gt;
&lt;p&gt;中国北京时间为8日凌晨1点。&lt;/p&gt;
&lt;p&gt;可以在线看直播，有即时字幕，流畅度提升越来越明显。&lt;/p&gt;
&lt;blockquote&gt;
Requirements: Live streaming uses Apple’s HTTP Live Streaming (HLS) technology. HLS requires an iPhone, iPad, or iPod touch with Safari on iOS 7.0 or later, a Mac with Safari 6.0.5 or later on OS X v10.8.5 or later, or a …&lt;/blockquote&gt;</summary><content type="html">&lt;img alt="Apple Event" src="images/hero_image_large.jpg" /&gt;
&lt;p&gt;中国北京时间为8日凌晨1点。&lt;/p&gt;
&lt;p&gt;可以在线看直播，有即时字幕，流畅度提升越来越明显。&lt;/p&gt;
&lt;blockquote&gt;
Requirements: Live streaming uses Apple’s HTTP Live Streaming (HLS) technology. HLS requires an iPhone, iPad, or iPod touch with Safari on iOS 7.0 or later, a Mac with Safari 6.0.5 or later on OS X v10.8.5 or later, or a PC with Microsoft Edge on Windows 10. Streaming via Apple TV requires an Apple TV (2nd or 3rd generation) with software 6.2 or later or an Apple TV (4th generation).&lt;/blockquote&gt;
</content><category term="apple"></category></entry><entry><title>xctool 使用</title><link href="https://magicalboy.com/xctool-usage.html" rel="alternate"></link><published>2016-07-06T10:30:00+08:00</published><updated>2016-07-06T10:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-07-06:/xctool-usage.html</id><summary type="html">&lt;p&gt;xctool 可以理解为 xcodebuild 的增强版，特别有利于可持续集成。xctool 由 Facebook 开发维护，项目地址 &lt;a class="reference external" href="https://github.com/facebook/xctool"&gt;https://github.com/facebook/xctool&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装 xctool&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.7.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.7.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.7 …&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;xctool 可以理解为 xcodebuild 的增强版，特别有利于可持续集成。xctool 由 Facebook 开发维护，项目地址 &lt;a class="reference external" href="https://github.com/facebook/xctool"&gt;https://github.com/facebook/xctool&lt;/a&gt;。&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;安装 xctool&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.7.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.7.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.7: &lt;span class="m"&gt;20&lt;/span&gt; files, &lt;span class="m"&gt;2&lt;/span&gt;.2M
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;如果安装的不是最新版本，则升级&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew update
Updated Homebrew from c3096f39 to dde20cd8.
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Migrating Homebrew to v0.9.9
...
&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; Cleaning up /Library/Caches/Homebrew...
...
Removing: /Library/Caches/Homebrew/xctool-0.2.7.el_capitan.bottle.tar.gz... &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;650&lt;/span&gt;.4K&lt;span class="o"&gt;)&lt;/span&gt;

$ brew upgrade &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Upgrading &lt;span class="m"&gt;1&lt;/span&gt; outdated package, with result:
xctool &lt;span class="m"&gt;0&lt;/span&gt;.2.9
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Upgrading &lt;span class="nv"&gt;xctool&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Downloading https://homebrew.bintray.com/bottles/xctool-0.2.9.el_capitan.bottle.tar.gz
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&amp;gt; Pouring xctool-0.2.9.el_capitan.bottle.tar.gz
🍺  /usr/local/Cellar/xctool/0.2.9: &lt;span class="m"&gt;21&lt;/span&gt; files, &lt;span class="m"&gt;2&lt;/span&gt;.9M
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;xctool 的命令和参考选项大部分基于 xcodebuild，大多数情况下两者可以互换使用，但 xctool 会有更漂亮的输出。更多请查看帮助命令 &lt;cite&gt;$xctool -help&lt;/cite&gt;。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Test，对指定的 scheme 进行编译和运行测试&lt;/li&gt;
&lt;li&gt;Building Tests，只编译测试，不运行&lt;/li&gt;
&lt;li&gt;Running Tests，不需要再编译，直接运行测试&lt;/li&gt;
&lt;li&gt;Parallelizing Test Runs，并行地进行单元测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可见 xctool 比较侧重于测试，对于编译可能不会对未来的 Xcode 版本更新。编译项目建议使用 xcodebuild, xcpretty 或 xcbuild。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="faq"&gt;
&lt;h2&gt;FAQ&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;DVTAssertions: ASSERTION FAILURE：
原因是安装了旧版本，可见安装前 update 一下是个必须的好习惯。&lt;/li&gt;
&lt;li&gt;依然报错：NSInternalInconsistencyException', reason: 'Platform 'iphoneos' is not yet supported.
解决：&lt;a class="reference external" href="https://github.com/facebook/xctool/issues/692"&gt;https://github.com/facebook/xctool/issues/692&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Travis CI: Code Sign error:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/travis-ci/travis-ci/issues/3047"&gt;https://github.com/travis-ci/travis-ci/issues/3047&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/travis-ci/travis-ci/issues/3986"&gt;https://github.com/travis-ci/travis-ci/issues/3986&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="CI"></category></entry><entry><title>破解 Asset Catalog</title><link href="https://magicalboy.com/crack-asset-catalog.html" rel="alternate"></link><published>2016-05-24T11:30:00+08:00</published><updated>2016-05-24T11:30:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2016-05-24:/crack-asset-catalog.html</id><summary type="html">&lt;p&gt;Asset Catalog 是 Xcode 5 引入的一个新的图片管理方式，支持矢量图，这样设计师不需要再切 &amp;#64;2x, &amp;#64;3x 等多套图标，提高效率。&lt;/p&gt;
&lt;p&gt;使用了 Asset Catalog 的 App 在发布的时候，Xcode 会为这些图片资源打包成 &lt;strong&gt;Assets.car&lt;/strong&gt; 这样的文件，而且无法直接打开。&lt;/p&gt;
&lt;div class="section" id="assets-car"&gt;
&lt;h2&gt;提取 Assets.car 图片&lt;/h2&gt;
&lt;p&gt;使用开源的 &lt;a class="reference external" href="https://github.com/steventroughtonsmith/cartool"&gt;cartool&lt;/a&gt; 工具提取 &lt;em&gt;.car&lt;/em&gt; 文件中的资源。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;clone 源码。&lt;/li&gt;
&lt;li&gt;编译，生成 &lt;em&gt;cartool&lt;/em&gt; 工具。&lt;/li&gt;
&lt;li&gt;使用 &lt;em&gt;cartool&lt;/em&gt; 破解 &lt;em&gt;.car&lt;/em&gt; 文件中的资源&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ ./cartool &amp;lt;.car 文件的路径&amp;gt; &amp;lt;解压后的文件路径&amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就可以获取 &lt;em&gt;Assets …&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Asset Catalog 是 Xcode 5 引入的一个新的图片管理方式，支持矢量图，这样设计师不需要再切 &amp;#64;2x, &amp;#64;3x 等多套图标，提高效率。&lt;/p&gt;
&lt;p&gt;使用了 Asset Catalog 的 App 在发布的时候，Xcode 会为这些图片资源打包成 &lt;strong&gt;Assets.car&lt;/strong&gt; 这样的文件，而且无法直接打开。&lt;/p&gt;
&lt;div class="section" id="assets-car"&gt;
&lt;h2&gt;提取 Assets.car 图片&lt;/h2&gt;
&lt;p&gt;使用开源的 &lt;a class="reference external" href="https://github.com/steventroughtonsmith/cartool"&gt;cartool&lt;/a&gt; 工具提取 &lt;em&gt;.car&lt;/em&gt; 文件中的资源。&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;clone 源码。&lt;/li&gt;
&lt;li&gt;编译，生成 &lt;em&gt;cartool&lt;/em&gt; 工具。&lt;/li&gt;
&lt;li&gt;使用 &lt;em&gt;cartool&lt;/em&gt; 破解 &lt;em&gt;.car&lt;/em&gt; 文件中的资源&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code shell literal-block"&gt;
$ ./cartool &amp;lt;.car 文件的路径&amp;gt; &amp;lt;解压后的文件路径&amp;gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就可以获取 &lt;em&gt;Assets.car&lt;/em&gt; 中的素材了。由于这个工具已经差不多 &lt;strong&gt;3年&lt;/strong&gt; 没有更新，不支持 &lt;em&gt;&amp;#64;3x&lt;/em&gt; 图的导出。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ios-images-extractor"&gt;
&lt;h2&gt;iOS-Images-Extractor&lt;/h2&gt;
&lt;p&gt;另一个 macOS 工具，&lt;a class="reference external" href="https://github.com/devcxm/iOS-Images-Extractor"&gt;https://github.com/devcxm/iOS-Images-Extractor&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;声明&lt;/h2&gt;
&lt;p&gt;由于素材等资源版权问题，本文仅作为学习目的，请切勿用于商业用途。&lt;/p&gt;
&lt;/div&gt;
</content><category term="iOS"></category><category term="crack"></category></entry><entry><title>CocoaPods 使用</title><link href="https://magicalboy.com/cocoapods-usage.html" rel="alternate"></link><published>2015-05-30T10:02:00+08:00</published><updated>2015-05-30T10:02:00+08:00</updated><author><name>Don</name></author><id>tag:magicalboy.com,2015-05-30:/cocoapods-usage.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://cocoapods.org/"&gt;CocoaPods&lt;/a&gt; 是 Objective-C 和 Swift 项目的依赖管理平台，而且已经拥有庞大的库，帮助我们优雅地扩大项目规模。&lt;/p&gt;
&lt;p&gt;后来又出了一个 &lt;a class="reference external" href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;，使用 Swift 实现的一个更简单的 Cocoa 依赖管理工具。由于 Carthage 仅支持动态 framework，所以必须要求 iOS 8 以及以上才能够使用，所以，这个以后再了解。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="os-x-yosemite"&gt;
&lt;h2&gt;OS X Yosemite 上安装&lt;/h2&gt;
&lt;p&gt;使用 gem 安装：&lt;em&gt;$ sudo gem install cocoapods&lt;/em&gt;
前提是你已经安装好了 Gem — 一个 &lt;strong&gt;复杂&lt;/strong&gt; 的 Ruby 语言包管理器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode"&gt;
&lt;h2&gt;在 Xcode 项目中使用&lt;/h2&gt;
&lt;p&gt;很简单，在项目根目录新建一个 &lt;em&gt;Podfile …&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://cocoapods.org/"&gt;CocoaPods&lt;/a&gt; 是 Objective-C 和 Swift 项目的依赖管理平台，而且已经拥有庞大的库，帮助我们优雅地扩大项目规模。&lt;/p&gt;
&lt;p&gt;后来又出了一个 &lt;a class="reference external" href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;，使用 Swift 实现的一个更简单的 Cocoa 依赖管理工具。由于 Carthage 仅支持动态 framework，所以必须要求 iOS 8 以及以上才能够使用，所以，这个以后再了解。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="os-x-yosemite"&gt;
&lt;h2&gt;OS X Yosemite 上安装&lt;/h2&gt;
&lt;p&gt;使用 gem 安装：&lt;em&gt;$ sudo gem install cocoapods&lt;/em&gt;
前提是你已经安装好了 Gem — 一个 &lt;strong&gt;复杂&lt;/strong&gt; 的 Ruby 语言包管理器。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="xcode"&gt;
&lt;h2&gt;在 Xcode 项目中使用&lt;/h2&gt;
&lt;p&gt;很简单，在项目根目录新建一个 &lt;em&gt;Podfile&lt;/em&gt; 的纯文本文件，加上自己需要的库（可以先查找，比如 &lt;em&gt;pod search AFNetworking&lt;/em&gt;）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;platform :ios, &lt;span class="s1"&gt;&amp;#39;8.0&amp;#39;&lt;/span&gt;
use_frameworks!

target &lt;span class="s1"&gt;&amp;#39;MyApp&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;AFNetworking&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.5&amp;#39;&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;ORStackView&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.0&amp;#39;&lt;/span&gt;
  pod &lt;span class="s1"&gt;&amp;#39;SwiftyJSON&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;~&amp;gt; 2.1&amp;#39;&lt;/span&gt;
end
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后执行 &lt;em&gt;$ pod install&lt;/em&gt;。
安装完成后，注意打开的是项目的 workspace 文件：&lt;em&gt;$ open App.xcworkspace&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;最后，直接在代码里使用：&lt;em&gt;#import &amp;lt;Reachability/Reachability.h&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pod"&gt;
&lt;h2&gt;创建自己的 Pod&lt;/h2&gt;
&lt;p&gt;在实际项目中，我们会经常修改第三方框架的代码。或者直接共享自己的作品。方法也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pod spec create Peanut
$ vi Peanut.podspec
$ pod spec lint Peanut.podspec
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CocoaPods 是基于 Github 开发的，实践上，我们一般将 Github 上第三方的库 fork 过来，然后修改测试，创建并提交自己的 Podspec：&lt;em&gt;pod trunk push NAME.podspec&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;最后在引入的项目中的 Podfile 更新版本，使用 &lt;em&gt;$ pod update --verbose&lt;/em&gt; 更新。&lt;/p&gt;
&lt;p&gt;更详细的开发工作流请参考 &lt;a class="reference external" href="https://guides.cocoapods.org/contributing/contribute-to-cocoapods.html"&gt;The Development Workflow&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;参考资料&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://guides.cocoapods.org/making/specs-and-specs-repo.html"&gt;Specs and the Specs Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry></feed>